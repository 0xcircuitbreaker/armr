# Makefile.in generated by automake 1.16.1 from Makefile.am.# src/Makefile.  Generated from Makefile.in by configure.# Copyright (C) 1994-2018 Free Software Foundation, Inc.# This Makefile.in is free software; the Free Software Foundation# gives unlimited permission to copy and/or distribute it,# with or without modifications, as long as this notice is preserved.# This program is distributed in the hope that it will be useful,# but WITHOUT ANY WARRANTY, to the extent permitted by law; without# even the implied warranty of MERCHANTABILITY or FITNESS FOR A# PARTICULAR PURPOSE.# Copyright (c) 2016 The Bitcoin Core developers# Copyright (c) 2018 The ARMR developers# Distributed under the MIT software license, see the accompanying# file COPYING or http://www.opensource.org/licenses/mit-license.php.am__is_gnu_make = { \  if test -z '$(MAKELEVEL)'; then \    false; \  elif test -n '$(MAKE_HOST)'; then \    true; \  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \    true; \  else \    false; \  fi; \}am__make_running_with_option = \  case $${target_option-} in \      ?) ;; \      *) echo "am__make_running_with_option: internal error: invalid" \              "target option '$${target_option-}' specified" >&2; \         exit 1;; \  esac; \  has_opt=no; \  sane_makeflags=$$MAKEFLAGS; \  if $(am__is_gnu_make); then \    sane_makeflags=$$MFLAGS; \  else \    case $$MAKEFLAGS in \      *\\[\ \	]*) \        bs=\\; \        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \    esac; \  fi; \  skip_next=no; \  strip_trailopt () \  { \    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \  }; \  for flg in $$sane_makeflags; do \    test $$skip_next = yes && { skip_next=no; continue; }; \    case $$flg in \      *=*|--*) continue;; \        -*I) strip_trailopt 'I'; skip_next=yes;; \      -*I?*) strip_trailopt 'I';; \        -*O) strip_trailopt 'O'; skip_next=yes;; \      -*O?*) strip_trailopt 'O';; \        -*l) strip_trailopt 'l'; skip_next=yes;; \      -*l?*) strip_trailopt 'l';; \      -[dEDm]) skip_next=yes;; \      -[JT]) skip_next=yes;; \    esac; \    case $$flg in \      *$$target_option*) has_opt=yes; break;; \    esac; \  done; \  test $$has_opt = yesam__make_dryrun = (target_option=n; $(am__make_running_with_option))am__make_keepgoing = (target_option=k; $(am__make_running_with_option))pkgdatadir = $(datadir)/armrpkgincludedir = $(includedir)/armrpkglibdir = $(libdir)/armrpkglibexecdir = $(libexecdir)/armram__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cdinstall_sh_DATA = $(install_sh) -c -m 644install_sh_PROGRAM = $(install_sh) -cinstall_sh_SCRIPT = $(install_sh) -cINSTALL_HEADER = $(INSTALL_DATA)transform = $(program_transform_name)NORMAL_INSTALL = :PRE_INSTALL = :POST_INSTALL = :NORMAL_UNINSTALL = :PRE_UNINSTALL = :POST_UNINSTALL = :build_triplet = x86_64-apple-darwin17.7.0host_triplet = x86_64-apple-darwin17.7.0am__append_1 = $(BDB_CPPFLAGS)am__append_2 = libbitcoin_wallet.aam__append_3 = libbitcoin_sse2.abin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)TESTS =am__append_4 = Armrd#am__append_5 = compat/glibc_compat.cpp \#	compat/glibcxx_compat.cppam__append_6 = libbitcoin_sse2.aam__append_7 = libbitcoin_wallet.aam__append_8 = $(LIBLEVELDB_INT) \	$(LIBMEMENV_INT) \	$(LIBLEVELDB_SSE42_INT)am__append_9 = $(LIBLEVELDB_INT)am__append_10 = $(LIBMEMENV_INT)am__append_11 = -I$(srcdir)/leveldb/include \	-I$(srcdir)/leveldb/helpers#am__append_12 = -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1am__append_13 = -DLEVELDB_PLATFORM_POSIX#am__append_14 = leveldb/util/env_win.cc \#	leveldb/port/port_win.ccam__append_15 = leveldb/port/port_posix.ccam__append_16 = qt/ARMR-qtam__append_17 = qt/libbitcoinqt.aam__append_18 = \  qt/aboutdialog.cpp \  qt/addressbookpage.cpp \  qt/addresstablemodel.cpp \  qt/askpassphrasedialog.cpp \  qt/coincontroldialog.cpp \  qt/coincontroltreewidget.cpp \  qt/editaddressdialog.cpp \  qt/overviewpage.cpp \  qt/sendcoinsdialog.cpp \  qt/sendcoinsentry.cpp \  qt/sendmessagesdialog.cpp \  qt/sendmessagesentry.cpp \  qt/messagepage.cpp \  qt/qtipcserver.cpp \  qt/qrcodedialog.cpp \  qt/qvalidatedlineedit.cpp \  qt/qvalidatedtextedit.cpp \  qt/qvaluecombobox.cpp \  qt/plugins/mrichtexteditor/mrichtextedit.cpp \  qt/signverifymessagedialog.cpp \  qt/transactiondesc.cpp \  qt/transactiondescdialog.cpp \  qt/transactionfilterproxy.cpp \  qt/transactionrecord.cpp \  qt/transactiontablemodel.cpp \  qt/transactionview.cpp \  qt/walletmodel.cppam__append_19 = $(BITCOIN_MM)#am__append_20 = $(BITCOIN_RC)am__append_21 = $(LIBBITCOIN_WALLET)#am__append_22 = -lrtam__append_23 = $(CLEAN_QT)subdir = srcACLOCAL_M4 = $(top_srcdir)/aclocal.m4am__aclocal_m4_deps = $(top_srcdir)/src/m4/ax_boost_base.m4 \	$(top_srcdir)/src/m4/ax_boost_chrono.m4 \	$(top_srcdir)/src/m4/ax_boost_filesystem.m4 \	$(top_srcdir)/src/m4/ax_boost_program_options.m4 \	$(top_srcdir)/src/m4/ax_boost_system.m4 \	$(top_srcdir)/src/m4/ax_boost_thread.m4 \	$(top_srcdir)/src/m4/ax_boost_unit_test_framework.m4 \	$(top_srcdir)/src/m4/ax_check_compile_flag.m4 \	$(top_srcdir)/src/m4/ax_check_link_flag.m4 \	$(top_srcdir)/src/m4/ax_check_preproc_flag.m4 \	$(top_srcdir)/src/m4/ax_pthread.m4 \	$(top_srcdir)/src/m4/ax_subdirs_configure.m4 \	$(top_srcdir)/src/m4/bitcoin_find_bdb48.m4 \	$(top_srcdir)/src/m4/bitcoin_qt.m4 \	$(top_srcdir)/src/m4/bitcoin_subdir_to_include.m4 \	$(top_srcdir)/pkg.m4 $(top_srcdir)/configure.acam__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \	$(ACLOCAL_M4)DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)mkinstalldirs = $(install_sh) -dCONFIG_HEADER = $(top_builddir)/src/config/armr-config.hCONFIG_CLEAN_FILES =CONFIG_CLEAN_VPATH_FILES =am__EXEEXT_1 = Armrd$(EXEEXT)am__EXEEXT_2 = qt/ARMR-qt$(EXEEXT)am__installdirs = "$(DESTDIR)$(bindir)"PROGRAMS = $(bin_PROGRAMS)LIBRARIES = $(noinst_LIBRARIES)ARFLAGS = cruAM_V_AR = $(am__v_AR_$(V))am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))am__v_AR_0 = @echo "  AR      " $@;am__v_AR_1 = leveldb_libleveldb_a_AR = $(AR) $(ARFLAGS)leveldb_libleveldb_a_LIBADD =am__leveldb_libleveldb_a_SOURCES_DIST = leveldb/port/atomic_pointer.h \	leveldb/port/port_example.h leveldb/port/port_posix.h \	leveldb/port/win/stdint.h leveldb/port/port.h \	leveldb/port/port_win.h leveldb/port/thread_annotations.h \	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \	leveldb/include/leveldb/comparator.h \	leveldb/include/leveldb/filter_policy.h \	leveldb/include/leveldb/slice.h \	leveldb/include/leveldb/table_builder.h \	leveldb/include/leveldb/env.h leveldb/include/leveldb/c.h \	leveldb/include/leveldb/iterator.h \	leveldb/include/leveldb/cache.h \	leveldb/include/leveldb/dumpfile.h \	leveldb/include/leveldb/table.h \	leveldb/include/leveldb/write_batch.h \	leveldb/include/leveldb/status.h leveldb/db/log_format.h \	leveldb/db/memtable.h leveldb/db/version_set.h \	leveldb/db/write_batch_internal.h leveldb/db/filename.h \	leveldb/db/version_edit.h leveldb/db/dbformat.h \	leveldb/db/builder.h leveldb/db/log_writer.h \	leveldb/db/db_iter.h leveldb/db/skiplist.h \	leveldb/db/db_impl.h leveldb/db/table_cache.h \	leveldb/db/snapshot.h leveldb/db/log_reader.h \	leveldb/table/filter_block.h leveldb/table/block_builder.h \	leveldb/table/block.h leveldb/table/two_level_iterator.h \	leveldb/table/merger.h leveldb/table/format.h \	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \	leveldb/util/env_posix_test_helper.h leveldb/util/arena.h \	leveldb/util/random.h leveldb/util/posix_logger.h \	leveldb/util/hash.h leveldb/util/histogram.h \	leveldb/util/coding.h leveldb/util/testutil.h \	leveldb/util/mutexlock.h leveldb/util/logging.h \	leveldb/util/testharness.h leveldb/db/builder.cc \	leveldb/db/c.cc leveldb/db/dbformat.cc leveldb/db/db_impl.cc \	leveldb/db/db_iter.cc leveldb/db/dumpfile.cc \	leveldb/db/filename.cc leveldb/db/log_reader.cc \	leveldb/db/log_writer.cc leveldb/db/memtable.cc \	leveldb/db/repair.cc leveldb/db/table_cache.cc \	leveldb/db/version_edit.cc leveldb/db/version_set.cc \	leveldb/db/write_batch.cc leveldb/table/block_builder.cc \	leveldb/table/block.cc leveldb/table/filter_block.cc \	leveldb/table/format.cc leveldb/table/iterator.cc \	leveldb/table/merger.cc leveldb/table/table_builder.cc \	leveldb/table/table.cc leveldb/table/two_level_iterator.cc \	leveldb/util/arena.cc leveldb/util/bloom.cc \	leveldb/util/cache.cc leveldb/util/coding.cc \	leveldb/util/comparator.cc leveldb/util/crc32c.cc \	leveldb/util/env.cc leveldb/util/env_posix.cc \	leveldb/util/filter_policy.cc leveldb/util/hash.cc \	leveldb/util/histogram.cc leveldb/util/logging.cc \	leveldb/util/options.cc leveldb/util/status.cc \	leveldb/util/env_win.cc leveldb/port/port_win.cc \	leveldb/port/port_posix.ccam__dirstamp = $(am__leading_dot)dirstamp#am__objects_1 = leveldb/util/libleveldb_a-env_win.$(OBJEXT) \#	leveldb/port/libleveldb_a-port_win.$(OBJEXT)am__objects_2 = leveldb/port/libleveldb_a-port_posix.$(OBJEXT)am_leveldb_libleveldb_a_OBJECTS = leveldb/db/libleveldb_a-builder.$(OBJEXT) \	leveldb/db/libleveldb_a-c.$(OBJEXT) \	leveldb/db/libleveldb_a-dbformat.$(OBJEXT) \	leveldb/db/libleveldb_a-db_impl.$(OBJEXT) \	leveldb/db/libleveldb_a-db_iter.$(OBJEXT) \	leveldb/db/libleveldb_a-dumpfile.$(OBJEXT) \	leveldb/db/libleveldb_a-filename.$(OBJEXT) \	leveldb/db/libleveldb_a-log_reader.$(OBJEXT) \	leveldb/db/libleveldb_a-log_writer.$(OBJEXT) \	leveldb/db/libleveldb_a-memtable.$(OBJEXT) \	leveldb/db/libleveldb_a-repair.$(OBJEXT) \	leveldb/db/libleveldb_a-table_cache.$(OBJEXT) \	leveldb/db/libleveldb_a-version_edit.$(OBJEXT) \	leveldb/db/libleveldb_a-version_set.$(OBJEXT) \	leveldb/db/libleveldb_a-write_batch.$(OBJEXT) \	leveldb/table/libleveldb_a-block_builder.$(OBJEXT) \	leveldb/table/libleveldb_a-block.$(OBJEXT) \	leveldb/table/libleveldb_a-filter_block.$(OBJEXT) \	leveldb/table/libleveldb_a-format.$(OBJEXT) \	leveldb/table/libleveldb_a-iterator.$(OBJEXT) \	leveldb/table/libleveldb_a-merger.$(OBJEXT) \	leveldb/table/libleveldb_a-table_builder.$(OBJEXT) \	leveldb/table/libleveldb_a-table.$(OBJEXT) \	leveldb/table/libleveldb_a-two_level_iterator.$(OBJEXT) \	leveldb/util/libleveldb_a-arena.$(OBJEXT) \	leveldb/util/libleveldb_a-bloom.$(OBJEXT) \	leveldb/util/libleveldb_a-cache.$(OBJEXT) \	leveldb/util/libleveldb_a-coding.$(OBJEXT) \	leveldb/util/libleveldb_a-comparator.$(OBJEXT) \	leveldb/util/libleveldb_a-crc32c.$(OBJEXT) \	leveldb/util/libleveldb_a-env.$(OBJEXT) \	leveldb/util/libleveldb_a-env_posix.$(OBJEXT) \	leveldb/util/libleveldb_a-filter_policy.$(OBJEXT) \	leveldb/util/libleveldb_a-hash.$(OBJEXT) \	leveldb/util/libleveldb_a-histogram.$(OBJEXT) \	leveldb/util/libleveldb_a-logging.$(OBJEXT) \	leveldb/util/libleveldb_a-options.$(OBJEXT) \	leveldb/util/libleveldb_a-status.$(OBJEXT) \	$(am__objects_1) $(am__objects_2)leveldb_libleveldb_a_OBJECTS = $(am_leveldb_libleveldb_a_OBJECTS)leveldb_libmemenv_a_AR = $(AR) $(ARFLAGS)leveldb_libmemenv_a_LIBADD =am__leveldb_libmemenv_a_SOURCES_DIST =  \	leveldb/helpers/memenv/memenv.cc \	leveldb/helpers/memenv/memenv.ham_leveldb_libmemenv_a_OBJECTS = leveldb/helpers/memenv/libmemenv_a-memenv.$(OBJEXT)leveldb_libmemenv_a_OBJECTS = $(am_leveldb_libmemenv_a_OBJECTS)libbitcoin_common_a_AR = $(AR) $(ARFLAGS)libbitcoin_common_a_LIBADD =am__objects_3 =am_libbitcoin_common_a_OBJECTS =  \	libbitcoin_common_a-anonymize.$(OBJEXT) \	libbitcoin_common_a-hash.$(OBJEXT) \	libbitcoin_common_a-key.$(OBJEXT) \	libbitcoin_common_a-netbase.$(OBJEXT) \	libbitcoin_common_a-protocol.$(OBJEXT) \	libbitcoin_common_a-smessage.$(OBJEXT) \	libbitcoin_common_a-script.$(OBJEXT) \	libbitcoin_common_a-stealth.$(OBJEXT) \	libbitcoin_common_a-kernel.$(OBJEXT) \	libbitcoin_common_a-miner.$(OBJEXT) \	libbitcoin_common_a-sync.$(OBJEXT) \	libbitcoin_common_a-util.$(OBJEXT) \	libbitcoin_common_a-version.$(OBJEXT) \	libbitcoin_common_a-aes_helper.$(OBJEXT) \	libbitcoin_common_a-blake.$(OBJEXT) \	libbitcoin_common_a-bmw.$(OBJEXT) \	libbitcoin_common_a-cubehash.$(OBJEXT) \	libbitcoin_common_a-fugue.$(OBJEXT) \	libbitcoin_common_a-echo.$(OBJEXT) \	libbitcoin_common_a-groestl.$(OBJEXT) \	libbitcoin_common_a-hamsi_helper.$(OBJEXT) \	libbitcoin_common_a-hamsi.$(OBJEXT) \	libbitcoin_common_a-jh.$(OBJEXT) \	libbitcoin_common_a-keccak.$(OBJEXT) \	libbitcoin_common_a-luffa.$(OBJEXT) \	libbitcoin_common_a-shavite.$(OBJEXT) \	libbitcoin_common_a-simd.$(OBJEXT) \	libbitcoin_common_a-skein.$(OBJEXT) \	xxhash/libbitcoin_common_a-xxhash.$(OBJEXT) \	lz4/libbitcoin_common_a-lz4.$(OBJEXT) $(am__objects_3)libbitcoin_common_a_OBJECTS = $(am_libbitcoin_common_a_OBJECTS)libbitcoin_server_a_AR = $(AR) $(ARFLAGS)libbitcoin_server_a_LIBADD =am_libbitcoin_server_a_OBJECTS =  \	libbitcoin_server_a-addrman.$(OBJEXT) \	libbitcoin_server_a-alert.$(OBJEXT) \	libbitcoin_server_a-bloom.$(OBJEXT) \	libbitcoin_server_a-checkpoints.$(OBJEXT) \	libbitcoin_server_a-init.$(OBJEXT) \	libbitcoin_server_a-db.$(OBJEXT) \	libbitcoin_server_a-txdb-leveldb.$(OBJEXT) \	libbitcoin_server_a-bitcoinrpc.$(OBJEXT) \	libbitcoin_server_a-keystore.$(OBJEXT) \	libbitcoin_server_a-main.$(OBJEXT) \	libbitcoin_server_a-noui.$(OBJEXT) \	libbitcoin_server_a-net.$(OBJEXT) \	libbitcoin_server_a-rpcblockchain.$(OBJEXT) \	libbitcoin_server_a-rpcmining.$(OBJEXT) \	libbitcoin_server_a-rpcnet.$(OBJEXT) \	libbitcoin_server_a-rpcrawtransaction.$(OBJEXT) \	libbitcoin_server_a-rpcsmessage.$(OBJEXT) \	libbitcoin_server_a-script.$(OBJEXT) $(am__objects_3) \	$(am__objects_3)libbitcoin_server_a_OBJECTS = $(am_libbitcoin_server_a_OBJECTS)libbitcoin_sse2_a_AR = $(AR) $(ARFLAGS)libbitcoin_sse2_a_LIBADD =am__libbitcoin_sse2_a_SOURCES_DIST = scrypt-sse2.cppam_libbitcoin_sse2_a_OBJECTS =  \	libbitcoin_sse2_a-scrypt-sse2.$(OBJEXT)libbitcoin_sse2_a_OBJECTS = $(am_libbitcoin_sse2_a_OBJECTS)libbitcoin_util_a_AR = $(AR) $(ARFLAGS)libbitcoin_util_a_LIBADD =am__libbitcoin_util_a_SOURCES_DIST = sync.cpp util.cpp anonymize.h \	addrman.h alert.h allocators.h base58.h bignum.h bloom.h \	checkpoints.h checkqueue.h coincontrol.h compat.h crypter.h \	lz4/lz4.h db.h hash.h hashblock.h init.h key.h keystore.h \	limitedmap.h main.h miner.h mruset.h netbase.h net.h \	protocol.h rpcclient.h script.h serialize.h smessage.h \	stealth.h sync.h threadsafety.h tinyformat.h txdb-leveldb.h \	ui_interface.h uint256.h util.h scrypt.h strlcpy.h version.h \	walletdb.h wallet.h sph_blake.h sph_bmw.h sph_cubehash.h \	sph_echo.h sph_fugue.h sph_groestl.h sph_hamsi.h sph_jh.h \	sph_keccak.h sph_luffa.h sph_shavite.h sph_simd.h sph_skein.h \	sph_types.h xxhash/xxhash.h pbkdf2.h compat/glibc_compat.cpp \	compat/glibcxx_compat.cpp#am__objects_4 = compat/libbitcoin_util_a-glibc_compat.$(OBJEXT) \#	compat/libbitcoin_util_a-glibcxx_compat.$(OBJEXT)am_libbitcoin_util_a_OBJECTS = libbitcoin_util_a-sync.$(OBJEXT) \	libbitcoin_util_a-util.$(OBJEXT) $(am__objects_3) \	$(am__objects_4)nodist_libbitcoin_util_a_OBJECTS =libbitcoin_util_a_OBJECTS = $(am_libbitcoin_util_a_OBJECTS) \	$(nodist_libbitcoin_util_a_OBJECTS)libbitcoin_wallet_a_AR = $(AR) $(ARFLAGS)libbitcoin_wallet_a_LIBADD =am_libbitcoin_wallet_a_OBJECTS =  \	libbitcoin_wallet_a-crypter.$(OBJEXT) \	libbitcoin_wallet_a-scrypt.$(OBJEXT) \	libbitcoin_wallet_a-scrypt-sse2.$(OBJEXT) \	libbitcoin_wallet_a-pbkdf2.$(OBJEXT) \	libbitcoin_wallet_a-rpcdump.$(OBJEXT) \	libbitcoin_wallet_a-rpcwallet.$(OBJEXT) \	libbitcoin_wallet_a-rpcsmessage.$(OBJEXT) \	libbitcoin_wallet_a-wallet.$(OBJEXT) \	libbitcoin_wallet_a-walletdb.$(OBJEXT) \	libbitcoin_wallet_a-stealth.$(OBJEXT) $(am__objects_3)libbitcoin_wallet_a_OBJECTS = $(am_libbitcoin_wallet_a_OBJECTS)qt_libbitcoinqt_a_AR = $(AR) $(ARFLAGS)qt_libbitcoinqt_a_LIBADD =am__qt_libbitcoinqt_a_SOURCES_DIST = qt/bitcoin.cpp \	qt/bitcoinaddressvalidator.cpp qt/bitcoinamountfield.cpp \	qt/bitcoingui.cpp qt/bitcoinunits.cpp qt/clientmodel.cpp \	qt/csvmodelwriter.cpp qt/guiutil.cpp \	qt/monitoreddatamapper.cpp qt/notificator.cpp \	qt/optionsdialog.cpp qt/optionsmodel.cpp qt/messagemodel.cpp \	qt/rpcconsole.cpp qt/aboutdialog.cpp qt/addressbookpage.cpp \	qt/addresstablemodel.cpp qt/askpassphrasedialog.cpp \	qt/coincontroldialog.cpp qt/coincontroltreewidget.cpp \	qt/editaddressdialog.cpp qt/overviewpage.cpp \	qt/sendcoinsdialog.cpp qt/sendcoinsentry.cpp \	qt/sendmessagesdialog.cpp qt/sendmessagesentry.cpp \	qt/messagepage.cpp qt/qtipcserver.cpp qt/qrcodedialog.cpp \	qt/qvalidatedlineedit.cpp qt/qvalidatedtextedit.cpp \	qt/qvaluecombobox.cpp \	qt/plugins/mrichtexteditor/mrichtextedit.cpp \	qt/signverifymessagedialog.cpp qt/transactiondesc.cpp \	qt/transactiondescdialog.cpp qt/transactionfilterproxy.cpp \	qt/transactionrecord.cpp qt/transactiontablemodel.cpp \	qt/transactionview.cpp qt/walletmodel.cpp qt/aboutdialog.h \	qt/addressbookpage.h qt/addresstablemodel.h \	qt/askpassphrasedialog.h qt/bitcoinaddressvalidator.h \	qt/bitcoinamountfield.h qt/bitcoingui.h qt/bitcoinunits.h \	qt/clientmodel.h qt/coincontroldialog.h \	qt/coincontroltreewidget.h qt/csvmodelwriter.h \	qt/editaddressdialog.h qt/guiconstants.h qt/guiutil.h \	qt/macdockiconhandler.h qt/macnotificationhandler.h \	qt/messagemodel.h qt/messagepage.h qt/monitoreddatamapper.h \	qt/notificator.h qt/optionsdialog.h qt/optionsmodel.h \	qt/overviewpage.h qt/qtipcserver.h qt/qvalidatedlineedit.h \	qt/qvalidatedtextedit.h qt/qvaluecombobox.h qt/qrcodedialog.h \	qt/rpcconsole.h qt/sendcoinsdialog.h qt/sendcoinsentry.h \	qt/sendmessagesdialog.h qt/sendmessagesentry.h \	qt/signverifymessagedialog.h qt/transactiondesc.h \	qt/transactiondescdialog.h qt/transactionfilterproxy.h \	qt/transactionrecord.h qt/transactiontablemodel.h \	qt/transactionview.h qt/walletmodel.h \	qt/plugins/mrichtexteditor/mrichtextedit.h \	qt/forms/aboutdialog.ui qt/forms/addressbookpage.ui \	qt/forms/askpassphrasedialog.ui qt/forms/coincontroldialog.ui \	qt/forms/editaddressdialog.ui qt/forms/messagepage.ui \	qt/forms/optionsdialog.ui qt/forms/overviewpage.ui \	qt/forms/qrcodedialog.ui qt/forms/rpcconsole.ui \	qt/forms/sendcoinsdialog.ui qt/forms/sendcoinsentry.ui \	qt/forms/sendmessagesdialog.ui qt/forms/sendmessagesentry.ui \	qt/forms/signverifymessagedialog.ui \	qt/forms/transactiondescdialog.ui \	qt/plugins/mrichtexteditor/mrichtextedit.ui qt/bitcoin.qrc \	qt/bitcoin_locale.qrc qt/locale/bitcoin_en.ts \	qt/locale/bitcoin_fr.ts qt/locale/bitcoin_sc.ts \	qt/locale/bitcoin_ru.ts qt/res/icons/add.png \	qt/res/icons/address-book.png qt/res/icons/armr.ico \	qt/res/icons/armr.png qt/res/icons/armr_testnet.png \	qt/res/icons/clock1.png qt/res/icons/clock2.png \	qt/res/icons/clock3.png qt/res/icons/clock4.png \	qt/res/icons/clock5.png qt/res/icons/configure.png \	qt/res/icons/connect0_16.png qt/res/icons/connect1_16.png \	qt/res/icons/connect2_16.png qt/res/icons/connect3_16.png \	qt/res/icons/connect4_16.png qt/res/icons/debugwindow.png \	qt/res/icons/edit.png qt/res/icons/editcopy.png \	qt/res/icons/editpaste.png qt/res/icons/export.png \	qt/res/icons/filesave.png qt/res/icons/history.png \	qt/res/icons/key.png qt/res/icons/lock_closed.png \	qt/res/icons/lock_open.png qt/res/icons/message.png \	qt/res/icons/notsynced.png qt/res/icons/onion_logo_16x16.png \	qt/res/icons/overview.png qt/res/icons/qtlogo-64.png \	qt/res/icons/qrcode.png qt/res/icons/quit.png \	qt/res/icons/receive.png qt/res/icons/remove.png \	qt/res/icons/send.png qt/res/icons/synced.png \	qt/res/icons/staking_on.png qt/res/icons/staking_off.png \	qt/res/icons/tor.png qt/res/icons/tor2.png \	qt/res/icons/toolbar.png qt/res/icons/toolbar_testnet.png \	qt/res/icons/transaction0.png qt/res/icons/transaction2.png \	qt/res/icons/transaction_conflicted.png \	qt/res/icons/tx_inout.png qt/res/icons/tx_input.png \	qt/res/icons/tx_output.png qt/res/icons/tx_mined.png \	qt/res/images/about.png qt/res/images/splash.png \	qt/res/images/splash_testnet.png qt/res/images/wallet.png \	$(wildcard qt/res/movies/update-spinner.mng)am__objects_5 = qt/libbitcoinqt_a-aboutdialog.$(OBJEXT) \	qt/libbitcoinqt_a-addressbookpage.$(OBJEXT) \	qt/libbitcoinqt_a-addresstablemodel.$(OBJEXT) \	qt/libbitcoinqt_a-askpassphrasedialog.$(OBJEXT) \	qt/libbitcoinqt_a-coincontroldialog.$(OBJEXT) \	qt/libbitcoinqt_a-coincontroltreewidget.$(OBJEXT) \	qt/libbitcoinqt_a-editaddressdialog.$(OBJEXT) \	qt/libbitcoinqt_a-overviewpage.$(OBJEXT) \	qt/libbitcoinqt_a-sendcoinsdialog.$(OBJEXT) \	qt/libbitcoinqt_a-sendcoinsentry.$(OBJEXT) \	qt/libbitcoinqt_a-sendmessagesdialog.$(OBJEXT) \	qt/libbitcoinqt_a-sendmessagesentry.$(OBJEXT) \	qt/libbitcoinqt_a-messagepage.$(OBJEXT) \	qt/libbitcoinqt_a-qtipcserver.$(OBJEXT) \	qt/libbitcoinqt_a-qrcodedialog.$(OBJEXT) \	qt/libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT) \	qt/libbitcoinqt_a-qvalidatedtextedit.$(OBJEXT) \	qt/libbitcoinqt_a-qvaluecombobox.$(OBJEXT) \	qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.$(OBJEXT) \	qt/libbitcoinqt_a-signverifymessagedialog.$(OBJEXT) \	qt/libbitcoinqt_a-transactiondesc.$(OBJEXT) \	qt/libbitcoinqt_a-transactiondescdialog.$(OBJEXT) \	qt/libbitcoinqt_a-transactionfilterproxy.$(OBJEXT) \	qt/libbitcoinqt_a-transactionrecord.$(OBJEXT) \	qt/libbitcoinqt_a-transactiontablemodel.$(OBJEXT) \	qt/libbitcoinqt_a-transactionview.$(OBJEXT) \	qt/libbitcoinqt_a-walletmodel.$(OBJEXT)am__objects_6 = qt/libbitcoinqt_a-bitcoin.$(OBJEXT) \	qt/libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT) \	qt/libbitcoinqt_a-bitcoinamountfield.$(OBJEXT) \	qt/libbitcoinqt_a-bitcoingui.$(OBJEXT) \	qt/libbitcoinqt_a-bitcoinunits.$(OBJEXT) \	qt/libbitcoinqt_a-clientmodel.$(OBJEXT) \	qt/libbitcoinqt_a-csvmodelwriter.$(OBJEXT) \	qt/libbitcoinqt_a-guiutil.$(OBJEXT) \	qt/libbitcoinqt_a-monitoreddatamapper.$(OBJEXT) \	qt/libbitcoinqt_a-notificator.$(OBJEXT) \	qt/libbitcoinqt_a-optionsdialog.$(OBJEXT) \	qt/libbitcoinqt_a-optionsmodel.$(OBJEXT) \	qt/libbitcoinqt_a-messagemodel.$(OBJEXT) \	qt/libbitcoinqt_a-rpcconsole.$(OBJEXT) \	$(am__objects_5)am_qt_libbitcoinqt_a_OBJECTS = $(am__objects_6) \	$(am__objects_3) $(am__objects_3) \	$(am__objects_3) $(am__objects_3) \	$(am__objects_3) $(am__objects_3) \	$(am__objects_3) $(am__objects_3)am__objects_7 =  \	qt/libbitcoinqt_a-moc_aboutdialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_addressbookpage.$(OBJEXT) \	qt/libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT) \	qt/libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT) \	qt/libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT) \	qt/libbitcoinqt_a-moc_bitcoingui.$(OBJEXT) \	qt/libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT) \	qt/libbitcoinqt_a-moc_clientmodel.$(OBJEXT) \	qt/libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT) \	qt/libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT) \	qt/libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_guiutil.$(OBJEXT) \	qt/libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT) \	qt/libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT) \	qt/libbitcoinqt_a-moc_monitoreddatamapper.$(OBJEXT) \	qt/libbitcoinqt_a-moc_messagepage.$(OBJEXT) \	qt/libbitcoinqt_a-moc_messagemodel.$(OBJEXT) \	qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.$(OBJEXT) \	qt/libbitcoinqt_a-moc_notificator.$(OBJEXT) \	qt/libbitcoinqt_a-moc_optionsdialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_optionsmodel.$(OBJEXT) \	qt/libbitcoinqt_a-moc_overviewpage.$(OBJEXT) \	qt/libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT) \	qt/libbitcoinqt_a-moc_qvalidatedtextedit.$(OBJEXT) \	qt/libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT) \	qt/libbitcoinqt_a-moc_qrcodedialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_rpcconsole.$(OBJEXT) \	qt/libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT) \	qt/libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_sendmessagesdialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_sendmessagesentry.$(OBJEXT) \	qt/libbitcoinqt_a-moc_transactiondesc.$(OBJEXT) \	qt/libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT) \	qt/libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT) \	qt/libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT) \	qt/libbitcoinqt_a-moc_transactionview.$(OBJEXT) \	qt/libbitcoinqt_a-moc_walletmodel.$(OBJEXT)am__objects_8 =  \	qt/libbitcoinqt_a-qrc_bitcoin.$(OBJEXT)am__objects_9 = qt/libbitcoinqt_a-qrc_bitcoin_locale.$(OBJEXT)nodist_qt_libbitcoinqt_a_OBJECTS = $(am__objects_7) \	$(am__objects_3) $(am__objects_8) \	$(am__objects_9)qt_libbitcoinqt_a_OBJECTS = $(am_qt_libbitcoinqt_a_OBJECTS) \	$(nodist_qt_libbitcoinqt_a_OBJECTS)am_Armrd_OBJECTS = Armrd-daemon.$(OBJEXT)Armrd_OBJECTS = $(am_Armrd_OBJECTS)am__DEPENDENCIES_1 = $(am__append_9)am__DEPENDENCIES_2 = $(am__append_10)am__DEPENDENCIES_3 =Armrd_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \	$(LIBBITCOIN_UTIL) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \	$(am__append_6) $(am__append_7) ../tor/src/or/libtor.a \	../tor/src/common/libor.a ../tor/src/common/libor-ctime.a \	../tor/src/common/libor-crypto.a \	../tor/src/common/libor-event.a \	../tor/src/trunnel/libor-trunnel.a \	../tor/src/common/libcurve25519_donna.a \	../tor/src/ext/ed25519/donna/libed25519_donna.a \	../tor/src/ext/ed25519/ref10/libed25519_ref10.a \	../tor/src/ext/keccak-tiny/libkeccak-tiny.a \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)am__qt_ARMR_qt_SOURCES_DIST = qt/bitcoin.cpp qt/macdockiconhandler.mm \	qt/macnotificationhandler.mm qt/res/bitcoin-qt.rcam__objects_10 =  \	qt/ARMR_qt-macdockiconhandler.$(OBJEXT) \	qt/ARMR_qt-macnotificationhandler.$(OBJEXT)am__objects_11 =  \	$(am__objects_10)am__objects_12 = qt/res/bitcoin-qt.$(OBJEXT)#am__objects_13 =  \#	$(am__objects_12)am_qt_ARMR_qt_OBJECTS = qt/ARMR_qt-bitcoin.$(OBJEXT) \	$(am__objects_11) $(am__objects_13)qt_ARMR_qt_OBJECTS = $(am_qt_ARMR_qt_OBJECTS)qt_ARMR_qt_DEPENDENCIES = qt/libbitcoinqt.a \	$(LIBBITCOIN_SERVER) $(am__append_21) \	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	../tor/src/or/libtor.a \	../tor/src/common/libor.a \	../tor/src/common/libor-ctime.a \	../tor/src/common/libor-crypto.a \	../tor/src/common/libor-event.a \	../tor/src/trunnel/libor-trunnel.a \	../tor/src/common/libcurve25519_donna.a \	../tor/src/ext/ed25519/donna/libed25519_donna.a \	../tor/src/ext/ed25519/ref10/libed25519_ref10.a \	../tor/src/ext/keccak-tiny/libkeccak-tiny.a \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \	$(am__DEPENDENCIES_3)qt_ARMR_qt_LINK = $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \	$(qt_ARMR_qt_LDFLAGS) $(LDFLAGS) -o $@AM_V_P = $(am__v_P_$(V))am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))am__v_P_0 = falseam__v_P_1 = :AM_V_GEN = $(am__v_GEN_$(V))am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))am__v_GEN_0 = @echo "  GEN     " $@;am__v_GEN_1 = AM_V_at = $(am__v_at_$(V))am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))am__v_at_0 = @am__v_at_1 = DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/configdepcomp = $(SHELL) $(top_srcdir)/src/build-aux/depcompam__maybe_remake_depfiles = depfilesam__depfiles_remade = ./$(DEPDIR)/Armrd-daemon.Po \	./$(DEPDIR)/libbitcoin_common_a-aes_helper.Po \	./$(DEPDIR)/libbitcoin_common_a-anonymize.Po \	./$(DEPDIR)/libbitcoin_common_a-blake.Po \	./$(DEPDIR)/libbitcoin_common_a-bmw.Po \	./$(DEPDIR)/libbitcoin_common_a-cubehash.Po \	./$(DEPDIR)/libbitcoin_common_a-echo.Po \	./$(DEPDIR)/libbitcoin_common_a-fugue.Po \	./$(DEPDIR)/libbitcoin_common_a-groestl.Po \	./$(DEPDIR)/libbitcoin_common_a-hamsi.Po \	./$(DEPDIR)/libbitcoin_common_a-hamsi_helper.Po \	./$(DEPDIR)/libbitcoin_common_a-hash.Po \	./$(DEPDIR)/libbitcoin_common_a-jh.Po \	./$(DEPDIR)/libbitcoin_common_a-keccak.Po \	./$(DEPDIR)/libbitcoin_common_a-kernel.Po \	./$(DEPDIR)/libbitcoin_common_a-key.Po \	./$(DEPDIR)/libbitcoin_common_a-luffa.Po \	./$(DEPDIR)/libbitcoin_common_a-miner.Po \	./$(DEPDIR)/libbitcoin_common_a-netbase.Po \	./$(DEPDIR)/libbitcoin_common_a-protocol.Po \	./$(DEPDIR)/libbitcoin_common_a-script.Po \	./$(DEPDIR)/libbitcoin_common_a-shavite.Po \	./$(DEPDIR)/libbitcoin_common_a-simd.Po \	./$(DEPDIR)/libbitcoin_common_a-skein.Po \	./$(DEPDIR)/libbitcoin_common_a-smessage.Po \	./$(DEPDIR)/libbitcoin_common_a-stealth.Po \	./$(DEPDIR)/libbitcoin_common_a-sync.Po \	./$(DEPDIR)/libbitcoin_common_a-util.Po \	./$(DEPDIR)/libbitcoin_common_a-version.Po \	./$(DEPDIR)/libbitcoin_server_a-addrman.Po \	./$(DEPDIR)/libbitcoin_server_a-alert.Po \	./$(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po \	./$(DEPDIR)/libbitcoin_server_a-bloom.Po \	./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po \	./$(DEPDIR)/libbitcoin_server_a-db.Po \	./$(DEPDIR)/libbitcoin_server_a-init.Po \	./$(DEPDIR)/libbitcoin_server_a-keystore.Po \	./$(DEPDIR)/libbitcoin_server_a-main.Po \	./$(DEPDIR)/libbitcoin_server_a-net.Po \	./$(DEPDIR)/libbitcoin_server_a-noui.Po \	./$(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po \	./$(DEPDIR)/libbitcoin_server_a-rpcmining.Po \	./$(DEPDIR)/libbitcoin_server_a-rpcnet.Po \	./$(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po \	./$(DEPDIR)/libbitcoin_server_a-rpcsmessage.Po \	./$(DEPDIR)/libbitcoin_server_a-script.Po \	./$(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Po \	./$(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Po \	./$(DEPDIR)/libbitcoin_util_a-sync.Po \	./$(DEPDIR)/libbitcoin_util_a-util.Po \	./$(DEPDIR)/libbitcoin_wallet_a-crypter.Po \	./$(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po \	./$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po \	./$(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Po \	./$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po \	./$(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Po \	./$(DEPDIR)/libbitcoin_wallet_a-scrypt.Po \	./$(DEPDIR)/libbitcoin_wallet_a-stealth.Po \	./$(DEPDIR)/libbitcoin_wallet_a-wallet.Po \	./$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po \	compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po \	compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-c.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po \	leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po \	leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po \	leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Po \	leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-block.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-format.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-table.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po \	leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-env.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-options.Po \	leveldb/util/$(DEPDIR)/libleveldb_a-status.Po \	lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Po \	qt/$(DEPDIR)/ARMR_qt-bitcoin.Po \	qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Po \	qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Po \	qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po \	qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Po \	qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po \	qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po \	qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po \	qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po \	qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po \	qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po \	qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Po \	qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po \	qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po \	qt/$(DEPDIR)/libbitcoinqt_a-notificator.Po \	qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Po \	qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po \	qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po \	qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po \	qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Po \	qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po \	qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po \	qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po \	qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po \	qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po \	qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Po \	qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Po \	qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Po \	qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Po \	xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Poam__mv = mv -fAM_V_lt = $(am__v_lt_$(V))am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))am__v_lt_0 = --silentam__v_lt_1 = COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)AM_V_CC = $(am__v_CC_$(V))am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))am__v_CC_0 = @echo "  CC      " $@;am__v_CC_1 = CCLD = $(CC)LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@AM_V_CCLD = $(am__v_CCLD_$(V))am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))am__v_CCLD_0 = @echo "  CCLD    " $@;am__v_CCLD_1 = CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)AM_V_CXX = $(am__v_CXX_$(V))am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))am__v_CXX_0 = @echo "  CXX     " $@;am__v_CXX_1 = CXXLD = $(CXX)CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \	-o $@AM_V_CXXLD = $(am__v_CXXLD_$(V))am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))am__v_CXXLD_0 = @echo "  CXXLD   " $@;am__v_CXXLD_1 = OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)AM_V_OBJCXX = $(am__v_OBJCXX_$(V))am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;am__v_OBJCXX_1 = OBJCXXLD = $(OBJCXX)OBJCXXLINK = $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \	$(AM_LDFLAGS) $(LDFLAGS) -o $@AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;am__v_OBJCXXLD_1 = SOURCES = $(leveldb_libleveldb_a_SOURCES) \	$(leveldb_libmemenv_a_SOURCES) $(libbitcoin_common_a_SOURCES) \	$(libbitcoin_server_a_SOURCES) $(libbitcoin_sse2_a_SOURCES) \	$(libbitcoin_util_a_SOURCES) \	$(nodist_libbitcoin_util_a_SOURCES) \	$(libbitcoin_wallet_a_SOURCES) $(qt_libbitcoinqt_a_SOURCES) \	$(nodist_qt_libbitcoinqt_a_SOURCES) $(Armrd_SOURCES) \	$(qt_ARMR_qt_SOURCES)DIST_SOURCES = $(am__leveldb_libleveldb_a_SOURCES_DIST) \	$(am__leveldb_libmemenv_a_SOURCES_DIST) \	$(libbitcoin_common_a_SOURCES) $(libbitcoin_server_a_SOURCES) \	$(am__libbitcoin_sse2_a_SOURCES_DIST) \	$(am__libbitcoin_util_a_SOURCES_DIST) \	$(libbitcoin_wallet_a_SOURCES) \	$(am__qt_libbitcoinqt_a_SOURCES_DIST) $(Armrd_SOURCES) \	$(am__qt_ARMR_qt_SOURCES_DIST)am__can_run_installinfo = \  case $$AM_UPDATE_INFO_DIR in \    n|no|NO) false;; \    *) (install-info --version) >/dev/null 2>&1;; \  esacam__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)# Read a list of newline-separated strings from the standard input,# and print each of them once, without duplicates.  Input order is# *not* preserved.am__uniquify_input = $(AWK) '\  BEGIN { nonempty = 0; } \  { items[$$0] = 1; nonempty = 1; } \  END { if (nonempty) { for (i in items) print i; }; } \'# Make sure the list of sources is unique.  This is necessary because,# e.g., the same source file might be shared among _SOURCES variables# for different programs/libraries.am__define_uniq_tagged_files = \  list='$(am__tagged_files)'; \  unique=`for i in $$list; do \    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \  done | $(am__uniquify_input)`ETAGS = etagsCTAGS = ctagsam__tty_colors_dummy = \  mgn= red= grn= lgn= blu= brg= std=; \  am__color_tests=noam__tty_colors = { \  $(am__tty_colors_dummy); \  if test "X$(AM_COLOR_TESTS)" = Xno; then \    am__color_tests=no; \  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \    am__color_tests=yes; \  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \    am__color_tests=yes; \  fi; \  if test $$am__color_tests = yes; then \    red='[0;31m'; \    grn='[0;32m'; \    lgn='[1;32m'; \    blu='[1;34m'; \    mgn='[0;35m'; \    brg='[1m'; \    std='[m'; \  fi; \}am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;am__vpath_adj = case $$p in \    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \    *) f=$$p;; \  esac;am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;am__install_max = 40am__nobase_strip_setup = \  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`am__nobase_strip = \  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"am__nobase_list = $(am__nobase_strip_setup); \  for p in $$list; do echo "$$p $$p"; done | \  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \    if (++n[$$2] == $(am__install_max)) \      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \    END { for (dir in files) print dir, files[dir] }'am__base_list = \  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'am__uninstall_files_from_dir = { \  test -z "$$files" \    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \         $(am__cd) "$$dir" && rm -f $$files; }; \  }am__recheck_rx = ^[ 	]*:recheck:[ 	]*am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*# A command that, given a newline-separated list of test names on the# standard input, print the name of the tests that are to be re-run# upon "make recheck".am__list_recheck_tests = $(AWK) '{ \  recheck = 1; \  while ((rc = (getline line < ($$0 ".trs"))) != 0) \    { \      if (rc < 0) \        { \          if ((getline line2 < ($$0 ".log")) < 0) \	    recheck = 0; \          break; \        } \      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \        { \          recheck = 0; \          break; \        } \      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \        { \          break; \        } \    }; \  if (recheck) \    print $$0; \  close ($$0 ".trs"); \  close ($$0 ".log"); \}'# A command that, given a newline-separated list of test names on the# standard input, create the global log from their .trs and .log files.am__create_global_log = $(AWK) ' \function fatal(msg) \{ \  print "fatal: making $@: " msg | "cat >&2"; \  exit 1; \} \function rst_section(header) \{ \  print header; \  len = length(header); \  for (i = 1; i <= len; i = i + 1) \    printf "="; \  printf "\n\n"; \} \{ \  copy_in_global_log = 1; \  global_test_result = "RUN"; \  while ((rc = (getline line < ($$0 ".trs"))) != 0) \    { \      if (rc < 0) \         fatal("failed to read from " $$0 ".trs"); \      if (line ~ /$(am__global_test_result_rx)/) \        { \          sub("$(am__global_test_result_rx)", "", line); \          sub("[ 	]*$$", "", line); \          global_test_result = line; \        } \      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \        copy_in_global_log = 0; \    }; \  if (copy_in_global_log) \    { \      rst_section(global_test_result ": " $$0); \      while ((rc = (getline line < ($$0 ".log"))) != 0) \      { \        if (rc < 0) \          fatal("failed to read from " $$0 ".log"); \        print line; \      }; \      printf "\n"; \    }; \  close ($$0 ".trs"); \  close ($$0 ".log"); \}'# Restructured Text title.am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }# Solaris 10 'make', and several other traditional 'make' implementations,# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it# by disabling -e (using the XSI extension "set +e") if it's set.am__sh_e_setup = case $$- in *e*) set +e;; esac# Default flags passed to test drivers.am__common_driver_flags = \  --color-tests "$$am__color_tests" \  --enable-hard-errors "$$am__enable_hard_errors" \  --expect-failure "$$am__expect_failure"# To be inserted before the command running the test.  Creates the# directory for the log if needed.  Stores in $dir the directory# containing $f, in $tst the test, in $log the log.  Executes the# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that# will run the test scripts (or their associated LOG_COMPILER, if# thy have one).am__check_pre = \$(am__sh_e_setup);					\$(am__vpath_adj_setup) $(am__vpath_adj)			\$(am__tty_colors);					\srcdir=$(srcdir); export srcdir;			\case "$@" in						\  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\    *) am__odir=.;; 					\esac;							\test "x$$am__odir" = x"." || test -d "$$am__odir" 	\  || $(MKDIR_P) "$$am__odir" || exit $$?;		\if test -f "./$$f"; then dir=./;			\elif test -f "$$f"; then dir=;				\else dir="$(srcdir)/"; fi;				\tst=$$dir$$f; log='$@'; 				\if test -n '$(DISABLE_HARD_ERRORS)'; then		\  am__enable_hard_errors=no; 				\else							\  am__enable_hard_errors=yes; 				\fi; 							\case " $(XFAIL_TESTS) " in				\  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \    am__expect_failure=yes;;				\  *)							\    am__expect_failure=no;;				\esac; 							\$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)# A shell command to get the names of the tests scripts with any registered# extension removed (i.e., equivalently, the names of the test logs, with# the '.log' extension removed).  The result is saved in the shell variable# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",# since that might cause problem with VPATH rewrites for suffix-less tests.# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.am__set_TESTS_bases = \  bases='$(TEST_LOGS)'; \  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \  bases=`echo $$bases`RECHECK_LOGS = $(TEST_LOGS)AM_RECURSIVE_TARGETS = check recheckTEST_SUITE_LOG = test-suite.logTEST_EXTENSIONS =  .testam__test_logs1 = $(TESTS:=.log)am__test_logs2 = $(am__test_logs1:.log=.log)TEST_LOGS = $(am__test_logs2:.test.log=.log)TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/src/build-aux/test-driverTEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \	$(TEST_LOG_FLAGS)am__set_b = \  case '$@' in \    */*) \      case '$*' in \        */*) b='$*';; \          *) b=`echo '$@' | sed 's/\.log$$//'`; \       esac;; \    *) \      b='$*';; \  esacam__DIST_COMMON = $(srcdir)/Makefile.in \	$(srcdir)/Makefile.leveldb.include \	$(srcdir)/Makefile.qt.include \	$(top_srcdir)/src/build-aux/depcomp \	$(top_srcdir)/src/build-aux/test-driverDISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)ACLOCAL = ${SHELL} /Users/martinthygesenGL/ARMR/armr/src/build-aux/missing aclocal-1.16AMTAR = $${TAR-tar}AM_DEFAULT_VERBOSITY = 0AR = /usr/bin/arAUTOCONF = ${SHELL} /Users/martinthygesenGL/ARMR/armr/src/build-aux/missing autoconfAUTOHEADER = ${SHELL} /Users/martinthygesenGL/ARMR/armr/src/build-aux/missing autoheaderAUTOMAKE = ${SHELL} /Users/martinthygesenGL/ARMR/armr/src/build-aux/missing automake-1.16AWK = awkBDB_CPPFLAGS = BDB_LIBS = -ldb_cxx-4.8BOOST_CHRONO_LIB = -lboost_chrono-mt BOOST_CPPFLAGS = -pthread -I/usr/local/includeBOOST_FILESYSTEM_LIB = -lboost_filesystemBOOST_LDFLAGS = -L/usr/local/libBOOST_LIBS = -L/usr/local/lib -lboost_system -lboost_filesystem -lboost_program_options-mt -lboost_thread-mt -lboost_chrono-mt BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mtBOOST_SYSTEM_LIB = -lboost_systemBOOST_THREAD_LIB = -lboost_thread-mtBOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mtBREW = brewBUILD_QT = qtBUILD_TEST = testBUILD_TEST_QT = testCC = gccCCACHE = CCDEPMODE = depmode=noneCFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -std=c99 -DHAVE_BUILD_INFO  -Wstack-protector -fstack-protector-all -fPIE -fPICCLIENT_VERSION_BUILD = 0CLIENT_VERSION_IS_RELEASE = trueCLIENT_VERSION_MAJOR = 1CLIENT_VERSION_MINOR = 6CLIENT_VERSION_REVISION = 1COMPARISON_TOOL_REORG_TESTS = 0COPYRIGHT_YEAR = 2018CPP = gcc -ECPPFLAGS =  -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -I/usr/local/opt/berkeley-db@4/include -DMAC_OSX  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2CRYPTO_CFLAGS = -I/usr/local/Cellar/openssl/1.0.2o_1/includeCRYPTO_LIBS = -L/usr/local/Cellar/openssl/1.0.2o_1/lib -lcryptoCXX = g++CXXCPP = g++ -ECXXDEPMODE = depmode=noneCXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fstack-protector-all -fPIE -fPICCYGPATH_W = echoDEFS = -DHAVE_CONFIG_HDEPDIR = .depsECHO_C = \cECHO_N = ECHO_T = EGREP = /usr/bin/grep -EEXEEXT = GCOV = /usr/bin/gcovGENHTML = GENISOIMAGE = GIT = /usr/bin/gitGREP = /usr/bin/grepHEXDUMP = /usr/bin/hexdumpINCLUDES =  -D_THREAD_SAFE  -I/usr/local/Cellar/openssl/1.0.2o_1/include -I/usr/local/Cellar/openssl/1.0.2o_1/includeINSTALL = /usr/bin/install -cINSTALLNAMETOOL = INSTALL_DATA = ${INSTALL} -m 644INSTALL_PROGRAM = ${INSTALL}INSTALL_SCRIPT = ${INSTALL}INSTALL_STRIP_PROGRAM = $(install_sh) -c -sJAVA = /usr/bin/javaJAVA_COMPARISON_TOOL = LCOV = LDFLAGS =   -Wl,-dead_stripLEVELDB_CPPFLAGS = -std=gnu++11 -fPIC $(am__append_11)LEVELDB_TARGET_FLAGS = LIBCAP_CFLAGS = LIBCAP_LIBS = LIBEVENT_CFLAGS = -I/usr/local/Cellar/libevent/2.1.8/includeLIBEVENT_LIBS = -L/usr/local/Cellar/libevent/2.1.8/lib -leventLIBLEVELDB =  $(am__append_9)LIBMEMENV =  $(am__append_10)LIBOBJS = LIBS = -lminiupnpc -lminiupnpc -lminiupnpc -lminiupnpc  -L/usr/local/opt/berkeley-db@4/lib -L/usr/local/Cellar/openssl/1.0.2o_1/lib -lssl -L/usr/local/Cellar/openssl/1.0.2o_1/lib -lcryptoLIBSECCOMP_CFLAGS = LIBSECCOMP_LIBS = LN_S = ln -sLRELEASE = /usr/local/bin/lreleaseLTLIBOBJS = LUPDATE = /usr/local/bin/lupdateMAINT = MAKEINFO = ${SHELL} /Users/martinthygesenGL/ARMR/armr/src/build-aux/missing makeinfoMAKENSIS = MKDIR_P = ../src/build-aux/install-sh -c -dMOC = /usr/local/bin/mocMOC_DEFS = -DHAVE_CONFIG_H -I$(top_srcdir)/src -DQ_OS_MACOBJC = gccOBJCDEPMODE = depmode=noneOBJCFLAGS = -g -O2OBJCXX = g++OBJCXXDEPMODE = depmode=noneOBJCXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fstack-protector-all -fPIE -fPICOBJEXT = oOTOOL = PACKAGE = armrPACKAGE_BUGREPORT = https://github.com/ARMROfficial/armr-dv/issuesPACKAGE_NAME = ARMR CorePACKAGE_STRING = ARMR Core 1.6.1PACKAGE_TARNAME = armrPACKAGE_URL = http://armr.network/PACKAGE_VERSION = 1.6.1PATH_SEPARATOR = :PKG_CONFIG = /usr/local/bin/pkg-configPKG_CONFIG_LIBDIR = PKG_CONFIG_PATH = /usr/local/opt/openssl/lib/pkgconfig:PORT = PROTOBUF_CFLAGS = -D_THREAD_SAFE -I/usr/local/Cellar/protobuf/3.5.1_1/includePROTOBUF_LIBS = -L/usr/local/Cellar/protobuf/3.5.1_1/lib -lprotobuf -D_THREAD_SAFEPROTOC = /usr/local/bin/protocPTHREAD_CC = gccPTHREAD_CFLAGS = -D_THREAD_SAFE PTHREAD_LIBS = QR_CFLAGS = -I/usr/local/Cellar/qrencode/4.0.0/includeQR_LIBS = -L/usr/local/Cellar/qrencode/4.0.0/lib -lqrencodeQT_CFLAGS = -DQT_NETWORK_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -I/usr/local/Cellar/qt/5.10.1/include/QtNetwork -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtWidgets -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtGui -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtCore -I/usr/local/Cellar/qt/5.10.1/includeQT_DBUS_CFLAGS = -DQT_DBUS_LIB -DQT_CORE_LIB -I/usr/local/Cellar/qt/5.10.1/include/QtDBus -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtCore -I/usr/local/Cellar/qt/5.10.1/includeQT_DBUS_INCLUDES = -DQT_DBUS_LIB -DQT_CORE_LIB -I/usr/local/Cellar/qt/5.10.1/include/QtDBus -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtCore -I/usr/local/Cellar/qt/5.10.1/includeQT_DBUS_LIBS = -F/usr/local/Cellar/qt/5.10.1/lib -framework QtDBus -F/usr/local/Cellar/qt/5.10.1/lib -framework QtCoreQT_INCLUDES = -DQT_NETWORK_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -I/usr/local/Cellar/qt/5.10.1/include/QtNetwork -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtWidgets -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtGui -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtCore -I/usr/local/Cellar/qt/5.10.1/includeQT_LDFLAGS = QT_LIBS = -F/usr/local/Cellar/qt/5.10.1/lib -framework QtNetwork -F/usr/local/Cellar/qt/5.10.1/lib -framework QtWidgets -F/usr/local/Cellar/qt/5.10.1/lib -framework QtGui -F/usr/local/Cellar/qt/5.10.1/lib -framework QtCore -framework Foundation -framework ApplicationServices -framework AppKitQT_SELECT = qt5QT_TEST_CFLAGS = -DQT_TESTLIB_LIB -DQT_CORE_LIB -I/usr/local/Cellar/qt/5.10.1/include/QtTest -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtCore -I/usr/local/Cellar/qt/5.10.1/includeQT_TEST_INCLUDES = -DQT_TESTLIB_LIB -DQT_CORE_LIB -I/usr/local/Cellar/qt/5.10.1/include/QtTest -I/usr/local/Cellar/qt/5.10.1/include -I/usr/local/Cellar/qt/5.10.1/include/QtCore -I/usr/local/Cellar/qt/5.10.1/includeQT_TEST_LIBS = -F/usr/local/Cellar/qt/5.10.1/lib -framework QtTest -F/usr/local/Cellar/qt/5.10.1/lib -framework QtCoreRANLIB = /usr/bin/ranlibRCC = /usr/local/bin/rccSED = /usr/bin/sedSET_MAKE = SHELL = /bin/shSSL_CFLAGS = -I/usr/local/Cellar/openssl/1.0.2o_1/includeSSL_LIBS = -L/usr/local/Cellar/openssl/1.0.2o_1/lib -lsslSTRIP = /usr/bin/stripTESTDEFS =  -DBOOST_TEST_DYN_LINKUIC = /usr/local/bin/uicUSE_QRCODE = USE_UPNP = VERSION = 1.6.1WINDOWS_BITS = WINDRES = XGETTEXT = ZLIB_CFLAGS = ZLIB_LIBS = -lzabs_builddir = /Users/martinthygesenGL/ARMR/armr/srcabs_srcdir = /Users/martinthygesenGL/ARMR/armr/srcabs_top_builddir = /Users/martinthygesenGL/ARMR/armrabs_top_srcdir = /Users/martinthygesenGL/ARMR/armrac_ct_CC = gccac_ct_CXX = g++ac_ct_OBJC = gccac_ct_OBJCXX = g++am__include = includeam__leading_dot = .am__quote = am__tar = $${TAR-tar} chof - "$$tardir"am__untar = $${TAR-tar} xf -ax_pthread_config = bindir = ${exec_prefix}/binbuild = x86_64-apple-darwin17.7.0build_alias = build_cpu = x86_64build_os = darwin17.7.0build_vendor = applebuilddir = .datadir = ${datarootdir}datarootdir = ${prefix}/sharedocdir = ${datarootdir}/doc/${PACKAGE_TARNAME}dvidir = ${docdir}exec_prefix = ${prefix}host = x86_64-apple-darwin17.7.0host_alias = host_cpu = x86_64host_os = darwin17.7.0host_vendor = applehtmldir = ${docdir}includedir = ${prefix}/includeinfodir = ${datarootdir}/infoinstall_sh = ${SHELL} /Users/martinthygesenGL/ARMR/armr/src/build-aux/install-shlibdir = ${exec_prefix}/liblibexecdir = ${exec_prefix}/libexeclocaledir = ${datarootdir}/localelocalstatedir = ${prefix}/varmandir = ${datarootdir}/manmkdir_p = $(MKDIR_P)oldincludedir = /usr/includepdfdir = ${docdir}prefix = /usr/localprogram_transform_name = s,x,x,psdir = ${docdir}sbindir = ${exec_prefix}/sbinsharedstatedir = ${prefix}/comsrcdir = .subdirs_extra =  torsysconfdir = ${prefix}/etctarget_alias = top_build_prefix = ../top_builddir = ..top_srcdir = ..AM_CPPFLAGS = $(INCLUDES) AM_LDFLAGS = $(PTHREAD_CFLAGS)# for leveldb#AM_MAKEFLAGS = TARGET_OS=TARGET_WINDOWSEXTRA_LIBRARIES = $(am__append_8)BITCOIN_CONFIG_INCLUDES = -I$(builddir)/configBITCOIN_INCLUDES = -I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) \	$(LEVELDB_CPPFLAGS) $(am__append_1)LIBBITCOIN_SERVER = libbitcoin_server.aLIBBITCOIN_WALLET = libbitcoin_wallet.aLIBBITCOIN_COMMON = libbitcoin_common.aLIBBITCOIN_UTIL = libbitcoin_util.aIBBITCOIN_SSE2 = libbitcoin_sse2.aLIBBITCOINQT = qt/libbitcoinqt.anoinst_LIBRARIES = libbitcoin_server.a libbitcoin_common.a \	libbitcoin_util.a $(am__append_2) $(am__append_3) \	$(am__append_17)# bitcoin core #BITCOIN_CORE_H = \  anonymize.h \  addrman.h \  alert.h \  allocators.h \  base58.h \  bignum.h \  bloom.h \  checkpoints.h \  checkqueue.h \  coincontrol.h \  compat.h \  crypter.h \  lz4/lz4.h \  db.h \  hash.h \  hashblock.h \  init.h \  key.h \  keystore.h \  limitedmap.h \  main.h \  miner.h \  mruset.h \  netbase.h \  net.h \  protocol.h \  rpcclient.h \  script.h \  serialize.h \  smessage.h \  stealth.h \  sync.h \  threadsafety.h \  tinyformat.h \  txdb-leveldb.h \  ui_interface.h \  uint256.h \  util.h \  scrypt.h \  strlcpy.h \  version.h \  walletdb.h \  wallet.h \  sph_blake.h \  sph_bmw.h \  sph_cubehash.h \  sph_echo.h \  sph_fugue.h \  sph_groestl.h \  sph_hamsi.h \  sph_jh.h \  sph_keccak.h \  sph_luffa.h \  sph_shavite.h \  sph_simd.h \  sph_skein.h \  sph_types.h \  xxhash/xxhash.h \  pbkdf2.h JSON_H = \  json/json_spirit.h \  json/json_spirit_error_position.h \  json/json_spirit_reader.h \  json/json_spirit_reader_template.h \  json/json_spirit_stream_reader.h \  json/json_spirit_utils.h \  json/json_spirit_value.h \  json/json_spirit_writer.h \  json/json_spirit_writer_template.h# server: shared between bitcoind and bitcoin-qtlibbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES)libbitcoin_server_a_SOURCES = \  addrman.cpp \  alert.cpp \  bloom.cpp \  checkpoints.cpp \  init.cpp \  db.cpp \  txdb-leveldb.cpp \  bitcoinrpc.cpp \  keystore.cpp \  main.cpp \  noui.cpp \  net.cpp \  rpcblockchain.cpp \  rpcmining.cpp \  rpcnet.cpp \  rpcrawtransaction.cpp \  rpcsmessage.cpp \  script.cpp \  $(JSON_H) \  $(BITCOIN_CORE_H)# wallet: shared between bitcoind and bitcoin-qt, but only linked# when wallet enabledlibbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)libbitcoin_wallet_a_SOURCES = \  crypter.cpp \  scrypt.cpp \  scrypt-sse2.cpp \  pbkdf2.cpp \  rpcdump.cpp \  rpcwallet.cpp \  rpcsmessage.cpp \  wallet.cpp \  walletdb.cpp \  stealth.cpp \  $(BITCOIN_CORE_H)# common: shared between bitcoind, and bitcoin-qt and non-server toolslibbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)libbitcoin_common_a_SOURCES = \  anonymize.cpp \  hash.cpp \  key.cpp \  netbase.cpp \  protocol.cpp \  smessage.cpp \  script.cpp \  stealth.cpp \  kernel.cpp \  miner.cpp \  sync.cpp \  util.cpp \  version.cpp \  aes_helper.c \  blake.c \  bmw.c \  cubehash.c \  fugue.c \  echo.c \  groestl.c \  hamsi_helper.c \  hamsi.c \  jh.c \  keccak.c \  luffa.c \  shavite.c \  simd.c \  skein.c \  xxhash/xxhash.c \  lz4/lz4.c \  $(BITCOIN_CORE_H)# util: shared between all executables.# This library *must* be included to make sure that the glibc# backward-compatibility objects and their sanity checks are linked.libbitcoin_util_a_CPPFLAGS = $(BITCOIN_INCLUDES)libbitcoin_util_a_SOURCES = sync.cpp util.cpp $(BITCOIN_CORE_H) \	$(am__append_5)nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h# bitcoind binary #Armrd_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \	$(LIBBITCOIN_UTIL) $(LIBLEVELDB) $(LIBMEMENV) $(am__append_6) \	$(am__append_7) ../tor/src/or/libtor.a \	../tor/src/common/libor.a ../tor/src/common/libor-ctime.a \	../tor/src/common/libor-crypto.a \	../tor/src/common/libor-event.a \	../tor/src/trunnel/libor-trunnel.a \	../tor/src/common/libcurve25519_donna.a \	../tor/src/ext/ed25519/donna/libed25519_donna.a \	../tor/src/ext/ed25519/ref10/libed25519_ref10.a \	../tor/src/ext/keccak-tiny/libkeccak-tiny.a $(LIBEVENT_LIBS) \	$(LIBSECCOMP_LIBS) $(LIBCAP_LIBS) $(ZLIB_LIBS) $(BOOST_LIBS) \	$(BDB_LIBS) $(LIBEVENT_LDFLAGS) $(LIBSECCOMP_LDFLAGS) \	$(LIBCAP_LDFLAGS) $(ZLIB_LDFLAGS)libbitcoin_sse2_a_SOURCES = scrypt-sse2.cpplibbitcoin_sse2_a_CPPFLAGS = $(BITCOIN_INCLUDES) -msse2 -mstackrealignArmrd_SOURCES = daemon.cppArmrd_CPPFLAGS = $(BITCOIN_INCLUDES) $(LIBSECCOMP_CFLAGS) $(LIBCAP_CFLAGS) $(ZLIB_CFLAGS)CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno \	$(am__append_23)DISTCLEANFILES = obj/build.hEXTRA_DIST = leveldbLIBLEVELDB_INT = leveldb/libleveldb.aLIBMEMENV_INT = leveldb/libmemenv.aLEVELDB_CPPFLAGS_INT = -I$(srcdir)/leveldb \	$(LEVELDB_TARGET_FLAGS) \	-DLEVELDB_ATOMIC_PRESENT \	-D__STDC_LIMIT_MACROS $(am__append_12) \	$(am__append_13)leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)leveldb_libleveldb_a_SOURCES =  \	leveldb/port/atomic_pointer.h \	leveldb/port/port_example.h \	leveldb/port/port_posix.h \	leveldb/port/win/stdint.h \	leveldb/port/port.h \	leveldb/port/port_win.h \	leveldb/port/thread_annotations.h \	leveldb/include/leveldb/db.h \	leveldb/include/leveldb/options.h \	leveldb/include/leveldb/comparator.h \	leveldb/include/leveldb/filter_policy.h \	leveldb/include/leveldb/slice.h \	leveldb/include/leveldb/table_builder.h \	leveldb/include/leveldb/env.h \	leveldb/include/leveldb/c.h \	leveldb/include/leveldb/iterator.h \	leveldb/include/leveldb/cache.h \	leveldb/include/leveldb/dumpfile.h \	leveldb/include/leveldb/table.h \	leveldb/include/leveldb/write_batch.h \	leveldb/include/leveldb/status.h \	leveldb/db/log_format.h \	leveldb/db/memtable.h \	leveldb/db/version_set.h \	leveldb/db/write_batch_internal.h \	leveldb/db/filename.h \	leveldb/db/version_edit.h \	leveldb/db/dbformat.h \	leveldb/db/builder.h \	leveldb/db/log_writer.h \	leveldb/db/db_iter.h \	leveldb/db/skiplist.h \	leveldb/db/db_impl.h \	leveldb/db/table_cache.h \	leveldb/db/snapshot.h \	leveldb/db/log_reader.h \	leveldb/table/filter_block.h \	leveldb/table/block_builder.h \	leveldb/table/block.h \	leveldb/table/two_level_iterator.h \	leveldb/table/merger.h \	leveldb/table/format.h \	leveldb/table/iterator_wrapper.h \	leveldb/util/crc32c.h \	leveldb/util/env_posix_test_helper.h \	leveldb/util/arena.h \	leveldb/util/random.h \	leveldb/util/posix_logger.h \	leveldb/util/hash.h \	leveldb/util/histogram.h \	leveldb/util/coding.h \	leveldb/util/testutil.h \	leveldb/util/mutexlock.h \	leveldb/util/logging.h \	leveldb/util/testharness.h \	leveldb/db/builder.cc leveldb/db/c.cc \	leveldb/db/dbformat.cc \	leveldb/db/db_impl.cc \	leveldb/db/db_iter.cc \	leveldb/db/dumpfile.cc \	leveldb/db/filename.cc \	leveldb/db/log_reader.cc \	leveldb/db/log_writer.cc \	leveldb/db/memtable.cc \	leveldb/db/repair.cc \	leveldb/db/table_cache.cc \	leveldb/db/version_edit.cc \	leveldb/db/version_set.cc \	leveldb/db/write_batch.cc \	leveldb/table/block_builder.cc \	leveldb/table/block.cc \	leveldb/table/filter_block.cc \	leveldb/table/format.cc \	leveldb/table/iterator.cc \	leveldb/table/merger.cc \	leveldb/table/table_builder.cc \	leveldb/table/table.cc \	leveldb/table/two_level_iterator.cc \	leveldb/util/arena.cc \	leveldb/util/bloom.cc \	leveldb/util/cache.cc \	leveldb/util/coding.cc \	leveldb/util/comparator.cc \	leveldb/util/crc32c.cc \	leveldb/util/env.cc \	leveldb/util/env_posix.cc \	leveldb/util/filter_policy.cc \	leveldb/util/hash.cc \	leveldb/util/histogram.cc \	leveldb/util/logging.cc \	leveldb/util/options.cc \	leveldb/util/status.cc $(am__append_14) \	$(am__append_15)leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)leveldb_libmemenv_a_SOURCES =  \	leveldb/helpers/memenv/memenv.cc \	leveldb/helpers/memenv/memenv.h# bitcoin qt core #QT_TS = \  qt/locale/bitcoin_en.ts \  qt/locale/bitcoin_fr.ts \  qt/locale/bitcoin_sc.ts \  qt/locale/bitcoin_ru.ts QT_FORMS_UI = \  qt/forms/aboutdialog.ui \  qt/forms/addressbookpage.ui \  qt/forms/askpassphrasedialog.ui \  qt/forms/coincontroldialog.ui \  qt/forms/editaddressdialog.ui \  qt/forms/messagepage.ui \  qt/forms/optionsdialog.ui \  qt/forms/overviewpage.ui \  qt/forms/qrcodedialog.ui \  qt/forms/rpcconsole.ui \  qt/forms/sendcoinsdialog.ui \  qt/forms/sendcoinsentry.ui \  qt/forms/sendmessagesdialog.ui \  qt/forms/sendmessagesentry.ui \  qt/forms/signverifymessagedialog.ui \  qt/forms/transactiondescdialog.ui \  qt/plugins/mrichtexteditor/mrichtextedit.uiQT_MOC_CPP = \  qt/moc_aboutdialog.cpp \  qt/moc_addressbookpage.cpp \  qt/moc_addresstablemodel.cpp \  qt/moc_askpassphrasedialog.cpp \  qt/moc_bitcoinaddressvalidator.cpp \  qt/moc_bitcoinamountfield.cpp \  qt/moc_bitcoingui.cpp \  qt/moc_bitcoinunits.cpp \  qt/moc_clientmodel.cpp \  qt/moc_csvmodelwriter.cpp \  qt/moc_coincontroldialog.cpp \  qt/moc_coincontroltreewidget.cpp \  qt/moc_editaddressdialog.cpp \  qt/moc_guiutil.cpp \  qt/moc_macdockiconhandler.cpp \  qt/moc_macnotificationhandler.cpp \  qt/moc_monitoreddatamapper.cpp \  qt/moc_messagepage.cpp \  qt/moc_messagemodel.cpp \  qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp \  qt/moc_notificator.cpp \  qt/moc_optionsdialog.cpp \  qt/moc_optionsmodel.cpp \  qt/moc_overviewpage.cpp \  qt/moc_qvalidatedlineedit.cpp \  qt/moc_qvalidatedtextedit.cpp \  qt/moc_qvaluecombobox.cpp \  qt/moc_qrcodedialog.cpp \  qt/moc_rpcconsole.cpp \  qt/moc_sendcoinsdialog.cpp \  qt/moc_sendcoinsentry.cpp \  qt/moc_signverifymessagedialog.cpp \  qt/moc_sendmessagesdialog.cpp \  qt/moc_sendmessagesentry.cpp \  qt/moc_transactiondesc.cpp \  qt/moc_transactiondescdialog.cpp \  qt/moc_transactionfilterproxy.cpp \  qt/moc_transactiontablemodel.cpp \  qt/moc_transactionview.cpp \  qt/moc_walletmodel.cppBITCOIN_MM = \  qt/macdockiconhandler.mm \  qt/macnotificationhandler.mmQT_MOC = \  qt/overviewpage.moc \  qt/rpcconsole.mocQT_QRC_CPP = qt/qrc_bitcoin.cppQT_QRC = qt/bitcoin.qrcQT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cppQT_QRC_LOCALE = qt/bitcoin_locale.qrcBITCOIN_QT_H = \  qt/aboutdialog.h \  qt/addressbookpage.h \  qt/addresstablemodel.h \  qt/askpassphrasedialog.h \  qt/bitcoinaddressvalidator.h \  qt/bitcoinamountfield.h \  qt/bitcoingui.h \  qt/bitcoinunits.h \  qt/clientmodel.h \  qt/coincontroldialog.h \  qt/coincontroltreewidget.h \  qt/csvmodelwriter.h \  qt/editaddressdialog.h \  qt/guiconstants.h \  qt/guiutil.h \  qt/macdockiconhandler.h \  qt/macnotificationhandler.h \  qt/messagemodel.h \  qt/messagepage.h \  qt/monitoreddatamapper.h \  qt/notificator.h \  qt/optionsdialog.h \  qt/optionsmodel.h \  qt/overviewpage.h \  qt/qtipcserver.h \  qt/qvalidatedlineedit.h \  qt/qvalidatedtextedit.h \  qt/qvaluecombobox.h \  qt/qrcodedialog.h \  qt/rpcconsole.h \  qt/sendcoinsdialog.h \  qt/sendcoinsentry.h \  qt/sendmessagesdialog.h \  qt/sendmessagesentry.h \  qt/signverifymessagedialog.h \  qt/transactiondesc.h \  qt/transactiondescdialog.h \  qt/transactionfilterproxy.h \  qt/transactionrecord.h \  qt/transactiontablemodel.h \  qt/transactionview.h \  qt/walletmodel.h \  qt/plugins/mrichtexteditor/mrichtextedit.hRES_ICONS = \  qt/res/icons/add.png \  qt/res/icons/address-book.png \  qt/res/icons/armr.ico \  qt/res/icons/armr.png \  qt/res/icons/armr_testnet.png \  qt/res/icons/clock1.png \  qt/res/icons/clock2.png \  qt/res/icons/clock3.png \  qt/res/icons/clock4.png \  qt/res/icons/clock5.png \  qt/res/icons/configure.png \  qt/res/icons/connect0_16.png \  qt/res/icons/connect1_16.png \  qt/res/icons/connect2_16.png \  qt/res/icons/connect3_16.png \  qt/res/icons/connect4_16.png \  qt/res/icons/debugwindow.png \  qt/res/icons/edit.png \  qt/res/icons/editcopy.png \  qt/res/icons/editpaste.png \  qt/res/icons/export.png \  qt/res/icons/filesave.png \  qt/res/icons/history.png \  qt/res/icons/key.png \  qt/res/icons/lock_closed.png \  qt/res/icons/lock_open.png \  qt/res/icons/message.png \  qt/res/icons/notsynced.png \  qt/res/icons/onion_logo_16x16.png \  qt/res/icons/overview.png \  qt/res/icons/qtlogo-64.png \  qt/res/icons/qrcode.png \  qt/res/icons/quit.png \  qt/res/icons/receive.png \  qt/res/icons/remove.png \  qt/res/icons/send.png \  qt/res/icons/synced.png \  qt/res/icons/staking_on.png \  qt/res/icons/staking_off.png \  qt/res/icons/tor.png \  qt/res/icons/tor2.png \  qt/res/icons/toolbar.png \  qt/res/icons/toolbar_testnet.png \  qt/res/icons/transaction0.png \  qt/res/icons/transaction2.png \  qt/res/icons/transaction_conflicted.png \  qt/res/icons/tx_inout.png \  qt/res/icons/tx_input.png \  qt/res/icons/tx_output.png \  qt/res/icons/tx_mined.pngBITCOIN_QT_CPP = qt/bitcoin.cpp \	qt/bitcoinaddressvalidator.cpp \	qt/bitcoinamountfield.cpp qt/bitcoingui.cpp \	qt/bitcoinunits.cpp qt/clientmodel.cpp \	qt/csvmodelwriter.cpp qt/guiutil.cpp \	qt/monitoreddatamapper.cpp qt/notificator.cpp \	qt/optionsdialog.cpp qt/optionsmodel.cpp \	qt/messagemodel.cpp qt/rpcconsole.cpp \	$(am__append_18)RES_IMAGES = \  qt/res/images/about.png \  qt/res/images/splash.png \  qt/res/images/splash_testnet.png \  qt/res/images/wallet.pngRES_MOVIES = $(wildcard qt/res/movies/update-spinner.mng)BITCOIN_RC = qt/res/bitcoin-qt.rcBITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \  -I$(builddir)/qt/forms -I$(srcdir)/qt/plugins/mrichtexteditorqt_libbitcoinqt_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)# forms/foo.h -> forms/ui_foo.hQT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))# bitcoin-qt binary #qt_ARMR_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)qt_ARMR_qt_SOURCES = qt/bitcoin.cpp $(am__append_19) \	$(am__append_20)qt_ARMR_qt_LDADD = qt/libbitcoinqt.a \	$(LIBBITCOIN_SERVER) $(am__append_21) \	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) \	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_SSE2) \	$(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) \	$(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) \	$(PROTOBUF_LIBS) $(BDB_LIBS) \	../tor/src/or/libtor.a \	../tor/src/common/libor.a \	../tor/src/common/libor-ctime.a \	../tor/src/common/libor-crypto.a \	../tor/src/common/libor-event.a \	../tor/src/trunnel/libor-trunnel.a \	../tor/src/common/libcurve25519_donna.a \	../tor/src/ext/ed25519/donna/libed25519_donna.a \	../tor/src/ext/ed25519/ref10/libed25519_ref10.a \	../tor/src/ext/keccak-tiny/libkeccak-tiny.a \	$(ZLIB_LIBS) $(LIBEVENT_LIBS) $(LIBCAP_LIBS) \	$(LIBSECCOMP_LIBS) $(am__append_22)qt_ARMR_qt_LDFLAGS = $(QT_LDFLAGS)#locale/foo.ts -> locale/foo.qmQT_QM = $(QT_TS:.ts=.qm)CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_bitcoin_locale.qrcall: all-am.SUFFIXES:.SUFFIXES: .c .cc .cpp .log .mm .o .obj .rc .test .test$(EXEEXT) .trs$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.qt.include $(am__configure_deps)	@for dep in $?; do \	  case '$(am__configure_deps)' in \	    *$$dep*) \	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \	        && { if test -f $@; then exit 0; else break; fi; }; \	      exit 1;; \	  esac; \	done; \	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \	$(am__cd) $(top_srcdir) && \	  $(AUTOMAKE) --foreign src/MakefileMakefile: $(srcdir)/Makefile.in $(top_builddir)/config.status	@case '$?' in \	  *config.status*) \	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \	  *) \	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \	esac;$(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.qt.include $(am__empty):$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh$(top_srcdir)/configure:  $(am__configure_deps)	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh$(ACLOCAL_M4):  $(am__aclocal_m4_deps)	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh$(am__aclocal_m4_deps):install-binPROGRAMS: $(bin_PROGRAMS)	@$(NORMAL_INSTALL)	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \	if test -n "$$list"; then \	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \	fi; \	for p in $$list; do echo "$$p $$p"; done | \	sed 's/$(EXEEXT)$$//' | \	while read p p1; do if test -f $$p \	  ; then echo "$$p"; echo "$$p"; else :; fi; \	done | \	sed -e 'p;s,.*/,,;n;h' \	    -e 's|.*|.|' \	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \	sed 'N;N;N;s,\n, ,g' | \	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \	    if ($$2 == $$4) files[d] = files[d] " " $$1; \	    else { print "f", $$3 "/" $$4, $$1; } } \	  END { for (d in files) print "f", d, files[d] }' | \	while read type dir files; do \	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \	    test -z "$$files" || { \	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \	    } \	; doneuninstall-binPROGRAMS:	@$(NORMAL_UNINSTALL)	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \	files=`for p in $$list; do echo "$$p"; done | \	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \	      -e 's/$$/$(EXEEXT)/' \	`; \	test -n "$$list" || exit 0; \	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \	cd "$(DESTDIR)$(bindir)" && rm -f $$filesclean-binPROGRAMS:	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)clean-noinstLIBRARIES:	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)leveldb/db/$(am__dirstamp):	@$(MKDIR_P) leveldb/db	@: > leveldb/db/$(am__dirstamp)leveldb/db/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) leveldb/db/$(DEPDIR)	@: > leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-builder.$(OBJEXT): leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-c.$(OBJEXT): leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-dbformat.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-db_impl.$(OBJEXT): leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-db_iter.$(OBJEXT): leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-dumpfile.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-filename.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-log_reader.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-log_writer.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-memtable.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-repair.$(OBJEXT): leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-table_cache.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-version_edit.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-version_set.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/db/libleveldb_a-write_batch.$(OBJEXT):  \	leveldb/db/$(am__dirstamp) \	leveldb/db/$(DEPDIR)/$(am__dirstamp)leveldb/table/$(am__dirstamp):	@$(MKDIR_P) leveldb/table	@: > leveldb/table/$(am__dirstamp)leveldb/table/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) leveldb/table/$(DEPDIR)	@: > leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-block_builder.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-block.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-filter_block.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-format.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-iterator.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-merger.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-table_builder.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-table.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/table/libleveldb_a-two_level_iterator.$(OBJEXT):  \	leveldb/table/$(am__dirstamp) \	leveldb/table/$(DEPDIR)/$(am__dirstamp)leveldb/util/$(am__dirstamp):	@$(MKDIR_P) leveldb/util	@: > leveldb/util/$(am__dirstamp)leveldb/util/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) leveldb/util/$(DEPDIR)	@: > leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-arena.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-bloom.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-cache.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-coding.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-comparator.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-crc32c.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-env.$(OBJEXT): leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-env_posix.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-filter_policy.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-hash.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-histogram.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-logging.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-options.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-status.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/util/libleveldb_a-env_win.$(OBJEXT):  \	leveldb/util/$(am__dirstamp) \	leveldb/util/$(DEPDIR)/$(am__dirstamp)leveldb/port/$(am__dirstamp):	@$(MKDIR_P) leveldb/port	@: > leveldb/port/$(am__dirstamp)leveldb/port/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) leveldb/port/$(DEPDIR)	@: > leveldb/port/$(DEPDIR)/$(am__dirstamp)leveldb/port/libleveldb_a-port_win.$(OBJEXT):  \	leveldb/port/$(am__dirstamp) \	leveldb/port/$(DEPDIR)/$(am__dirstamp)leveldb/port/libleveldb_a-port_posix.$(OBJEXT):  \	leveldb/port/$(am__dirstamp) \	leveldb/port/$(DEPDIR)/$(am__dirstamp)leveldb/$(am__dirstamp):	@$(MKDIR_P) leveldb	@: > leveldb/$(am__dirstamp)leveldb/libleveldb.a: $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_a_DEPENDENCIES) leveldb/$(am__dirstamp)	$(AM_V_at)-rm -f leveldb/libleveldb.a	$(AM_V_AR)$(leveldb_libleveldb_a_AR) leveldb/libleveldb.a $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_LIBADD)	$(AM_V_at)$(RANLIB) leveldb/libleveldb.aleveldb/helpers/memenv/$(am__dirstamp):	@$(MKDIR_P) leveldb/helpers/memenv	@: > leveldb/helpers/memenv/$(am__dirstamp)leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) leveldb/helpers/memenv/$(DEPDIR)	@: > leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)leveldb/helpers/memenv/libmemenv_a-memenv.$(OBJEXT):  \	leveldb/helpers/memenv/$(am__dirstamp) \	leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)leveldb/libmemenv.a: $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_DEPENDENCIES) $(EXTRA_leveldb_libmemenv_a_DEPENDENCIES) leveldb/$(am__dirstamp)	$(AM_V_at)-rm -f leveldb/libmemenv.a	$(AM_V_AR)$(leveldb_libmemenv_a_AR) leveldb/libmemenv.a $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_LIBADD)	$(AM_V_at)$(RANLIB) leveldb/libmemenv.axxhash/$(am__dirstamp):	@$(MKDIR_P) xxhash	@: > xxhash/$(am__dirstamp)xxhash/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) xxhash/$(DEPDIR)	@: > xxhash/$(DEPDIR)/$(am__dirstamp)xxhash/libbitcoin_common_a-xxhash.$(OBJEXT): xxhash/$(am__dirstamp) \	xxhash/$(DEPDIR)/$(am__dirstamp)lz4/$(am__dirstamp):	@$(MKDIR_P) lz4	@: > lz4/$(am__dirstamp)lz4/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) lz4/$(DEPDIR)	@: > lz4/$(DEPDIR)/$(am__dirstamp)lz4/libbitcoin_common_a-lz4.$(OBJEXT): lz4/$(am__dirstamp) \	lz4/$(DEPDIR)/$(am__dirstamp)libbitcoin_common.a: $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_DEPENDENCIES) $(EXTRA_libbitcoin_common_a_DEPENDENCIES) 	$(AM_V_at)-rm -f libbitcoin_common.a	$(AM_V_AR)$(libbitcoin_common_a_AR) libbitcoin_common.a $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_LIBADD)	$(AM_V_at)$(RANLIB) libbitcoin_common.alibbitcoin_server.a: $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_DEPENDENCIES) $(EXTRA_libbitcoin_server_a_DEPENDENCIES) 	$(AM_V_at)-rm -f libbitcoin_server.a	$(AM_V_AR)$(libbitcoin_server_a_AR) libbitcoin_server.a $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_LIBADD)	$(AM_V_at)$(RANLIB) libbitcoin_server.alibbitcoin_sse2.a: $(libbitcoin_sse2_a_OBJECTS) $(libbitcoin_sse2_a_DEPENDENCIES) $(EXTRA_libbitcoin_sse2_a_DEPENDENCIES) 	$(AM_V_at)-rm -f libbitcoin_sse2.a	$(AM_V_AR)$(libbitcoin_sse2_a_AR) libbitcoin_sse2.a $(libbitcoin_sse2_a_OBJECTS) $(libbitcoin_sse2_a_LIBADD)	$(AM_V_at)$(RANLIB) libbitcoin_sse2.acompat/$(am__dirstamp):	@$(MKDIR_P) compat	@: > compat/$(am__dirstamp)compat/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) compat/$(DEPDIR)	@: > compat/$(DEPDIR)/$(am__dirstamp)compat/libbitcoin_util_a-glibc_compat.$(OBJEXT):  \	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)compat/libbitcoin_util_a-glibcxx_compat.$(OBJEXT):  \	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)libbitcoin_util.a: $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_DEPENDENCIES) $(EXTRA_libbitcoin_util_a_DEPENDENCIES) 	$(AM_V_at)-rm -f libbitcoin_util.a	$(AM_V_AR)$(libbitcoin_util_a_AR) libbitcoin_util.a $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_LIBADD)	$(AM_V_at)$(RANLIB) libbitcoin_util.alibbitcoin_wallet.a: $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_DEPENDENCIES) $(EXTRA_libbitcoin_wallet_a_DEPENDENCIES) 	$(AM_V_at)-rm -f libbitcoin_wallet.a	$(AM_V_AR)$(libbitcoin_wallet_a_AR) libbitcoin_wallet.a $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_LIBADD)	$(AM_V_at)$(RANLIB) libbitcoin_wallet.aqt/$(am__dirstamp):	@$(MKDIR_P) qt	@: > qt/$(am__dirstamp)qt/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) qt/$(DEPDIR)	@: > qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-bitcoinamountfield.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-clientmodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-guiutil.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-monitoreddatamapper.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-notificator.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-messagemodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-aboutdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-addresstablemodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-askpassphrasedialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-coincontroldialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-coincontroltreewidget.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-editaddressdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-overviewpage.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-sendmessagesdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-sendmessagesentry.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-messagepage.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qtipcserver.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qrcodedialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qvalidatedtextedit.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/plugins/mrichtexteditor/$(am__dirstamp):	@$(MKDIR_P) qt/plugins/mrichtexteditor	@: > qt/plugins/mrichtexteditor/$(am__dirstamp)qt/plugins/mrichtexteditor/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) qt/plugins/mrichtexteditor/$(DEPDIR)	@: > qt/plugins/mrichtexteditor/$(DEPDIR)/$(am__dirstamp)qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.$(OBJEXT):  \	qt/plugins/mrichtexteditor/$(am__dirstamp) \	qt/plugins/mrichtexteditor/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-signverifymessagedialog.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-transactiondescdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-transactionfilterproxy.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-transactionrecord.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-transactiontablemodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-transactionview.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-walletmodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_aboutdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_clientmodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_guiutil.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_monitoreddatamapper.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_messagepage.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_messagemodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.$(OBJEXT):  \	qt/plugins/mrichtexteditor/$(am__dirstamp) \	qt/plugins/mrichtexteditor/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_notificator.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_overviewpage.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_qvalidatedtextedit.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_qrcodedialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_sendmessagesdialog.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_sendmessagesentry.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT):  \	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_transactionview.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-moc_walletmodel.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qrc_bitcoin.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt_a-qrc_bitcoin_locale.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/libbitcoinqt.a: $(qt_libbitcoinqt_a_OBJECTS) $(qt_libbitcoinqt_a_DEPENDENCIES) $(EXTRA_qt_libbitcoinqt_a_DEPENDENCIES) qt/$(am__dirstamp)	$(AM_V_at)-rm -f qt/libbitcoinqt.a	$(AM_V_AR)$(qt_libbitcoinqt_a_AR) qt/libbitcoinqt.a $(qt_libbitcoinqt_a_OBJECTS) $(qt_libbitcoinqt_a_LIBADD)	$(AM_V_at)$(RANLIB) qt/libbitcoinqt.aArmrd$(EXEEXT): $(Armrd_OBJECTS) $(Armrd_DEPENDENCIES) $(EXTRA_Armrd_DEPENDENCIES) 	@rm -f Armrd$(EXEEXT)	$(AM_V_CXXLD)$(CXXLINK) $(Armrd_OBJECTS) $(Armrd_LDADD) $(LIBS)qt/ARMR_qt-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/ARMR_qt-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/ARMR_qt-macnotificationhandler.$(OBJEXT): qt/$(am__dirstamp) \	qt/$(DEPDIR)/$(am__dirstamp)qt/res/$(am__dirstamp):	@$(MKDIR_P) qt/res	@: > qt/res/$(am__dirstamp)qt/res/$(DEPDIR)/$(am__dirstamp):	@$(MKDIR_P) qt/res/$(DEPDIR)	@: > qt/res/$(DEPDIR)/$(am__dirstamp)qt/res/bitcoin-qt.$(OBJEXT): qt/res/$(am__dirstamp) \	qt/res/$(DEPDIR)/$(am__dirstamp)qt/ARMR-qt$(EXEEXT): $(qt_ARMR_qt_OBJECTS) $(qt_ARMR_qt_DEPENDENCIES) $(EXTRA_qt_ARMR_qt_DEPENDENCIES) qt/$(am__dirstamp)	@rm -f qt/ARMR-qt$(EXEEXT)	$(AM_V_OBJCXXLD)$(qt_ARMR_qt_LINK) $(qt_ARMR_qt_OBJECTS) $(qt_ARMR_qt_LDADD) $(LIBS)mostlyclean-compile:	-rm -f *.$(OBJEXT)	-rm -f compat/*.$(OBJEXT)	-rm -f leveldb/db/*.$(OBJEXT)	-rm -f leveldb/helpers/memenv/*.$(OBJEXT)	-rm -f leveldb/port/*.$(OBJEXT)	-rm -f leveldb/table/*.$(OBJEXT)	-rm -f leveldb/util/*.$(OBJEXT)	-rm -f lz4/*.$(OBJEXT)	-rm -f qt/*.$(OBJEXT)	-rm -f qt/plugins/mrichtexteditor/*.$(OBJEXT)	-rm -f qt/res/*.$(OBJEXT)	-rm -f xxhash/*.$(OBJEXT)distclean-compile:	-rm -f *.tab.c#include ./$(DEPDIR)/Armrd-daemon.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-aes_helper.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-anonymize.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-blake.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-bmw.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-cubehash.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-echo.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-fugue.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-groestl.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-hamsi.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-hamsi_helper.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-hash.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-jh.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-keccak.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-kernel.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-key.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-luffa.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-miner.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-netbase.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-protocol.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-script.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-shavite.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-simd.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-skein.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-smessage.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-stealth.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-sync.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-util.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_common_a-version.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-addrman.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-alert.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-bloom.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-db.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-init.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-keystore.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-main.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-net.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-noui.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-rpcmining.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-rpcnet.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-rpcsmessage.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-script.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_util_a-sync.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_util_a-util.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-crypter.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-scrypt.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-stealth.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-wallet.Po # am--include-marker#include ./$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po # am--include-marker#include compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po # am--include-marker#include compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-c.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po # am--include-marker#include leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po # am--include-marker#include leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po # am--include-marker#include leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Po # am--include-marker#include leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-block.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-format.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-table.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po # am--include-marker#include leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-env.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-options.Po # am--include-marker#include leveldb/util/$(DEPDIR)/libleveldb_a-status.Po # am--include-marker#include lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Po # am--include-marker#include qt/$(DEPDIR)/ARMR_qt-bitcoin.Po # am--include-marker#include qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Po # am--include-marker#include qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-notificator.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Po # am--include-marker#include qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Po # am--include-marker#include qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Po # am--include-marker#include qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Po # am--include-marker#include xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Po # am--include-marker$(am__depfiles_remade):	@$(MKDIR_P) $(@D)	@echo '# dummy' >$@-t && $(am__mv) $@-t $@am--depfiles: $(am__depfiles_remade).c.o:#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_CC)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(COMPILE) -c -o $@ $<.c.obj:#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_CC)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`libbitcoin_common_a-aes_helper.o: aes_helper.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-aes_helper.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-aes_helper.Tpo -c -o libbitcoin_common_a-aes_helper.o `test -f 'aes_helper.c' || echo '$(srcdir)/'`aes_helper.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-aes_helper.Tpo $(DEPDIR)/libbitcoin_common_a-aes_helper.Po#	$(AM_V_CC)source='aes_helper.c' object='libbitcoin_common_a-aes_helper.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-aes_helper.o `test -f 'aes_helper.c' || echo '$(srcdir)/'`aes_helper.clibbitcoin_common_a-aes_helper.obj: aes_helper.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-aes_helper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-aes_helper.Tpo -c -o libbitcoin_common_a-aes_helper.obj `if test -f 'aes_helper.c'; then $(CYGPATH_W) 'aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/aes_helper.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-aes_helper.Tpo $(DEPDIR)/libbitcoin_common_a-aes_helper.Po#	$(AM_V_CC)source='aes_helper.c' object='libbitcoin_common_a-aes_helper.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-aes_helper.obj `if test -f 'aes_helper.c'; then $(CYGPATH_W) 'aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/aes_helper.c'; fi`libbitcoin_common_a-blake.o: blake.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-blake.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-blake.Tpo -c -o libbitcoin_common_a-blake.o `test -f 'blake.c' || echo '$(srcdir)/'`blake.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-blake.Tpo $(DEPDIR)/libbitcoin_common_a-blake.Po#	$(AM_V_CC)source='blake.c' object='libbitcoin_common_a-blake.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-blake.o `test -f 'blake.c' || echo '$(srcdir)/'`blake.clibbitcoin_common_a-blake.obj: blake.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-blake.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-blake.Tpo -c -o libbitcoin_common_a-blake.obj `if test -f 'blake.c'; then $(CYGPATH_W) 'blake.c'; else $(CYGPATH_W) '$(srcdir)/blake.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-blake.Tpo $(DEPDIR)/libbitcoin_common_a-blake.Po#	$(AM_V_CC)source='blake.c' object='libbitcoin_common_a-blake.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-blake.obj `if test -f 'blake.c'; then $(CYGPATH_W) 'blake.c'; else $(CYGPATH_W) '$(srcdir)/blake.c'; fi`libbitcoin_common_a-bmw.o: bmw.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-bmw.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-bmw.Tpo -c -o libbitcoin_common_a-bmw.o `test -f 'bmw.c' || echo '$(srcdir)/'`bmw.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-bmw.Tpo $(DEPDIR)/libbitcoin_common_a-bmw.Po#	$(AM_V_CC)source='bmw.c' object='libbitcoin_common_a-bmw.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-bmw.o `test -f 'bmw.c' || echo '$(srcdir)/'`bmw.clibbitcoin_common_a-bmw.obj: bmw.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-bmw.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-bmw.Tpo -c -o libbitcoin_common_a-bmw.obj `if test -f 'bmw.c'; then $(CYGPATH_W) 'bmw.c'; else $(CYGPATH_W) '$(srcdir)/bmw.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-bmw.Tpo $(DEPDIR)/libbitcoin_common_a-bmw.Po#	$(AM_V_CC)source='bmw.c' object='libbitcoin_common_a-bmw.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-bmw.obj `if test -f 'bmw.c'; then $(CYGPATH_W) 'bmw.c'; else $(CYGPATH_W) '$(srcdir)/bmw.c'; fi`libbitcoin_common_a-cubehash.o: cubehash.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-cubehash.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-cubehash.Tpo -c -o libbitcoin_common_a-cubehash.o `test -f 'cubehash.c' || echo '$(srcdir)/'`cubehash.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-cubehash.Tpo $(DEPDIR)/libbitcoin_common_a-cubehash.Po#	$(AM_V_CC)source='cubehash.c' object='libbitcoin_common_a-cubehash.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-cubehash.o `test -f 'cubehash.c' || echo '$(srcdir)/'`cubehash.clibbitcoin_common_a-cubehash.obj: cubehash.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-cubehash.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-cubehash.Tpo -c -o libbitcoin_common_a-cubehash.obj `if test -f 'cubehash.c'; then $(CYGPATH_W) 'cubehash.c'; else $(CYGPATH_W) '$(srcdir)/cubehash.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-cubehash.Tpo $(DEPDIR)/libbitcoin_common_a-cubehash.Po#	$(AM_V_CC)source='cubehash.c' object='libbitcoin_common_a-cubehash.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-cubehash.obj `if test -f 'cubehash.c'; then $(CYGPATH_W) 'cubehash.c'; else $(CYGPATH_W) '$(srcdir)/cubehash.c'; fi`libbitcoin_common_a-fugue.o: fugue.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-fugue.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-fugue.Tpo -c -o libbitcoin_common_a-fugue.o `test -f 'fugue.c' || echo '$(srcdir)/'`fugue.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-fugue.Tpo $(DEPDIR)/libbitcoin_common_a-fugue.Po#	$(AM_V_CC)source='fugue.c' object='libbitcoin_common_a-fugue.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-fugue.o `test -f 'fugue.c' || echo '$(srcdir)/'`fugue.clibbitcoin_common_a-fugue.obj: fugue.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-fugue.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-fugue.Tpo -c -o libbitcoin_common_a-fugue.obj `if test -f 'fugue.c'; then $(CYGPATH_W) 'fugue.c'; else $(CYGPATH_W) '$(srcdir)/fugue.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-fugue.Tpo $(DEPDIR)/libbitcoin_common_a-fugue.Po#	$(AM_V_CC)source='fugue.c' object='libbitcoin_common_a-fugue.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-fugue.obj `if test -f 'fugue.c'; then $(CYGPATH_W) 'fugue.c'; else $(CYGPATH_W) '$(srcdir)/fugue.c'; fi`libbitcoin_common_a-echo.o: echo.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-echo.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-echo.Tpo -c -o libbitcoin_common_a-echo.o `test -f 'echo.c' || echo '$(srcdir)/'`echo.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-echo.Tpo $(DEPDIR)/libbitcoin_common_a-echo.Po#	$(AM_V_CC)source='echo.c' object='libbitcoin_common_a-echo.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-echo.o `test -f 'echo.c' || echo '$(srcdir)/'`echo.clibbitcoin_common_a-echo.obj: echo.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-echo.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-echo.Tpo -c -o libbitcoin_common_a-echo.obj `if test -f 'echo.c'; then $(CYGPATH_W) 'echo.c'; else $(CYGPATH_W) '$(srcdir)/echo.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-echo.Tpo $(DEPDIR)/libbitcoin_common_a-echo.Po#	$(AM_V_CC)source='echo.c' object='libbitcoin_common_a-echo.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-echo.obj `if test -f 'echo.c'; then $(CYGPATH_W) 'echo.c'; else $(CYGPATH_W) '$(srcdir)/echo.c'; fi`libbitcoin_common_a-groestl.o: groestl.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-groestl.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-groestl.Tpo -c -o libbitcoin_common_a-groestl.o `test -f 'groestl.c' || echo '$(srcdir)/'`groestl.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-groestl.Tpo $(DEPDIR)/libbitcoin_common_a-groestl.Po#	$(AM_V_CC)source='groestl.c' object='libbitcoin_common_a-groestl.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-groestl.o `test -f 'groestl.c' || echo '$(srcdir)/'`groestl.clibbitcoin_common_a-groestl.obj: groestl.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-groestl.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-groestl.Tpo -c -o libbitcoin_common_a-groestl.obj `if test -f 'groestl.c'; then $(CYGPATH_W) 'groestl.c'; else $(CYGPATH_W) '$(srcdir)/groestl.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-groestl.Tpo $(DEPDIR)/libbitcoin_common_a-groestl.Po#	$(AM_V_CC)source='groestl.c' object='libbitcoin_common_a-groestl.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-groestl.obj `if test -f 'groestl.c'; then $(CYGPATH_W) 'groestl.c'; else $(CYGPATH_W) '$(srcdir)/groestl.c'; fi`libbitcoin_common_a-hamsi_helper.o: hamsi_helper.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-hamsi_helper.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hamsi_helper.Tpo -c -o libbitcoin_common_a-hamsi_helper.o `test -f 'hamsi_helper.c' || echo '$(srcdir)/'`hamsi_helper.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hamsi_helper.Tpo $(DEPDIR)/libbitcoin_common_a-hamsi_helper.Po#	$(AM_V_CC)source='hamsi_helper.c' object='libbitcoin_common_a-hamsi_helper.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-hamsi_helper.o `test -f 'hamsi_helper.c' || echo '$(srcdir)/'`hamsi_helper.clibbitcoin_common_a-hamsi_helper.obj: hamsi_helper.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-hamsi_helper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hamsi_helper.Tpo -c -o libbitcoin_common_a-hamsi_helper.obj `if test -f 'hamsi_helper.c'; then $(CYGPATH_W) 'hamsi_helper.c'; else $(CYGPATH_W) '$(srcdir)/hamsi_helper.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hamsi_helper.Tpo $(DEPDIR)/libbitcoin_common_a-hamsi_helper.Po#	$(AM_V_CC)source='hamsi_helper.c' object='libbitcoin_common_a-hamsi_helper.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-hamsi_helper.obj `if test -f 'hamsi_helper.c'; then $(CYGPATH_W) 'hamsi_helper.c'; else $(CYGPATH_W) '$(srcdir)/hamsi_helper.c'; fi`libbitcoin_common_a-hamsi.o: hamsi.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-hamsi.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hamsi.Tpo -c -o libbitcoin_common_a-hamsi.o `test -f 'hamsi.c' || echo '$(srcdir)/'`hamsi.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hamsi.Tpo $(DEPDIR)/libbitcoin_common_a-hamsi.Po#	$(AM_V_CC)source='hamsi.c' object='libbitcoin_common_a-hamsi.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-hamsi.o `test -f 'hamsi.c' || echo '$(srcdir)/'`hamsi.clibbitcoin_common_a-hamsi.obj: hamsi.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-hamsi.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hamsi.Tpo -c -o libbitcoin_common_a-hamsi.obj `if test -f 'hamsi.c'; then $(CYGPATH_W) 'hamsi.c'; else $(CYGPATH_W) '$(srcdir)/hamsi.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hamsi.Tpo $(DEPDIR)/libbitcoin_common_a-hamsi.Po#	$(AM_V_CC)source='hamsi.c' object='libbitcoin_common_a-hamsi.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-hamsi.obj `if test -f 'hamsi.c'; then $(CYGPATH_W) 'hamsi.c'; else $(CYGPATH_W) '$(srcdir)/hamsi.c'; fi`libbitcoin_common_a-jh.o: jh.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-jh.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-jh.Tpo -c -o libbitcoin_common_a-jh.o `test -f 'jh.c' || echo '$(srcdir)/'`jh.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-jh.Tpo $(DEPDIR)/libbitcoin_common_a-jh.Po#	$(AM_V_CC)source='jh.c' object='libbitcoin_common_a-jh.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-jh.o `test -f 'jh.c' || echo '$(srcdir)/'`jh.clibbitcoin_common_a-jh.obj: jh.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-jh.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-jh.Tpo -c -o libbitcoin_common_a-jh.obj `if test -f 'jh.c'; then $(CYGPATH_W) 'jh.c'; else $(CYGPATH_W) '$(srcdir)/jh.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-jh.Tpo $(DEPDIR)/libbitcoin_common_a-jh.Po#	$(AM_V_CC)source='jh.c' object='libbitcoin_common_a-jh.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-jh.obj `if test -f 'jh.c'; then $(CYGPATH_W) 'jh.c'; else $(CYGPATH_W) '$(srcdir)/jh.c'; fi`libbitcoin_common_a-keccak.o: keccak.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-keccak.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keccak.Tpo -c -o libbitcoin_common_a-keccak.o `test -f 'keccak.c' || echo '$(srcdir)/'`keccak.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keccak.Tpo $(DEPDIR)/libbitcoin_common_a-keccak.Po#	$(AM_V_CC)source='keccak.c' object='libbitcoin_common_a-keccak.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-keccak.o `test -f 'keccak.c' || echo '$(srcdir)/'`keccak.clibbitcoin_common_a-keccak.obj: keccak.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-keccak.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keccak.Tpo -c -o libbitcoin_common_a-keccak.obj `if test -f 'keccak.c'; then $(CYGPATH_W) 'keccak.c'; else $(CYGPATH_W) '$(srcdir)/keccak.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keccak.Tpo $(DEPDIR)/libbitcoin_common_a-keccak.Po#	$(AM_V_CC)source='keccak.c' object='libbitcoin_common_a-keccak.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-keccak.obj `if test -f 'keccak.c'; then $(CYGPATH_W) 'keccak.c'; else $(CYGPATH_W) '$(srcdir)/keccak.c'; fi`libbitcoin_common_a-luffa.o: luffa.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-luffa.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-luffa.Tpo -c -o libbitcoin_common_a-luffa.o `test -f 'luffa.c' || echo '$(srcdir)/'`luffa.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-luffa.Tpo $(DEPDIR)/libbitcoin_common_a-luffa.Po#	$(AM_V_CC)source='luffa.c' object='libbitcoin_common_a-luffa.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-luffa.o `test -f 'luffa.c' || echo '$(srcdir)/'`luffa.clibbitcoin_common_a-luffa.obj: luffa.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-luffa.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-luffa.Tpo -c -o libbitcoin_common_a-luffa.obj `if test -f 'luffa.c'; then $(CYGPATH_W) 'luffa.c'; else $(CYGPATH_W) '$(srcdir)/luffa.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-luffa.Tpo $(DEPDIR)/libbitcoin_common_a-luffa.Po#	$(AM_V_CC)source='luffa.c' object='libbitcoin_common_a-luffa.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-luffa.obj `if test -f 'luffa.c'; then $(CYGPATH_W) 'luffa.c'; else $(CYGPATH_W) '$(srcdir)/luffa.c'; fi`libbitcoin_common_a-shavite.o: shavite.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-shavite.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-shavite.Tpo -c -o libbitcoin_common_a-shavite.o `test -f 'shavite.c' || echo '$(srcdir)/'`shavite.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-shavite.Tpo $(DEPDIR)/libbitcoin_common_a-shavite.Po#	$(AM_V_CC)source='shavite.c' object='libbitcoin_common_a-shavite.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-shavite.o `test -f 'shavite.c' || echo '$(srcdir)/'`shavite.clibbitcoin_common_a-shavite.obj: shavite.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-shavite.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-shavite.Tpo -c -o libbitcoin_common_a-shavite.obj `if test -f 'shavite.c'; then $(CYGPATH_W) 'shavite.c'; else $(CYGPATH_W) '$(srcdir)/shavite.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-shavite.Tpo $(DEPDIR)/libbitcoin_common_a-shavite.Po#	$(AM_V_CC)source='shavite.c' object='libbitcoin_common_a-shavite.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-shavite.obj `if test -f 'shavite.c'; then $(CYGPATH_W) 'shavite.c'; else $(CYGPATH_W) '$(srcdir)/shavite.c'; fi`libbitcoin_common_a-simd.o: simd.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-simd.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-simd.Tpo -c -o libbitcoin_common_a-simd.o `test -f 'simd.c' || echo '$(srcdir)/'`simd.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-simd.Tpo $(DEPDIR)/libbitcoin_common_a-simd.Po#	$(AM_V_CC)source='simd.c' object='libbitcoin_common_a-simd.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-simd.o `test -f 'simd.c' || echo '$(srcdir)/'`simd.clibbitcoin_common_a-simd.obj: simd.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-simd.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-simd.Tpo -c -o libbitcoin_common_a-simd.obj `if test -f 'simd.c'; then $(CYGPATH_W) 'simd.c'; else $(CYGPATH_W) '$(srcdir)/simd.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-simd.Tpo $(DEPDIR)/libbitcoin_common_a-simd.Po#	$(AM_V_CC)source='simd.c' object='libbitcoin_common_a-simd.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-simd.obj `if test -f 'simd.c'; then $(CYGPATH_W) 'simd.c'; else $(CYGPATH_W) '$(srcdir)/simd.c'; fi`libbitcoin_common_a-skein.o: skein.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-skein.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-skein.Tpo -c -o libbitcoin_common_a-skein.o `test -f 'skein.c' || echo '$(srcdir)/'`skein.c#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-skein.Tpo $(DEPDIR)/libbitcoin_common_a-skein.Po#	$(AM_V_CC)source='skein.c' object='libbitcoin_common_a-skein.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-skein.o `test -f 'skein.c' || echo '$(srcdir)/'`skein.clibbitcoin_common_a-skein.obj: skein.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_common_a-skein.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-skein.Tpo -c -o libbitcoin_common_a-skein.obj `if test -f 'skein.c'; then $(CYGPATH_W) 'skein.c'; else $(CYGPATH_W) '$(srcdir)/skein.c'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-skein.Tpo $(DEPDIR)/libbitcoin_common_a-skein.Po#	$(AM_V_CC)source='skein.c' object='libbitcoin_common_a-skein.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_common_a-skein.obj `if test -f 'skein.c'; then $(CYGPATH_W) 'skein.c'; else $(CYGPATH_W) '$(srcdir)/skein.c'; fi`xxhash/libbitcoin_common_a-xxhash.o: xxhash/xxhash.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xxhash/libbitcoin_common_a-xxhash.o -MD -MP -MF xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Tpo -c -o xxhash/libbitcoin_common_a-xxhash.o `test -f 'xxhash/xxhash.c' || echo '$(srcdir)/'`xxhash/xxhash.c#	$(AM_V_at)$(am__mv) xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Tpo xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Po#	$(AM_V_CC)source='xxhash/xxhash.c' object='xxhash/libbitcoin_common_a-xxhash.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xxhash/libbitcoin_common_a-xxhash.o `test -f 'xxhash/xxhash.c' || echo '$(srcdir)/'`xxhash/xxhash.cxxhash/libbitcoin_common_a-xxhash.obj: xxhash/xxhash.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xxhash/libbitcoin_common_a-xxhash.obj -MD -MP -MF xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Tpo -c -o xxhash/libbitcoin_common_a-xxhash.obj `if test -f 'xxhash/xxhash.c'; then $(CYGPATH_W) 'xxhash/xxhash.c'; else $(CYGPATH_W) '$(srcdir)/xxhash/xxhash.c'; fi`#	$(AM_V_at)$(am__mv) xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Tpo xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Po#	$(AM_V_CC)source='xxhash/xxhash.c' object='xxhash/libbitcoin_common_a-xxhash.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xxhash/libbitcoin_common_a-xxhash.obj `if test -f 'xxhash/xxhash.c'; then $(CYGPATH_W) 'xxhash/xxhash.c'; else $(CYGPATH_W) '$(srcdir)/xxhash/xxhash.c'; fi`lz4/libbitcoin_common_a-lz4.o: lz4/lz4.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lz4/libbitcoin_common_a-lz4.o -MD -MP -MF lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Tpo -c -o lz4/libbitcoin_common_a-lz4.o `test -f 'lz4/lz4.c' || echo '$(srcdir)/'`lz4/lz4.c#	$(AM_V_at)$(am__mv) lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Tpo lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Po#	$(AM_V_CC)source='lz4/lz4.c' object='lz4/libbitcoin_common_a-lz4.o' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lz4/libbitcoin_common_a-lz4.o `test -f 'lz4/lz4.c' || echo '$(srcdir)/'`lz4/lz4.clz4/libbitcoin_common_a-lz4.obj: lz4/lz4.c#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lz4/libbitcoin_common_a-lz4.obj -MD -MP -MF lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Tpo -c -o lz4/libbitcoin_common_a-lz4.obj `if test -f 'lz4/lz4.c'; then $(CYGPATH_W) 'lz4/lz4.c'; else $(CYGPATH_W) '$(srcdir)/lz4/lz4.c'; fi`#	$(AM_V_at)$(am__mv) lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Tpo lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Po#	$(AM_V_CC)source='lz4/lz4.c' object='lz4/libbitcoin_common_a-lz4.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lz4/libbitcoin_common_a-lz4.obj `if test -f 'lz4/lz4.c'; then $(CYGPATH_W) 'lz4/lz4.c'; else $(CYGPATH_W) '$(srcdir)/lz4/lz4.c'; fi`.cc.o:#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_CXX)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<.cc.obj:#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_CXX)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`leveldb/db/libleveldb_a-builder.o: leveldb/db/builder.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-builder.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo -c -o leveldb/db/libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/libleveldb_a-builder.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.ccleveldb/db/libleveldb_a-builder.obj: leveldb/db/builder.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-builder.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo -c -o leveldb/db/libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/libleveldb_a-builder.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`leveldb/db/libleveldb_a-c.o: leveldb/db/c.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-c.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo -c -o leveldb/db/libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-c.Po#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/libleveldb_a-c.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.ccleveldb/db/libleveldb_a-c.obj: leveldb/db/c.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-c.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo -c -o leveldb/db/libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-c.Po#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/libleveldb_a-c.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`leveldb/db/libleveldb_a-dbformat.o: leveldb/db/dbformat.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dbformat.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo -c -o leveldb/db/libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/libleveldb_a-dbformat.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.ccleveldb/db/libleveldb_a-dbformat.obj: leveldb/db/dbformat.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dbformat.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo -c -o leveldb/db/libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/libleveldb_a-dbformat.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`leveldb/db/libleveldb_a-db_impl.o: leveldb/db/db_impl.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_impl.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo -c -o leveldb/db/libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/libleveldb_a-db_impl.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.ccleveldb/db/libleveldb_a-db_impl.obj: leveldb/db/db_impl.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_impl.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo -c -o leveldb/db/libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/libleveldb_a-db_impl.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`leveldb/db/libleveldb_a-db_iter.o: leveldb/db/db_iter.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_iter.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo -c -o leveldb/db/libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/libleveldb_a-db_iter.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.ccleveldb/db/libleveldb_a-db_iter.obj: leveldb/db/db_iter.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_iter.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo -c -o leveldb/db/libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/libleveldb_a-db_iter.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`leveldb/db/libleveldb_a-dumpfile.o: leveldb/db/dumpfile.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dumpfile.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo -c -o leveldb/db/libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/libleveldb_a-dumpfile.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.ccleveldb/db/libleveldb_a-dumpfile.obj: leveldb/db/dumpfile.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dumpfile.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo -c -o leveldb/db/libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/libleveldb_a-dumpfile.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`leveldb/db/libleveldb_a-filename.o: leveldb/db/filename.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-filename.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo -c -o leveldb/db/libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/libleveldb_a-filename.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.ccleveldb/db/libleveldb_a-filename.obj: leveldb/db/filename.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-filename.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo -c -o leveldb/db/libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/libleveldb_a-filename.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`leveldb/db/libleveldb_a-log_reader.o: leveldb/db/log_reader.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_reader.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo -c -o leveldb/db/libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/libleveldb_a-log_reader.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.ccleveldb/db/libleveldb_a-log_reader.obj: leveldb/db/log_reader.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_reader.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo -c -o leveldb/db/libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/libleveldb_a-log_reader.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`leveldb/db/libleveldb_a-log_writer.o: leveldb/db/log_writer.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_writer.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo -c -o leveldb/db/libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/libleveldb_a-log_writer.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.ccleveldb/db/libleveldb_a-log_writer.obj: leveldb/db/log_writer.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_writer.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo -c -o leveldb/db/libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/libleveldb_a-log_writer.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`leveldb/db/libleveldb_a-memtable.o: leveldb/db/memtable.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-memtable.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo -c -o leveldb/db/libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/libleveldb_a-memtable.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.ccleveldb/db/libleveldb_a-memtable.obj: leveldb/db/memtable.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-memtable.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo -c -o leveldb/db/libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/libleveldb_a-memtable.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`leveldb/db/libleveldb_a-repair.o: leveldb/db/repair.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-repair.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo -c -o leveldb/db/libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/libleveldb_a-repair.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.ccleveldb/db/libleveldb_a-repair.obj: leveldb/db/repair.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-repair.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo -c -o leveldb/db/libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/libleveldb_a-repair.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`leveldb/db/libleveldb_a-table_cache.o: leveldb/db/table_cache.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-table_cache.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo -c -o leveldb/db/libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/libleveldb_a-table_cache.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.ccleveldb/db/libleveldb_a-table_cache.obj: leveldb/db/table_cache.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-table_cache.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo -c -o leveldb/db/libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/libleveldb_a-table_cache.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`leveldb/db/libleveldb_a-version_edit.o: leveldb/db/version_edit.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_edit.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo -c -o leveldb/db/libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/libleveldb_a-version_edit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.ccleveldb/db/libleveldb_a-version_edit.obj: leveldb/db/version_edit.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_edit.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo -c -o leveldb/db/libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/libleveldb_a-version_edit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`leveldb/db/libleveldb_a-version_set.o: leveldb/db/version_set.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_set.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo -c -o leveldb/db/libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/libleveldb_a-version_set.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.ccleveldb/db/libleveldb_a-version_set.obj: leveldb/db/version_set.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_set.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo -c -o leveldb/db/libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/libleveldb_a-version_set.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`leveldb/db/libleveldb_a-write_batch.o: leveldb/db/write_batch.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-write_batch.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo -c -o leveldb/db/libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/libleveldb_a-write_batch.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.ccleveldb/db/libleveldb_a-write_batch.obj: leveldb/db/write_batch.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-write_batch.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo -c -o leveldb/db/libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/libleveldb_a-write_batch.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`leveldb/table/libleveldb_a-block_builder.o: leveldb/table/block_builder.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo -c -o leveldb/table/libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/libleveldb_a-block_builder.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.ccleveldb/table/libleveldb_a-block_builder.obj: leveldb/table/block_builder.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo -c -o leveldb/table/libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/libleveldb_a-block_builder.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`leveldb/table/libleveldb_a-block.o: leveldb/table/block.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo -c -o leveldb/table/libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block.Po#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/libleveldb_a-block.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.ccleveldb/table/libleveldb_a-block.obj: leveldb/table/block.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo -c -o leveldb/table/libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block.Po#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/libleveldb_a-block.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`leveldb/table/libleveldb_a-filter_block.o: leveldb/table/filter_block.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-filter_block.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo -c -o leveldb/table/libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/libleveldb_a-filter_block.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.ccleveldb/table/libleveldb_a-filter_block.obj: leveldb/table/filter_block.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-filter_block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo -c -o leveldb/table/libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/libleveldb_a-filter_block.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`leveldb/table/libleveldb_a-format.o: leveldb/table/format.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-format.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo -c -o leveldb/table/libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-format.Po#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/libleveldb_a-format.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.ccleveldb/table/libleveldb_a-format.obj: leveldb/table/format.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-format.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo -c -o leveldb/table/libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-format.Po#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/libleveldb_a-format.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`leveldb/table/libleveldb_a-iterator.o: leveldb/table/iterator.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo -c -o leveldb/table/libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/libleveldb_a-iterator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.ccleveldb/table/libleveldb_a-iterator.obj: leveldb/table/iterator.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo -c -o leveldb/table/libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/libleveldb_a-iterator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`leveldb/table/libleveldb_a-merger.o: leveldb/table/merger.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-merger.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo -c -o leveldb/table/libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/libleveldb_a-merger.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.ccleveldb/table/libleveldb_a-merger.obj: leveldb/table/merger.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-merger.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo -c -o leveldb/table/libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/libleveldb_a-merger.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`leveldb/table/libleveldb_a-table_builder.o: leveldb/table/table_builder.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo -c -o leveldb/table/libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/libleveldb_a-table_builder.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.ccleveldb/table/libleveldb_a-table_builder.obj: leveldb/table/table_builder.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo -c -o leveldb/table/libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/libleveldb_a-table_builder.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`leveldb/table/libleveldb_a-table.o: leveldb/table/table.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo -c -o leveldb/table/libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table.Po#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/libleveldb_a-table.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.ccleveldb/table/libleveldb_a-table.obj: leveldb/table/table.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo -c -o leveldb/table/libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table.Po#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/libleveldb_a-table.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`leveldb/table/libleveldb_a-two_level_iterator.o: leveldb/table/two_level_iterator.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-two_level_iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/libleveldb_a-two_level_iterator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.ccleveldb/table/libleveldb_a-two_level_iterator.obj: leveldb/table/two_level_iterator.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-two_level_iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/libleveldb_a-two_level_iterator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`leveldb/util/libleveldb_a-arena.o: leveldb/util/arena.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-arena.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo -c -o leveldb/util/libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/libleveldb_a-arena.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.ccleveldb/util/libleveldb_a-arena.obj: leveldb/util/arena.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-arena.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo -c -o leveldb/util/libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/libleveldb_a-arena.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`leveldb/util/libleveldb_a-bloom.o: leveldb/util/bloom.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-bloom.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo -c -o leveldb/util/libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/libleveldb_a-bloom.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.ccleveldb/util/libleveldb_a-bloom.obj: leveldb/util/bloom.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-bloom.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo -c -o leveldb/util/libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/libleveldb_a-bloom.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`leveldb/util/libleveldb_a-cache.o: leveldb/util/cache.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-cache.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo -c -o leveldb/util/libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/libleveldb_a-cache.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.ccleveldb/util/libleveldb_a-cache.obj: leveldb/util/cache.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-cache.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo -c -o leveldb/util/libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/libleveldb_a-cache.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`leveldb/util/libleveldb_a-coding.o: leveldb/util/coding.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-coding.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo -c -o leveldb/util/libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/libleveldb_a-coding.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.ccleveldb/util/libleveldb_a-coding.obj: leveldb/util/coding.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-coding.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo -c -o leveldb/util/libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/libleveldb_a-coding.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`leveldb/util/libleveldb_a-comparator.o: leveldb/util/comparator.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-comparator.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo -c -o leveldb/util/libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/libleveldb_a-comparator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.ccleveldb/util/libleveldb_a-comparator.obj: leveldb/util/comparator.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-comparator.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo -c -o leveldb/util/libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/libleveldb_a-comparator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`leveldb/util/libleveldb_a-crc32c.o: leveldb/util/crc32c.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-crc32c.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo -c -o leveldb/util/libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/libleveldb_a-crc32c.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.ccleveldb/util/libleveldb_a-crc32c.obj: leveldb/util/crc32c.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-crc32c.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo -c -o leveldb/util/libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/libleveldb_a-crc32c.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`leveldb/util/libleveldb_a-env.o: leveldb/util/env.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo -c -o leveldb/util/libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env.Po#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/libleveldb_a-env.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.ccleveldb/util/libleveldb_a-env.obj: leveldb/util/env.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo -c -o leveldb/util/libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env.Po#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/libleveldb_a-env.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`leveldb/util/libleveldb_a-env_posix.o: leveldb/util/env_posix.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_posix.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo -c -o leveldb/util/libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/libleveldb_a-env_posix.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.ccleveldb/util/libleveldb_a-env_posix.obj: leveldb/util/env_posix.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_posix.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo -c -o leveldb/util/libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/libleveldb_a-env_posix.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`leveldb/util/libleveldb_a-filter_policy.o: leveldb/util/filter_policy.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-filter_policy.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo -c -o leveldb/util/libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/libleveldb_a-filter_policy.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.ccleveldb/util/libleveldb_a-filter_policy.obj: leveldb/util/filter_policy.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-filter_policy.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo -c -o leveldb/util/libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/libleveldb_a-filter_policy.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`leveldb/util/libleveldb_a-hash.o: leveldb/util/hash.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-hash.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo -c -o leveldb/util/libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/libleveldb_a-hash.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.ccleveldb/util/libleveldb_a-hash.obj: leveldb/util/hash.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-hash.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo -c -o leveldb/util/libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/libleveldb_a-hash.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`leveldb/util/libleveldb_a-histogram.o: leveldb/util/histogram.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-histogram.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo -c -o leveldb/util/libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/libleveldb_a-histogram.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.ccleveldb/util/libleveldb_a-histogram.obj: leveldb/util/histogram.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-histogram.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo -c -o leveldb/util/libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/libleveldb_a-histogram.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`leveldb/util/libleveldb_a-logging.o: leveldb/util/logging.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-logging.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo -c -o leveldb/util/libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/libleveldb_a-logging.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.ccleveldb/util/libleveldb_a-logging.obj: leveldb/util/logging.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-logging.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo -c -o leveldb/util/libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/libleveldb_a-logging.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`leveldb/util/libleveldb_a-options.o: leveldb/util/options.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-options.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo -c -o leveldb/util/libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-options.Po#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/libleveldb_a-options.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.ccleveldb/util/libleveldb_a-options.obj: leveldb/util/options.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-options.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo -c -o leveldb/util/libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-options.Po#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/libleveldb_a-options.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`leveldb/util/libleveldb_a-status.o: leveldb/util/status.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-status.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo -c -o leveldb/util/libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-status.Po#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/libleveldb_a-status.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.ccleveldb/util/libleveldb_a-status.obj: leveldb/util/status.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-status.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo -c -o leveldb/util/libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-status.Po#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/libleveldb_a-status.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`leveldb/util/libleveldb_a-env_win.o: leveldb/util/env_win.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_win.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Tpo -c -o leveldb/util/libleveldb_a-env_win.o `test -f 'leveldb/util/env_win.cc' || echo '$(srcdir)/'`leveldb/util/env_win.cc#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Po#	$(AM_V_CXX)source='leveldb/util/env_win.cc' object='leveldb/util/libleveldb_a-env_win.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_win.o `test -f 'leveldb/util/env_win.cc' || echo '$(srcdir)/'`leveldb/util/env_win.ccleveldb/util/libleveldb_a-env_win.obj: leveldb/util/env_win.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_win.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Tpo -c -o leveldb/util/libleveldb_a-env_win.obj `if test -f 'leveldb/util/env_win.cc'; then $(CYGPATH_W) 'leveldb/util/env_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_win.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Po#	$(AM_V_CXX)source='leveldb/util/env_win.cc' object='leveldb/util/libleveldb_a-env_win.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_win.obj `if test -f 'leveldb/util/env_win.cc'; then $(CYGPATH_W) 'leveldb/util/env_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_win.cc'; fi`leveldb/port/libleveldb_a-port_win.o: leveldb/port/port_win.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/libleveldb_a-port_win.o -MD -MP -MF leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Tpo -c -o leveldb/port/libleveldb_a-port_win.o `test -f 'leveldb/port/port_win.cc' || echo '$(srcdir)/'`leveldb/port/port_win.cc#	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Tpo leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Po#	$(AM_V_CXX)source='leveldb/port/port_win.cc' object='leveldb/port/libleveldb_a-port_win.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/libleveldb_a-port_win.o `test -f 'leveldb/port/port_win.cc' || echo '$(srcdir)/'`leveldb/port/port_win.ccleveldb/port/libleveldb_a-port_win.obj: leveldb/port/port_win.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/libleveldb_a-port_win.obj -MD -MP -MF leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Tpo -c -o leveldb/port/libleveldb_a-port_win.obj `if test -f 'leveldb/port/port_win.cc'; then $(CYGPATH_W) 'leveldb/port/port_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_win.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Tpo leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Po#	$(AM_V_CXX)source='leveldb/port/port_win.cc' object='leveldb/port/libleveldb_a-port_win.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/libleveldb_a-port_win.obj `if test -f 'leveldb/port/port_win.cc'; then $(CYGPATH_W) 'leveldb/port/port_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_win.cc'; fi`leveldb/port/libleveldb_a-port_posix.o: leveldb/port/port_posix.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/libleveldb_a-port_posix.o -MD -MP -MF leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Tpo -c -o leveldb/port/libleveldb_a-port_posix.o `test -f 'leveldb/port/port_posix.cc' || echo '$(srcdir)/'`leveldb/port/port_posix.cc#	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Tpo leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Po#	$(AM_V_CXX)source='leveldb/port/port_posix.cc' object='leveldb/port/libleveldb_a-port_posix.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/libleveldb_a-port_posix.o `test -f 'leveldb/port/port_posix.cc' || echo '$(srcdir)/'`leveldb/port/port_posix.ccleveldb/port/libleveldb_a-port_posix.obj: leveldb/port/port_posix.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/libleveldb_a-port_posix.obj -MD -MP -MF leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Tpo -c -o leveldb/port/libleveldb_a-port_posix.obj `if test -f 'leveldb/port/port_posix.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Tpo leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Po#	$(AM_V_CXX)source='leveldb/port/port_posix.cc' object='leveldb/port/libleveldb_a-port_posix.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/libleveldb_a-port_posix.obj `if test -f 'leveldb/port/port_posix.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix.cc'; fi`leveldb/helpers/memenv/libmemenv_a-memenv.o: leveldb/helpers/memenv/memenv.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/libmemenv_a-memenv.o -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc#	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/libmemenv_a-memenv.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.ccleveldb/helpers/memenv/libmemenv_a-memenv.obj: leveldb/helpers/memenv/memenv.cc#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/libmemenv_a-memenv.obj -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`#	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/libmemenv_a-memenv.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`libbitcoin_common_a-anonymize.o: anonymize.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-anonymize.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-anonymize.Tpo -c -o libbitcoin_common_a-anonymize.o `test -f 'anonymize.cpp' || echo '$(srcdir)/'`anonymize.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-anonymize.Tpo $(DEPDIR)/libbitcoin_common_a-anonymize.Po#	$(AM_V_CXX)source='anonymize.cpp' object='libbitcoin_common_a-anonymize.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-anonymize.o `test -f 'anonymize.cpp' || echo '$(srcdir)/'`anonymize.cpplibbitcoin_common_a-anonymize.obj: anonymize.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-anonymize.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-anonymize.Tpo -c -o libbitcoin_common_a-anonymize.obj `if test -f 'anonymize.cpp'; then $(CYGPATH_W) 'anonymize.cpp'; else $(CYGPATH_W) '$(srcdir)/anonymize.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-anonymize.Tpo $(DEPDIR)/libbitcoin_common_a-anonymize.Po#	$(AM_V_CXX)source='anonymize.cpp' object='libbitcoin_common_a-anonymize.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-anonymize.obj `if test -f 'anonymize.cpp'; then $(CYGPATH_W) 'anonymize.cpp'; else $(CYGPATH_W) '$(srcdir)/anonymize.cpp'; fi`libbitcoin_common_a-hash.o: hash.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-hash.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hash.Tpo -c -o libbitcoin_common_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hash.Tpo $(DEPDIR)/libbitcoin_common_a-hash.Po#	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_common_a-hash.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpplibbitcoin_common_a-hash.obj: hash.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-hash.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hash.Tpo -c -o libbitcoin_common_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hash.Tpo $(DEPDIR)/libbitcoin_common_a-hash.Po#	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_common_a-hash.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`libbitcoin_common_a-key.o: key.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpplibbitcoin_common_a-key.obj: key.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`libbitcoin_common_a-netbase.o: netbase.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po#	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpplibbitcoin_common_a-netbase.obj: netbase.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po#	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`libbitcoin_common_a-protocol.o: protocol.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpplibbitcoin_common_a-protocol.obj: protocol.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`libbitcoin_common_a-smessage.o: smessage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-smessage.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-smessage.Tpo -c -o libbitcoin_common_a-smessage.o `test -f 'smessage.cpp' || echo '$(srcdir)/'`smessage.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-smessage.Tpo $(DEPDIR)/libbitcoin_common_a-smessage.Po#	$(AM_V_CXX)source='smessage.cpp' object='libbitcoin_common_a-smessage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-smessage.o `test -f 'smessage.cpp' || echo '$(srcdir)/'`smessage.cpplibbitcoin_common_a-smessage.obj: smessage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-smessage.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-smessage.Tpo -c -o libbitcoin_common_a-smessage.obj `if test -f 'smessage.cpp'; then $(CYGPATH_W) 'smessage.cpp'; else $(CYGPATH_W) '$(srcdir)/smessage.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-smessage.Tpo $(DEPDIR)/libbitcoin_common_a-smessage.Po#	$(AM_V_CXX)source='smessage.cpp' object='libbitcoin_common_a-smessage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-smessage.obj `if test -f 'smessage.cpp'; then $(CYGPATH_W) 'smessage.cpp'; else $(CYGPATH_W) '$(srcdir)/smessage.cpp'; fi`libbitcoin_common_a-script.o: script.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-script.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-script.Tpo -c -o libbitcoin_common_a-script.o `test -f 'script.cpp' || echo '$(srcdir)/'`script.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-script.Tpo $(DEPDIR)/libbitcoin_common_a-script.Po#	$(AM_V_CXX)source='script.cpp' object='libbitcoin_common_a-script.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-script.o `test -f 'script.cpp' || echo '$(srcdir)/'`script.cpplibbitcoin_common_a-script.obj: script.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-script.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-script.Tpo -c -o libbitcoin_common_a-script.obj `if test -f 'script.cpp'; then $(CYGPATH_W) 'script.cpp'; else $(CYGPATH_W) '$(srcdir)/script.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-script.Tpo $(DEPDIR)/libbitcoin_common_a-script.Po#	$(AM_V_CXX)source='script.cpp' object='libbitcoin_common_a-script.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-script.obj `if test -f 'script.cpp'; then $(CYGPATH_W) 'script.cpp'; else $(CYGPATH_W) '$(srcdir)/script.cpp'; fi`libbitcoin_common_a-stealth.o: stealth.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-stealth.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-stealth.Tpo -c -o libbitcoin_common_a-stealth.o `test -f 'stealth.cpp' || echo '$(srcdir)/'`stealth.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-stealth.Tpo $(DEPDIR)/libbitcoin_common_a-stealth.Po#	$(AM_V_CXX)source='stealth.cpp' object='libbitcoin_common_a-stealth.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-stealth.o `test -f 'stealth.cpp' || echo '$(srcdir)/'`stealth.cpplibbitcoin_common_a-stealth.obj: stealth.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-stealth.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-stealth.Tpo -c -o libbitcoin_common_a-stealth.obj `if test -f 'stealth.cpp'; then $(CYGPATH_W) 'stealth.cpp'; else $(CYGPATH_W) '$(srcdir)/stealth.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-stealth.Tpo $(DEPDIR)/libbitcoin_common_a-stealth.Po#	$(AM_V_CXX)source='stealth.cpp' object='libbitcoin_common_a-stealth.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-stealth.obj `if test -f 'stealth.cpp'; then $(CYGPATH_W) 'stealth.cpp'; else $(CYGPATH_W) '$(srcdir)/stealth.cpp'; fi`libbitcoin_common_a-kernel.o: kernel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-kernel.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-kernel.Tpo -c -o libbitcoin_common_a-kernel.o `test -f 'kernel.cpp' || echo '$(srcdir)/'`kernel.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-kernel.Tpo $(DEPDIR)/libbitcoin_common_a-kernel.Po#	$(AM_V_CXX)source='kernel.cpp' object='libbitcoin_common_a-kernel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-kernel.o `test -f 'kernel.cpp' || echo '$(srcdir)/'`kernel.cpplibbitcoin_common_a-kernel.obj: kernel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-kernel.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-kernel.Tpo -c -o libbitcoin_common_a-kernel.obj `if test -f 'kernel.cpp'; then $(CYGPATH_W) 'kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-kernel.Tpo $(DEPDIR)/libbitcoin_common_a-kernel.Po#	$(AM_V_CXX)source='kernel.cpp' object='libbitcoin_common_a-kernel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-kernel.obj `if test -f 'kernel.cpp'; then $(CYGPATH_W) 'kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel.cpp'; fi`libbitcoin_common_a-miner.o: miner.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-miner.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-miner.Tpo -c -o libbitcoin_common_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-miner.Tpo $(DEPDIR)/libbitcoin_common_a-miner.Po#	$(AM_V_CXX)source='miner.cpp' object='libbitcoin_common_a-miner.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpplibbitcoin_common_a-miner.obj: miner.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-miner.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-miner.Tpo -c -o libbitcoin_common_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-miner.Tpo $(DEPDIR)/libbitcoin_common_a-miner.Po#	$(AM_V_CXX)source='miner.cpp' object='libbitcoin_common_a-miner.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`libbitcoin_common_a-sync.o: sync.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-sync.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-sync.Tpo -c -o libbitcoin_common_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-sync.Tpo $(DEPDIR)/libbitcoin_common_a-sync.Po#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_common_a-sync.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpplibbitcoin_common_a-sync.obj: sync.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-sync.Tpo -c -o libbitcoin_common_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-sync.Tpo $(DEPDIR)/libbitcoin_common_a-sync.Po#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_common_a-sync.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`libbitcoin_common_a-util.o: util.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-util.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-util.Tpo -c -o libbitcoin_common_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-util.Tpo $(DEPDIR)/libbitcoin_common_a-util.Po#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_common_a-util.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpplibbitcoin_common_a-util.obj: util.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-util.Tpo -c -o libbitcoin_common_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-util.Tpo $(DEPDIR)/libbitcoin_common_a-util.Po#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_common_a-util.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`libbitcoin_common_a-version.o: version.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-version.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-version.Tpo -c -o libbitcoin_common_a-version.o `test -f 'version.cpp' || echo '$(srcdir)/'`version.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-version.Tpo $(DEPDIR)/libbitcoin_common_a-version.Po#	$(AM_V_CXX)source='version.cpp' object='libbitcoin_common_a-version.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-version.o `test -f 'version.cpp' || echo '$(srcdir)/'`version.cpplibbitcoin_common_a-version.obj: version.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-version.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-version.Tpo -c -o libbitcoin_common_a-version.obj `if test -f 'version.cpp'; then $(CYGPATH_W) 'version.cpp'; else $(CYGPATH_W) '$(srcdir)/version.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-version.Tpo $(DEPDIR)/libbitcoin_common_a-version.Po#	$(AM_V_CXX)source='version.cpp' object='libbitcoin_common_a-version.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-version.obj `if test -f 'version.cpp'; then $(CYGPATH_W) 'version.cpp'; else $(CYGPATH_W) '$(srcdir)/version.cpp'; fi`libbitcoin_server_a-addrman.o: addrman.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpplibbitcoin_server_a-addrman.obj: addrman.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`libbitcoin_server_a-alert.o: alert.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-alert.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-alert.Tpo -c -o libbitcoin_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-alert.Tpo $(DEPDIR)/libbitcoin_server_a-alert.Po#	$(AM_V_CXX)source='alert.cpp' object='libbitcoin_server_a-alert.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpplibbitcoin_server_a-alert.obj: alert.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-alert.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-alert.Tpo -c -o libbitcoin_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-alert.Tpo $(DEPDIR)/libbitcoin_server_a-alert.Po#	$(AM_V_CXX)source='alert.cpp' object='libbitcoin_server_a-alert.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`libbitcoin_server_a-bloom.o: bloom.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bloom.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bloom.Tpo -c -o libbitcoin_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bloom.Tpo $(DEPDIR)/libbitcoin_server_a-bloom.Po#	$(AM_V_CXX)source='bloom.cpp' object='libbitcoin_server_a-bloom.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpplibbitcoin_server_a-bloom.obj: bloom.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bloom.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bloom.Tpo -c -o libbitcoin_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bloom.Tpo $(DEPDIR)/libbitcoin_server_a-bloom.Po#	$(AM_V_CXX)source='bloom.cpp' object='libbitcoin_server_a-bloom.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`libbitcoin_server_a-checkpoints.o: checkpoints.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po#	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpplibbitcoin_server_a-checkpoints.obj: checkpoints.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po#	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`libbitcoin_server_a-init.o: init.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpplibbitcoin_server_a-init.obj: init.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`libbitcoin_server_a-db.o: db.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-db.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-db.Tpo -c -o libbitcoin_server_a-db.o `test -f 'db.cpp' || echo '$(srcdir)/'`db.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-db.Tpo $(DEPDIR)/libbitcoin_server_a-db.Po#	$(AM_V_CXX)source='db.cpp' object='libbitcoin_server_a-db.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-db.o `test -f 'db.cpp' || echo '$(srcdir)/'`db.cpplibbitcoin_server_a-db.obj: db.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-db.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-db.Tpo -c -o libbitcoin_server_a-db.obj `if test -f 'db.cpp'; then $(CYGPATH_W) 'db.cpp'; else $(CYGPATH_W) '$(srcdir)/db.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-db.Tpo $(DEPDIR)/libbitcoin_server_a-db.Po#	$(AM_V_CXX)source='db.cpp' object='libbitcoin_server_a-db.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-db.obj `if test -f 'db.cpp'; then $(CYGPATH_W) 'db.cpp'; else $(CYGPATH_W) '$(srcdir)/db.cpp'; fi`libbitcoin_server_a-txdb-leveldb.o: txdb-leveldb.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txdb-leveldb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Tpo -c -o libbitcoin_server_a-txdb-leveldb.o `test -f 'txdb-leveldb.cpp' || echo '$(srcdir)/'`txdb-leveldb.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Tpo $(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Po#	$(AM_V_CXX)source='txdb-leveldb.cpp' object='libbitcoin_server_a-txdb-leveldb.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txdb-leveldb.o `test -f 'txdb-leveldb.cpp' || echo '$(srcdir)/'`txdb-leveldb.cpplibbitcoin_server_a-txdb-leveldb.obj: txdb-leveldb.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txdb-leveldb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Tpo -c -o libbitcoin_server_a-txdb-leveldb.obj `if test -f 'txdb-leveldb.cpp'; then $(CYGPATH_W) 'txdb-leveldb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb-leveldb.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Tpo $(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Po#	$(AM_V_CXX)source='txdb-leveldb.cpp' object='libbitcoin_server_a-txdb-leveldb.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txdb-leveldb.obj `if test -f 'txdb-leveldb.cpp'; then $(CYGPATH_W) 'txdb-leveldb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb-leveldb.cpp'; fi`libbitcoin_server_a-bitcoinrpc.o: bitcoinrpc.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bitcoinrpc.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo -c -o libbitcoin_server_a-bitcoinrpc.o `test -f 'bitcoinrpc.cpp' || echo '$(srcdir)/'`bitcoinrpc.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po#	$(AM_V_CXX)source='bitcoinrpc.cpp' object='libbitcoin_server_a-bitcoinrpc.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bitcoinrpc.o `test -f 'bitcoinrpc.cpp' || echo '$(srcdir)/'`bitcoinrpc.cpplibbitcoin_server_a-bitcoinrpc.obj: bitcoinrpc.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bitcoinrpc.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo -c -o libbitcoin_server_a-bitcoinrpc.obj `if test -f 'bitcoinrpc.cpp'; then $(CYGPATH_W) 'bitcoinrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinrpc.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po#	$(AM_V_CXX)source='bitcoinrpc.cpp' object='libbitcoin_server_a-bitcoinrpc.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bitcoinrpc.obj `if test -f 'bitcoinrpc.cpp'; then $(CYGPATH_W) 'bitcoinrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinrpc.cpp'; fi`libbitcoin_server_a-keystore.o: keystore.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-keystore.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-keystore.Tpo -c -o libbitcoin_server_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-keystore.Tpo $(DEPDIR)/libbitcoin_server_a-keystore.Po#	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_server_a-keystore.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpplibbitcoin_server_a-keystore.obj: keystore.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-keystore.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-keystore.Tpo -c -o libbitcoin_server_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-keystore.Tpo $(DEPDIR)/libbitcoin_server_a-keystore.Po#	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_server_a-keystore.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`libbitcoin_server_a-main.o: main.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-main.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-main.Tpo -c -o libbitcoin_server_a-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-main.Tpo $(DEPDIR)/libbitcoin_server_a-main.Po#	$(AM_V_CXX)source='main.cpp' object='libbitcoin_server_a-main.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpplibbitcoin_server_a-main.obj: main.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-main.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-main.Tpo -c -o libbitcoin_server_a-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-main.Tpo $(DEPDIR)/libbitcoin_server_a-main.Po#	$(AM_V_CXX)source='main.cpp' object='libbitcoin_server_a-main.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`libbitcoin_server_a-noui.o: noui.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpplibbitcoin_server_a-noui.obj: noui.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`libbitcoin_server_a-net.o: net.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-net.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o libbitcoin_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-net.Tpo $(DEPDIR)/libbitcoin_server_a-net.Po#	$(AM_V_CXX)source='net.cpp' object='libbitcoin_server_a-net.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpplibbitcoin_server_a-net.obj: net.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-net.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o libbitcoin_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-net.Tpo $(DEPDIR)/libbitcoin_server_a-net.Po#	$(AM_V_CXX)source='net.cpp' object='libbitcoin_server_a-net.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`libbitcoin_server_a-rpcblockchain.o: rpcblockchain.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcblockchain.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo -c -o libbitcoin_server_a-rpcblockchain.o `test -f 'rpcblockchain.cpp' || echo '$(srcdir)/'`rpcblockchain.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po#	$(AM_V_CXX)source='rpcblockchain.cpp' object='libbitcoin_server_a-rpcblockchain.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcblockchain.o `test -f 'rpcblockchain.cpp' || echo '$(srcdir)/'`rpcblockchain.cpplibbitcoin_server_a-rpcblockchain.obj: rpcblockchain.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcblockchain.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo -c -o libbitcoin_server_a-rpcblockchain.obj `if test -f 'rpcblockchain.cpp'; then $(CYGPATH_W) 'rpcblockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcblockchain.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po#	$(AM_V_CXX)source='rpcblockchain.cpp' object='libbitcoin_server_a-rpcblockchain.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcblockchain.obj `if test -f 'rpcblockchain.cpp'; then $(CYGPATH_W) 'rpcblockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcblockchain.cpp'; fi`libbitcoin_server_a-rpcmining.o: rpcmining.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcmining.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo -c -o libbitcoin_server_a-rpcmining.o `test -f 'rpcmining.cpp' || echo '$(srcdir)/'`rpcmining.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo $(DEPDIR)/libbitcoin_server_a-rpcmining.Po#	$(AM_V_CXX)source='rpcmining.cpp' object='libbitcoin_server_a-rpcmining.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcmining.o `test -f 'rpcmining.cpp' || echo '$(srcdir)/'`rpcmining.cpplibbitcoin_server_a-rpcmining.obj: rpcmining.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcmining.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo -c -o libbitcoin_server_a-rpcmining.obj `if test -f 'rpcmining.cpp'; then $(CYGPATH_W) 'rpcmining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcmining.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo $(DEPDIR)/libbitcoin_server_a-rpcmining.Po#	$(AM_V_CXX)source='rpcmining.cpp' object='libbitcoin_server_a-rpcmining.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcmining.obj `if test -f 'rpcmining.cpp'; then $(CYGPATH_W) 'rpcmining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcmining.cpp'; fi`libbitcoin_server_a-rpcnet.o: rpcnet.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcnet.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo -c -o libbitcoin_server_a-rpcnet.o `test -f 'rpcnet.cpp' || echo '$(srcdir)/'`rpcnet.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo $(DEPDIR)/libbitcoin_server_a-rpcnet.Po#	$(AM_V_CXX)source='rpcnet.cpp' object='libbitcoin_server_a-rpcnet.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcnet.o `test -f 'rpcnet.cpp' || echo '$(srcdir)/'`rpcnet.cpplibbitcoin_server_a-rpcnet.obj: rpcnet.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcnet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo -c -o libbitcoin_server_a-rpcnet.obj `if test -f 'rpcnet.cpp'; then $(CYGPATH_W) 'rpcnet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcnet.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo $(DEPDIR)/libbitcoin_server_a-rpcnet.Po#	$(AM_V_CXX)source='rpcnet.cpp' object='libbitcoin_server_a-rpcnet.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcnet.obj `if test -f 'rpcnet.cpp'; then $(CYGPATH_W) 'rpcnet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcnet.cpp'; fi`libbitcoin_server_a-rpcrawtransaction.o: rpcrawtransaction.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcrawtransaction.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo -c -o libbitcoin_server_a-rpcrawtransaction.o `test -f 'rpcrawtransaction.cpp' || echo '$(srcdir)/'`rpcrawtransaction.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po#	$(AM_V_CXX)source='rpcrawtransaction.cpp' object='libbitcoin_server_a-rpcrawtransaction.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcrawtransaction.o `test -f 'rpcrawtransaction.cpp' || echo '$(srcdir)/'`rpcrawtransaction.cpplibbitcoin_server_a-rpcrawtransaction.obj: rpcrawtransaction.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcrawtransaction.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo -c -o libbitcoin_server_a-rpcrawtransaction.obj `if test -f 'rpcrawtransaction.cpp'; then $(CYGPATH_W) 'rpcrawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcrawtransaction.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po#	$(AM_V_CXX)source='rpcrawtransaction.cpp' object='libbitcoin_server_a-rpcrawtransaction.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcrawtransaction.obj `if test -f 'rpcrawtransaction.cpp'; then $(CYGPATH_W) 'rpcrawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcrawtransaction.cpp'; fi`libbitcoin_server_a-rpcsmessage.o: rpcsmessage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcsmessage.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcsmessage.Tpo -c -o libbitcoin_server_a-rpcsmessage.o `test -f 'rpcsmessage.cpp' || echo '$(srcdir)/'`rpcsmessage.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcsmessage.Tpo $(DEPDIR)/libbitcoin_server_a-rpcsmessage.Po#	$(AM_V_CXX)source='rpcsmessage.cpp' object='libbitcoin_server_a-rpcsmessage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcsmessage.o `test -f 'rpcsmessage.cpp' || echo '$(srcdir)/'`rpcsmessage.cpplibbitcoin_server_a-rpcsmessage.obj: rpcsmessage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcsmessage.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcsmessage.Tpo -c -o libbitcoin_server_a-rpcsmessage.obj `if test -f 'rpcsmessage.cpp'; then $(CYGPATH_W) 'rpcsmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcsmessage.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcsmessage.Tpo $(DEPDIR)/libbitcoin_server_a-rpcsmessage.Po#	$(AM_V_CXX)source='rpcsmessage.cpp' object='libbitcoin_server_a-rpcsmessage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcsmessage.obj `if test -f 'rpcsmessage.cpp'; then $(CYGPATH_W) 'rpcsmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcsmessage.cpp'; fi`libbitcoin_server_a-script.o: script.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-script.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-script.Tpo -c -o libbitcoin_server_a-script.o `test -f 'script.cpp' || echo '$(srcdir)/'`script.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-script.Tpo $(DEPDIR)/libbitcoin_server_a-script.Po#	$(AM_V_CXX)source='script.cpp' object='libbitcoin_server_a-script.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-script.o `test -f 'script.cpp' || echo '$(srcdir)/'`script.cpplibbitcoin_server_a-script.obj: script.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-script.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-script.Tpo -c -o libbitcoin_server_a-script.obj `if test -f 'script.cpp'; then $(CYGPATH_W) 'script.cpp'; else $(CYGPATH_W) '$(srcdir)/script.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-script.Tpo $(DEPDIR)/libbitcoin_server_a-script.Po#	$(AM_V_CXX)source='script.cpp' object='libbitcoin_server_a-script.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-script.obj `if test -f 'script.cpp'; then $(CYGPATH_W) 'script.cpp'; else $(CYGPATH_W) '$(srcdir)/script.cpp'; fi`libbitcoin_sse2_a-scrypt-sse2.o: scrypt-sse2.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_sse2_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_sse2_a-scrypt-sse2.o -MD -MP -MF $(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Tpo -c -o libbitcoin_sse2_a-scrypt-sse2.o `test -f 'scrypt-sse2.cpp' || echo '$(srcdir)/'`scrypt-sse2.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Tpo $(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Po#	$(AM_V_CXX)source='scrypt-sse2.cpp' object='libbitcoin_sse2_a-scrypt-sse2.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_sse2_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_sse2_a-scrypt-sse2.o `test -f 'scrypt-sse2.cpp' || echo '$(srcdir)/'`scrypt-sse2.cpplibbitcoin_sse2_a-scrypt-sse2.obj: scrypt-sse2.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_sse2_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_sse2_a-scrypt-sse2.obj -MD -MP -MF $(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Tpo -c -o libbitcoin_sse2_a-scrypt-sse2.obj `if test -f 'scrypt-sse2.cpp'; then $(CYGPATH_W) 'scrypt-sse2.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt-sse2.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Tpo $(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Po#	$(AM_V_CXX)source='scrypt-sse2.cpp' object='libbitcoin_sse2_a-scrypt-sse2.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_sse2_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_sse2_a-scrypt-sse2.obj `if test -f 'scrypt-sse2.cpp'; then $(CYGPATH_W) 'scrypt-sse2.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt-sse2.cpp'; fi`libbitcoin_util_a-sync.o: sync.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpplibbitcoin_util_a-sync.obj: sync.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`libbitcoin_util_a-util.o: util.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpplibbitcoin_util_a-util.obj: util.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`compat/libbitcoin_util_a-glibc_compat.o: compat/glibc_compat.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo -c -o compat/libbitcoin_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp#	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoin_util_a-glibc_compat.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cppcompat/libbitcoin_util_a-glibc_compat.obj: compat/glibc_compat.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo -c -o compat/libbitcoin_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`#	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoin_util_a-glibc_compat.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`compat/libbitcoin_util_a-glibcxx_compat.o: compat/glibcxx_compat.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibcxx_compat.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Tpo -c -o compat/libbitcoin_util_a-glibcxx_compat.o `test -f 'compat/glibcxx_compat.cpp' || echo '$(srcdir)/'`compat/glibcxx_compat.cpp#	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Po#	$(AM_V_CXX)source='compat/glibcxx_compat.cpp' object='compat/libbitcoin_util_a-glibcxx_compat.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibcxx_compat.o `test -f 'compat/glibcxx_compat.cpp' || echo '$(srcdir)/'`compat/glibcxx_compat.cppcompat/libbitcoin_util_a-glibcxx_compat.obj: compat/glibcxx_compat.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibcxx_compat.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Tpo -c -o compat/libbitcoin_util_a-glibcxx_compat.obj `if test -f 'compat/glibcxx_compat.cpp'; then $(CYGPATH_W) 'compat/glibcxx_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_compat.cpp'; fi`#	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Po#	$(AM_V_CXX)source='compat/glibcxx_compat.cpp' object='compat/libbitcoin_util_a-glibcxx_compat.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibcxx_compat.obj `if test -f 'compat/glibcxx_compat.cpp'; then $(CYGPATH_W) 'compat/glibcxx_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_compat.cpp'; fi`libbitcoin_wallet_a-crypter.o: crypter.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-crypter.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o libbitcoin_wallet_a-crypter.o `test -f 'crypter.cpp' || echo '$(srcdir)/'`crypter.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo $(DEPDIR)/libbitcoin_wallet_a-crypter.Po#	$(AM_V_CXX)source='crypter.cpp' object='libbitcoin_wallet_a-crypter.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-crypter.o `test -f 'crypter.cpp' || echo '$(srcdir)/'`crypter.cpplibbitcoin_wallet_a-crypter.obj: crypter.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-crypter.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o libbitcoin_wallet_a-crypter.obj `if test -f 'crypter.cpp'; then $(CYGPATH_W) 'crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/crypter.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo $(DEPDIR)/libbitcoin_wallet_a-crypter.Po#	$(AM_V_CXX)source='crypter.cpp' object='libbitcoin_wallet_a-crypter.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-crypter.obj `if test -f 'crypter.cpp'; then $(CYGPATH_W) 'crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/crypter.cpp'; fi`libbitcoin_wallet_a-scrypt.o: scrypt.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-scrypt.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo -c -o libbitcoin_wallet_a-scrypt.o `test -f 'scrypt.cpp' || echo '$(srcdir)/'`scrypt.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo $(DEPDIR)/libbitcoin_wallet_a-scrypt.Po#	$(AM_V_CXX)source='scrypt.cpp' object='libbitcoin_wallet_a-scrypt.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-scrypt.o `test -f 'scrypt.cpp' || echo '$(srcdir)/'`scrypt.cpplibbitcoin_wallet_a-scrypt.obj: scrypt.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-scrypt.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo -c -o libbitcoin_wallet_a-scrypt.obj `if test -f 'scrypt.cpp'; then $(CYGPATH_W) 'scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo $(DEPDIR)/libbitcoin_wallet_a-scrypt.Po#	$(AM_V_CXX)source='scrypt.cpp' object='libbitcoin_wallet_a-scrypt.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-scrypt.obj `if test -f 'scrypt.cpp'; then $(CYGPATH_W) 'scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt.cpp'; fi`libbitcoin_wallet_a-scrypt-sse2.o: scrypt-sse2.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-scrypt-sse2.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Tpo -c -o libbitcoin_wallet_a-scrypt-sse2.o `test -f 'scrypt-sse2.cpp' || echo '$(srcdir)/'`scrypt-sse2.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Tpo $(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Po#	$(AM_V_CXX)source='scrypt-sse2.cpp' object='libbitcoin_wallet_a-scrypt-sse2.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-scrypt-sse2.o `test -f 'scrypt-sse2.cpp' || echo '$(srcdir)/'`scrypt-sse2.cpplibbitcoin_wallet_a-scrypt-sse2.obj: scrypt-sse2.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-scrypt-sse2.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Tpo -c -o libbitcoin_wallet_a-scrypt-sse2.obj `if test -f 'scrypt-sse2.cpp'; then $(CYGPATH_W) 'scrypt-sse2.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt-sse2.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Tpo $(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Po#	$(AM_V_CXX)source='scrypt-sse2.cpp' object='libbitcoin_wallet_a-scrypt-sse2.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-scrypt-sse2.obj `if test -f 'scrypt-sse2.cpp'; then $(CYGPATH_W) 'scrypt-sse2.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt-sse2.cpp'; fi`libbitcoin_wallet_a-pbkdf2.o: pbkdf2.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-pbkdf2.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo -c -o libbitcoin_wallet_a-pbkdf2.o `test -f 'pbkdf2.cpp' || echo '$(srcdir)/'`pbkdf2.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po#	$(AM_V_CXX)source='pbkdf2.cpp' object='libbitcoin_wallet_a-pbkdf2.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-pbkdf2.o `test -f 'pbkdf2.cpp' || echo '$(srcdir)/'`pbkdf2.cpplibbitcoin_wallet_a-pbkdf2.obj: pbkdf2.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-pbkdf2.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo -c -o libbitcoin_wallet_a-pbkdf2.obj `if test -f 'pbkdf2.cpp'; then $(CYGPATH_W) 'pbkdf2.cpp'; else $(CYGPATH_W) '$(srcdir)/pbkdf2.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po#	$(AM_V_CXX)source='pbkdf2.cpp' object='libbitcoin_wallet_a-pbkdf2.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-pbkdf2.obj `if test -f 'pbkdf2.cpp'; then $(CYGPATH_W) 'pbkdf2.cpp'; else $(CYGPATH_W) '$(srcdir)/pbkdf2.cpp'; fi`libbitcoin_wallet_a-rpcdump.o: rpcdump.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcdump.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o libbitcoin_wallet_a-rpcdump.o `test -f 'rpcdump.cpp' || echo '$(srcdir)/'`rpcdump.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po#	$(AM_V_CXX)source='rpcdump.cpp' object='libbitcoin_wallet_a-rpcdump.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcdump.o `test -f 'rpcdump.cpp' || echo '$(srcdir)/'`rpcdump.cpplibbitcoin_wallet_a-rpcdump.obj: rpcdump.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcdump.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o libbitcoin_wallet_a-rpcdump.obj `if test -f 'rpcdump.cpp'; then $(CYGPATH_W) 'rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcdump.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po#	$(AM_V_CXX)source='rpcdump.cpp' object='libbitcoin_wallet_a-rpcdump.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcdump.obj `if test -f 'rpcdump.cpp'; then $(CYGPATH_W) 'rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcdump.cpp'; fi`libbitcoin_wallet_a-rpcwallet.o: rpcwallet.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcwallet.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o libbitcoin_wallet_a-rpcwallet.o `test -f 'rpcwallet.cpp' || echo '$(srcdir)/'`rpcwallet.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po#	$(AM_V_CXX)source='rpcwallet.cpp' object='libbitcoin_wallet_a-rpcwallet.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcwallet.o `test -f 'rpcwallet.cpp' || echo '$(srcdir)/'`rpcwallet.cpplibbitcoin_wallet_a-rpcwallet.obj: rpcwallet.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcwallet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o libbitcoin_wallet_a-rpcwallet.obj `if test -f 'rpcwallet.cpp'; then $(CYGPATH_W) 'rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcwallet.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po#	$(AM_V_CXX)source='rpcwallet.cpp' object='libbitcoin_wallet_a-rpcwallet.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcwallet.obj `if test -f 'rpcwallet.cpp'; then $(CYGPATH_W) 'rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcwallet.cpp'; fi`libbitcoin_wallet_a-rpcsmessage.o: rpcsmessage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcsmessage.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Tpo -c -o libbitcoin_wallet_a-rpcsmessage.o `test -f 'rpcsmessage.cpp' || echo '$(srcdir)/'`rpcsmessage.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Po#	$(AM_V_CXX)source='rpcsmessage.cpp' object='libbitcoin_wallet_a-rpcsmessage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcsmessage.o `test -f 'rpcsmessage.cpp' || echo '$(srcdir)/'`rpcsmessage.cpplibbitcoin_wallet_a-rpcsmessage.obj: rpcsmessage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcsmessage.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Tpo -c -o libbitcoin_wallet_a-rpcsmessage.obj `if test -f 'rpcsmessage.cpp'; then $(CYGPATH_W) 'rpcsmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcsmessage.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Po#	$(AM_V_CXX)source='rpcsmessage.cpp' object='libbitcoin_wallet_a-rpcsmessage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcsmessage.obj `if test -f 'rpcsmessage.cpp'; then $(CYGPATH_W) 'rpcsmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcsmessage.cpp'; fi`libbitcoin_wallet_a-wallet.o: wallet.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-wallet.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o libbitcoin_wallet_a-wallet.o `test -f 'wallet.cpp' || echo '$(srcdir)/'`wallet.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-wallet.Po#	$(AM_V_CXX)source='wallet.cpp' object='libbitcoin_wallet_a-wallet.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-wallet.o `test -f 'wallet.cpp' || echo '$(srcdir)/'`wallet.cpplibbitcoin_wallet_a-wallet.obj: wallet.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-wallet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o libbitcoin_wallet_a-wallet.obj `if test -f 'wallet.cpp'; then $(CYGPATH_W) 'wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-wallet.Po#	$(AM_V_CXX)source='wallet.cpp' object='libbitcoin_wallet_a-wallet.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-wallet.obj `if test -f 'wallet.cpp'; then $(CYGPATH_W) 'wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet.cpp'; fi`libbitcoin_wallet_a-walletdb.o: walletdb.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-walletdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o libbitcoin_wallet_a-walletdb.o `test -f 'walletdb.cpp' || echo '$(srcdir)/'`walletdb.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo $(DEPDIR)/libbitcoin_wallet_a-walletdb.Po#	$(AM_V_CXX)source='walletdb.cpp' object='libbitcoin_wallet_a-walletdb.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-walletdb.o `test -f 'walletdb.cpp' || echo '$(srcdir)/'`walletdb.cpplibbitcoin_wallet_a-walletdb.obj: walletdb.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-walletdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o libbitcoin_wallet_a-walletdb.obj `if test -f 'walletdb.cpp'; then $(CYGPATH_W) 'walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/walletdb.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo $(DEPDIR)/libbitcoin_wallet_a-walletdb.Po#	$(AM_V_CXX)source='walletdb.cpp' object='libbitcoin_wallet_a-walletdb.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-walletdb.obj `if test -f 'walletdb.cpp'; then $(CYGPATH_W) 'walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/walletdb.cpp'; fi`libbitcoin_wallet_a-stealth.o: stealth.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-stealth.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-stealth.Tpo -c -o libbitcoin_wallet_a-stealth.o `test -f 'stealth.cpp' || echo '$(srcdir)/'`stealth.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-stealth.Tpo $(DEPDIR)/libbitcoin_wallet_a-stealth.Po#	$(AM_V_CXX)source='stealth.cpp' object='libbitcoin_wallet_a-stealth.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-stealth.o `test -f 'stealth.cpp' || echo '$(srcdir)/'`stealth.cpplibbitcoin_wallet_a-stealth.obj: stealth.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-stealth.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-stealth.Tpo -c -o libbitcoin_wallet_a-stealth.obj `if test -f 'stealth.cpp'; then $(CYGPATH_W) 'stealth.cpp'; else $(CYGPATH_W) '$(srcdir)/stealth.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-stealth.Tpo $(DEPDIR)/libbitcoin_wallet_a-stealth.Po#	$(AM_V_CXX)source='stealth.cpp' object='libbitcoin_wallet_a-stealth.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-stealth.obj `if test -f 'stealth.cpp'; then $(CYGPATH_W) 'stealth.cpp'; else $(CYGPATH_W) '$(srcdir)/stealth.cpp'; fi`qt/libbitcoinqt_a-bitcoin.o: qt/bitcoin.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo -c -o qt/libbitcoinqt_a-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Po#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/libbitcoinqt_a-bitcoin.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cppqt/libbitcoinqt_a-bitcoin.obj: qt/bitcoin.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo -c -o qt/libbitcoinqt_a-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Po#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/libbitcoinqt_a-bitcoin.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`qt/libbitcoinqt_a-bitcoinaddressvalidator.o: qt/bitcoinaddressvalidator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o qt/libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/libbitcoinqt_a-bitcoinaddressvalidator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cppqt/libbitcoinqt_a-bitcoinaddressvalidator.obj: qt/bitcoinaddressvalidator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o qt/libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/libbitcoinqt_a-bitcoinaddressvalidator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`qt/libbitcoinqt_a-bitcoinamountfield.o: qt/bitcoinamountfield.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo -c -o qt/libbitcoinqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/libbitcoinqt_a-bitcoinamountfield.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cppqt/libbitcoinqt_a-bitcoinamountfield.obj: qt/bitcoinamountfield.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo -c -o qt/libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/libbitcoinqt_a-bitcoinamountfield.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`qt/libbitcoinqt_a-bitcoingui.o: qt/bitcoingui.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo -c -o qt/libbitcoinqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/libbitcoinqt_a-bitcoingui.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cppqt/libbitcoinqt_a-bitcoingui.obj: qt/bitcoingui.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo -c -o qt/libbitcoinqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/libbitcoinqt_a-bitcoingui.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`qt/libbitcoinqt_a-bitcoinunits.o: qt/bitcoinunits.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo -c -o qt/libbitcoinqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/libbitcoinqt_a-bitcoinunits.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cppqt/libbitcoinqt_a-bitcoinunits.obj: qt/bitcoinunits.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo -c -o qt/libbitcoinqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/libbitcoinqt_a-bitcoinunits.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`qt/libbitcoinqt_a-clientmodel.o: qt/clientmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-clientmodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo -c -o qt/libbitcoinqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Po#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/libbitcoinqt_a-clientmodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cppqt/libbitcoinqt_a-clientmodel.obj: qt/clientmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo -c -o qt/libbitcoinqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Po#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/libbitcoinqt_a-clientmodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`qt/libbitcoinqt_a-csvmodelwriter.o: qt/csvmodelwriter.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo -c -o qt/libbitcoinqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/libbitcoinqt_a-csvmodelwriter.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cppqt/libbitcoinqt_a-csvmodelwriter.obj: qt/csvmodelwriter.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo -c -o qt/libbitcoinqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/libbitcoinqt_a-csvmodelwriter.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`qt/libbitcoinqt_a-guiutil.o: qt/guiutil.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-guiutil.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Tpo -c -o qt/libbitcoinqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Tpo qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Po#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/libbitcoinqt_a-guiutil.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cppqt/libbitcoinqt_a-guiutil.obj: qt/guiutil.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-guiutil.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Tpo -c -o qt/libbitcoinqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Tpo qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Po#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/libbitcoinqt_a-guiutil.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`qt/libbitcoinqt_a-monitoreddatamapper.o: qt/monitoreddatamapper.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-monitoreddatamapper.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo -c -o qt/libbitcoinqt_a-monitoreddatamapper.o `test -f 'qt/monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/monitoreddatamapper.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po#	$(AM_V_CXX)source='qt/monitoreddatamapper.cpp' object='qt/libbitcoinqt_a-monitoreddatamapper.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-monitoreddatamapper.o `test -f 'qt/monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/monitoreddatamapper.cppqt/libbitcoinqt_a-monitoreddatamapper.obj: qt/monitoreddatamapper.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-monitoreddatamapper.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo -c -o qt/libbitcoinqt_a-monitoreddatamapper.obj `if test -f 'qt/monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/monitoreddatamapper.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po#	$(AM_V_CXX)source='qt/monitoreddatamapper.cpp' object='qt/libbitcoinqt_a-monitoreddatamapper.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-monitoreddatamapper.obj `if test -f 'qt/monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/monitoreddatamapper.cpp'; fi`qt/libbitcoinqt_a-notificator.o: qt/notificator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-notificator.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-notificator.Tpo -c -o qt/libbitcoinqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-notificator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-notificator.Po#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/libbitcoinqt_a-notificator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cppqt/libbitcoinqt_a-notificator.obj: qt/notificator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-notificator.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-notificator.Tpo -c -o qt/libbitcoinqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-notificator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-notificator.Po#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/libbitcoinqt_a-notificator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`qt/libbitcoinqt_a-optionsdialog.o: qt/optionsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo -c -o qt/libbitcoinqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/libbitcoinqt_a-optionsdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cppqt/libbitcoinqt_a-optionsdialog.obj: qt/optionsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo -c -o qt/libbitcoinqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/libbitcoinqt_a-optionsdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`qt/libbitcoinqt_a-optionsmodel.o: qt/optionsmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo -c -o qt/libbitcoinqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/libbitcoinqt_a-optionsmodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cppqt/libbitcoinqt_a-optionsmodel.obj: qt/optionsmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo -c -o qt/libbitcoinqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/libbitcoinqt_a-optionsmodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`qt/libbitcoinqt_a-messagemodel.o: qt/messagemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-messagemodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Tpo -c -o qt/libbitcoinqt_a-messagemodel.o `test -f 'qt/messagemodel.cpp' || echo '$(srcdir)/'`qt/messagemodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Po#	$(AM_V_CXX)source='qt/messagemodel.cpp' object='qt/libbitcoinqt_a-messagemodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-messagemodel.o `test -f 'qt/messagemodel.cpp' || echo '$(srcdir)/'`qt/messagemodel.cppqt/libbitcoinqt_a-messagemodel.obj: qt/messagemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-messagemodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Tpo -c -o qt/libbitcoinqt_a-messagemodel.obj `if test -f 'qt/messagemodel.cpp'; then $(CYGPATH_W) 'qt/messagemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/messagemodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Po#	$(AM_V_CXX)source='qt/messagemodel.cpp' object='qt/libbitcoinqt_a-messagemodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-messagemodel.obj `if test -f 'qt/messagemodel.cpp'; then $(CYGPATH_W) 'qt/messagemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/messagemodel.cpp'; fi`qt/libbitcoinqt_a-rpcconsole.o: qt/rpcconsole.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo -c -o qt/libbitcoinqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/libbitcoinqt_a-rpcconsole.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cppqt/libbitcoinqt_a-rpcconsole.obj: qt/rpcconsole.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo -c -o qt/libbitcoinqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/libbitcoinqt_a-rpcconsole.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`qt/libbitcoinqt_a-aboutdialog.o: qt/aboutdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-aboutdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo -c -o qt/libbitcoinqt_a-aboutdialog.o `test -f 'qt/aboutdialog.cpp' || echo '$(srcdir)/'`qt/aboutdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po#	$(AM_V_CXX)source='qt/aboutdialog.cpp' object='qt/libbitcoinqt_a-aboutdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-aboutdialog.o `test -f 'qt/aboutdialog.cpp' || echo '$(srcdir)/'`qt/aboutdialog.cppqt/libbitcoinqt_a-aboutdialog.obj: qt/aboutdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-aboutdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo -c -o qt/libbitcoinqt_a-aboutdialog.obj `if test -f 'qt/aboutdialog.cpp'; then $(CYGPATH_W) 'qt/aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/aboutdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po#	$(AM_V_CXX)source='qt/aboutdialog.cpp' object='qt/libbitcoinqt_a-aboutdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-aboutdialog.obj `if test -f 'qt/aboutdialog.cpp'; then $(CYGPATH_W) 'qt/aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/aboutdialog.cpp'; fi`qt/libbitcoinqt_a-addressbookpage.o: qt/addressbookpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo -c -o qt/libbitcoinqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/libbitcoinqt_a-addressbookpage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cppqt/libbitcoinqt_a-addressbookpage.obj: qt/addressbookpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo -c -o qt/libbitcoinqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/libbitcoinqt_a-addressbookpage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`qt/libbitcoinqt_a-addresstablemodel.o: qt/addresstablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo -c -o qt/libbitcoinqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/libbitcoinqt_a-addresstablemodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cppqt/libbitcoinqt_a-addresstablemodel.obj: qt/addresstablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo -c -o qt/libbitcoinqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/libbitcoinqt_a-addresstablemodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`qt/libbitcoinqt_a-askpassphrasedialog.o: qt/askpassphrasedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo -c -o qt/libbitcoinqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/libbitcoinqt_a-askpassphrasedialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cppqt/libbitcoinqt_a-askpassphrasedialog.obj: qt/askpassphrasedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo -c -o qt/libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/libbitcoinqt_a-askpassphrasedialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`qt/libbitcoinqt_a-coincontroldialog.o: qt/coincontroldialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo -c -o qt/libbitcoinqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/libbitcoinqt_a-coincontroldialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cppqt/libbitcoinqt_a-coincontroldialog.obj: qt/coincontroldialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo -c -o qt/libbitcoinqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/libbitcoinqt_a-coincontroldialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`qt/libbitcoinqt_a-coincontroltreewidget.o: qt/coincontroltreewidget.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo -c -o qt/libbitcoinqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/libbitcoinqt_a-coincontroltreewidget.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cppqt/libbitcoinqt_a-coincontroltreewidget.obj: qt/coincontroltreewidget.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo -c -o qt/libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/libbitcoinqt_a-coincontroltreewidget.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`qt/libbitcoinqt_a-editaddressdialog.o: qt/editaddressdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo -c -o qt/libbitcoinqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/libbitcoinqt_a-editaddressdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cppqt/libbitcoinqt_a-editaddressdialog.obj: qt/editaddressdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo -c -o qt/libbitcoinqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/libbitcoinqt_a-editaddressdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`qt/libbitcoinqt_a-overviewpage.o: qt/overviewpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-overviewpage.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo -c -o qt/libbitcoinqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Po#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/libbitcoinqt_a-overviewpage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cppqt/libbitcoinqt_a-overviewpage.obj: qt/overviewpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo -c -o qt/libbitcoinqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Po#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/libbitcoinqt_a-overviewpage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`qt/libbitcoinqt_a-sendcoinsdialog.o: qt/sendcoinsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo -c -o qt/libbitcoinqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/libbitcoinqt_a-sendcoinsdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cppqt/libbitcoinqt_a-sendcoinsdialog.obj: qt/sendcoinsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo -c -o qt/libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/libbitcoinqt_a-sendcoinsdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`qt/libbitcoinqt_a-sendcoinsentry.o: qt/sendcoinsentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo -c -o qt/libbitcoinqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/libbitcoinqt_a-sendcoinsentry.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cppqt/libbitcoinqt_a-sendcoinsentry.obj: qt/sendcoinsentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo -c -o qt/libbitcoinqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/libbitcoinqt_a-sendcoinsentry.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`qt/libbitcoinqt_a-sendmessagesdialog.o: qt/sendmessagesdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendmessagesdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Tpo -c -o qt/libbitcoinqt_a-sendmessagesdialog.o `test -f 'qt/sendmessagesdialog.cpp' || echo '$(srcdir)/'`qt/sendmessagesdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Po#	$(AM_V_CXX)source='qt/sendmessagesdialog.cpp' object='qt/libbitcoinqt_a-sendmessagesdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendmessagesdialog.o `test -f 'qt/sendmessagesdialog.cpp' || echo '$(srcdir)/'`qt/sendmessagesdialog.cppqt/libbitcoinqt_a-sendmessagesdialog.obj: qt/sendmessagesdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendmessagesdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Tpo -c -o qt/libbitcoinqt_a-sendmessagesdialog.obj `if test -f 'qt/sendmessagesdialog.cpp'; then $(CYGPATH_W) 'qt/sendmessagesdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendmessagesdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Po#	$(AM_V_CXX)source='qt/sendmessagesdialog.cpp' object='qt/libbitcoinqt_a-sendmessagesdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendmessagesdialog.obj `if test -f 'qt/sendmessagesdialog.cpp'; then $(CYGPATH_W) 'qt/sendmessagesdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendmessagesdialog.cpp'; fi`qt/libbitcoinqt_a-sendmessagesentry.o: qt/sendmessagesentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendmessagesentry.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Tpo -c -o qt/libbitcoinqt_a-sendmessagesentry.o `test -f 'qt/sendmessagesentry.cpp' || echo '$(srcdir)/'`qt/sendmessagesentry.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Po#	$(AM_V_CXX)source='qt/sendmessagesentry.cpp' object='qt/libbitcoinqt_a-sendmessagesentry.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendmessagesentry.o `test -f 'qt/sendmessagesentry.cpp' || echo '$(srcdir)/'`qt/sendmessagesentry.cppqt/libbitcoinqt_a-sendmessagesentry.obj: qt/sendmessagesentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-sendmessagesentry.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Tpo -c -o qt/libbitcoinqt_a-sendmessagesentry.obj `if test -f 'qt/sendmessagesentry.cpp'; then $(CYGPATH_W) 'qt/sendmessagesentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendmessagesentry.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Po#	$(AM_V_CXX)source='qt/sendmessagesentry.cpp' object='qt/libbitcoinqt_a-sendmessagesentry.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-sendmessagesentry.obj `if test -f 'qt/sendmessagesentry.cpp'; then $(CYGPATH_W) 'qt/sendmessagesentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendmessagesentry.cpp'; fi`qt/libbitcoinqt_a-messagepage.o: qt/messagepage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-messagepage.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Tpo -c -o qt/libbitcoinqt_a-messagepage.o `test -f 'qt/messagepage.cpp' || echo '$(srcdir)/'`qt/messagepage.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Po#	$(AM_V_CXX)source='qt/messagepage.cpp' object='qt/libbitcoinqt_a-messagepage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-messagepage.o `test -f 'qt/messagepage.cpp' || echo '$(srcdir)/'`qt/messagepage.cppqt/libbitcoinqt_a-messagepage.obj: qt/messagepage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-messagepage.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Tpo -c -o qt/libbitcoinqt_a-messagepage.obj `if test -f 'qt/messagepage.cpp'; then $(CYGPATH_W) 'qt/messagepage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/messagepage.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Po#	$(AM_V_CXX)source='qt/messagepage.cpp' object='qt/libbitcoinqt_a-messagepage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-messagepage.obj `if test -f 'qt/messagepage.cpp'; then $(CYGPATH_W) 'qt/messagepage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/messagepage.cpp'; fi`qt/libbitcoinqt_a-qtipcserver.o: qt/qtipcserver.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qtipcserver.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Tpo -c -o qt/libbitcoinqt_a-qtipcserver.o `test -f 'qt/qtipcserver.cpp' || echo '$(srcdir)/'`qt/qtipcserver.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Po#	$(AM_V_CXX)source='qt/qtipcserver.cpp' object='qt/libbitcoinqt_a-qtipcserver.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qtipcserver.o `test -f 'qt/qtipcserver.cpp' || echo '$(srcdir)/'`qt/qtipcserver.cppqt/libbitcoinqt_a-qtipcserver.obj: qt/qtipcserver.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qtipcserver.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Tpo -c -o qt/libbitcoinqt_a-qtipcserver.obj `if test -f 'qt/qtipcserver.cpp'; then $(CYGPATH_W) 'qt/qtipcserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qtipcserver.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Po#	$(AM_V_CXX)source='qt/qtipcserver.cpp' object='qt/libbitcoinqt_a-qtipcserver.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qtipcserver.obj `if test -f 'qt/qtipcserver.cpp'; then $(CYGPATH_W) 'qt/qtipcserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qtipcserver.cpp'; fi`qt/libbitcoinqt_a-qrcodedialog.o: qt/qrcodedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qrcodedialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Tpo -c -o qt/libbitcoinqt_a-qrcodedialog.o `test -f 'qt/qrcodedialog.cpp' || echo '$(srcdir)/'`qt/qrcodedialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Po#	$(AM_V_CXX)source='qt/qrcodedialog.cpp' object='qt/libbitcoinqt_a-qrcodedialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qrcodedialog.o `test -f 'qt/qrcodedialog.cpp' || echo '$(srcdir)/'`qt/qrcodedialog.cppqt/libbitcoinqt_a-qrcodedialog.obj: qt/qrcodedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qrcodedialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Tpo -c -o qt/libbitcoinqt_a-qrcodedialog.obj `if test -f 'qt/qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrcodedialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Po#	$(AM_V_CXX)source='qt/qrcodedialog.cpp' object='qt/libbitcoinqt_a-qrcodedialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qrcodedialog.obj `if test -f 'qt/qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrcodedialog.cpp'; fi`qt/libbitcoinqt_a-qvalidatedlineedit.o: qt/qvalidatedlineedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o qt/libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/libbitcoinqt_a-qvalidatedlineedit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cppqt/libbitcoinqt_a-qvalidatedlineedit.obj: qt/qvalidatedlineedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o qt/libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/libbitcoinqt_a-qvalidatedlineedit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`qt/libbitcoinqt_a-qvalidatedtextedit.o: qt/qvalidatedtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qvalidatedtextedit.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Tpo -c -o qt/libbitcoinqt_a-qvalidatedtextedit.o `test -f 'qt/qvalidatedtextedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedtextedit.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Po#	$(AM_V_CXX)source='qt/qvalidatedtextedit.cpp' object='qt/libbitcoinqt_a-qvalidatedtextedit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qvalidatedtextedit.o `test -f 'qt/qvalidatedtextedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedtextedit.cppqt/libbitcoinqt_a-qvalidatedtextedit.obj: qt/qvalidatedtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qvalidatedtextedit.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Tpo -c -o qt/libbitcoinqt_a-qvalidatedtextedit.obj `if test -f 'qt/qvalidatedtextedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedtextedit.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Po#	$(AM_V_CXX)source='qt/qvalidatedtextedit.cpp' object='qt/libbitcoinqt_a-qvalidatedtextedit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qvalidatedtextedit.obj `if test -f 'qt/qvalidatedtextedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedtextedit.cpp'; fi`qt/libbitcoinqt_a-qvaluecombobox.o: qt/qvaluecombobox.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo -c -o qt/libbitcoinqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/libbitcoinqt_a-qvaluecombobox.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cppqt/libbitcoinqt_a-qvaluecombobox.obj: qt/qvaluecombobox.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo -c -o qt/libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/libbitcoinqt_a-qvaluecombobox.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.o: qt/plugins/mrichtexteditor/mrichtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.o -MD -MP -MF qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Tpo -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.o `test -f 'qt/plugins/mrichtexteditor/mrichtextedit.cpp' || echo '$(srcdir)/'`qt/plugins/mrichtexteditor/mrichtextedit.cpp#	$(AM_V_at)$(am__mv) qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Tpo qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Po#	$(AM_V_CXX)source='qt/plugins/mrichtexteditor/mrichtextedit.cpp' object='qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.o `test -f 'qt/plugins/mrichtexteditor/mrichtextedit.cpp' || echo '$(srcdir)/'`qt/plugins/mrichtexteditor/mrichtextedit.cppqt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.obj: qt/plugins/mrichtexteditor/mrichtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.obj -MD -MP -MF qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Tpo -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.obj `if test -f 'qt/plugins/mrichtexteditor/mrichtextedit.cpp'; then $(CYGPATH_W) 'qt/plugins/mrichtexteditor/mrichtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/plugins/mrichtexteditor/mrichtextedit.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Tpo qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Po#	$(AM_V_CXX)source='qt/plugins/mrichtexteditor/mrichtextedit.cpp' object='qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-mrichtextedit.obj `if test -f 'qt/plugins/mrichtexteditor/mrichtextedit.cpp'; then $(CYGPATH_W) 'qt/plugins/mrichtexteditor/mrichtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/plugins/mrichtexteditor/mrichtextedit.cpp'; fi`qt/libbitcoinqt_a-signverifymessagedialog.o: qt/signverifymessagedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo -c -o qt/libbitcoinqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/libbitcoinqt_a-signverifymessagedialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cppqt/libbitcoinqt_a-signverifymessagedialog.obj: qt/signverifymessagedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo -c -o qt/libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/libbitcoinqt_a-signverifymessagedialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`qt/libbitcoinqt_a-transactiondesc.o: qt/transactiondesc.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo -c -o qt/libbitcoinqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/libbitcoinqt_a-transactiondesc.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cppqt/libbitcoinqt_a-transactiondesc.obj: qt/transactiondesc.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo -c -o qt/libbitcoinqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/libbitcoinqt_a-transactiondesc.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`qt/libbitcoinqt_a-transactiondescdialog.o: qt/transactiondescdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo -c -o qt/libbitcoinqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/libbitcoinqt_a-transactiondescdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cppqt/libbitcoinqt_a-transactiondescdialog.obj: qt/transactiondescdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo -c -o qt/libbitcoinqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/libbitcoinqt_a-transactiondescdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`qt/libbitcoinqt_a-transactionfilterproxy.o: qt/transactionfilterproxy.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo -c -o qt/libbitcoinqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/libbitcoinqt_a-transactionfilterproxy.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cppqt/libbitcoinqt_a-transactionfilterproxy.obj: qt/transactionfilterproxy.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo -c -o qt/libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/libbitcoinqt_a-transactionfilterproxy.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`qt/libbitcoinqt_a-transactionrecord.o: qt/transactionrecord.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactionrecord.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo -c -o qt/libbitcoinqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/libbitcoinqt_a-transactionrecord.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cppqt/libbitcoinqt_a-transactionrecord.obj: qt/transactionrecord.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactionrecord.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo -c -o qt/libbitcoinqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/libbitcoinqt_a-transactionrecord.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`qt/libbitcoinqt_a-transactiontablemodel.o: qt/transactiontablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo -c -o qt/libbitcoinqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/libbitcoinqt_a-transactiontablemodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cppqt/libbitcoinqt_a-transactiontablemodel.obj: qt/transactiontablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo -c -o qt/libbitcoinqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/libbitcoinqt_a-transactiontablemodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`qt/libbitcoinqt_a-transactionview.o: qt/transactionview.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactionview.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Tpo -c -o qt/libbitcoinqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Po#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/libbitcoinqt_a-transactionview.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cppqt/libbitcoinqt_a-transactionview.obj: qt/transactionview.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-transactionview.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Tpo -c -o qt/libbitcoinqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Tpo qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Po#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/libbitcoinqt_a-transactionview.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`qt/libbitcoinqt_a-walletmodel.o: qt/walletmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-walletmodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo -c -o qt/libbitcoinqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Po#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/libbitcoinqt_a-walletmodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cppqt/libbitcoinqt_a-walletmodel.obj: qt/walletmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo -c -o qt/libbitcoinqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Po#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/libbitcoinqt_a-walletmodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`qt/libbitcoinqt_a-moc_aboutdialog.o: qt/moc_aboutdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_aboutdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo -c -o qt/libbitcoinqt_a-moc_aboutdialog.o `test -f 'qt/moc_aboutdialog.cpp' || echo '$(srcdir)/'`qt/moc_aboutdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po#	$(AM_V_CXX)source='qt/moc_aboutdialog.cpp' object='qt/libbitcoinqt_a-moc_aboutdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_aboutdialog.o `test -f 'qt/moc_aboutdialog.cpp' || echo '$(srcdir)/'`qt/moc_aboutdialog.cppqt/libbitcoinqt_a-moc_aboutdialog.obj: qt/moc_aboutdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_aboutdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo -c -o qt/libbitcoinqt_a-moc_aboutdialog.obj `if test -f 'qt/moc_aboutdialog.cpp'; then $(CYGPATH_W) 'qt/moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_aboutdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po#	$(AM_V_CXX)source='qt/moc_aboutdialog.cpp' object='qt/libbitcoinqt_a-moc_aboutdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_aboutdialog.obj `if test -f 'qt/moc_aboutdialog.cpp'; then $(CYGPATH_W) 'qt/moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_aboutdialog.cpp'; fi`qt/libbitcoinqt_a-moc_addressbookpage.o: qt/moc_addressbookpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo -c -o qt/libbitcoinqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/libbitcoinqt_a-moc_addressbookpage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cppqt/libbitcoinqt_a-moc_addressbookpage.obj: qt/moc_addressbookpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo -c -o qt/libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/libbitcoinqt_a-moc_addressbookpage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`qt/libbitcoinqt_a-moc_addresstablemodel.o: qt/moc_addresstablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o qt/libbitcoinqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/libbitcoinqt_a-moc_addresstablemodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cppqt/libbitcoinqt_a-moc_addresstablemodel.obj: qt/moc_addresstablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o qt/libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/libbitcoinqt_a-moc_addresstablemodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`qt/libbitcoinqt_a-moc_askpassphrasedialog.o: qt/moc_askpassphrasedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o qt/libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/libbitcoinqt_a-moc_askpassphrasedialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cppqt/libbitcoinqt_a-moc_askpassphrasedialog.obj: qt/moc_askpassphrasedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o qt/libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/libbitcoinqt_a-moc_askpassphrasedialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.o: qt/moc_bitcoinaddressvalidator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cppqt/libbitcoinqt_a-moc_bitcoinaddressvalidator.obj: qt/moc_bitcoinaddressvalidator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`qt/libbitcoinqt_a-moc_bitcoinamountfield.o: qt/moc_bitcoinamountfield.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/libbitcoinqt_a-moc_bitcoinamountfield.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cppqt/libbitcoinqt_a-moc_bitcoinamountfield.obj: qt/moc_bitcoinamountfield.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/libbitcoinqt_a-moc_bitcoinamountfield.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`qt/libbitcoinqt_a-moc_bitcoingui.o: qt/moc_bitcoingui.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/libbitcoinqt_a-moc_bitcoingui.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cppqt/libbitcoinqt_a-moc_bitcoingui.obj: qt/moc_bitcoingui.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/libbitcoinqt_a-moc_bitcoingui.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`qt/libbitcoinqt_a-moc_bitcoinunits.o: qt/moc_bitcoinunits.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/libbitcoinqt_a-moc_bitcoinunits.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cppqt/libbitcoinqt_a-moc_bitcoinunits.obj: qt/moc_bitcoinunits.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o qt/libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/libbitcoinqt_a-moc_bitcoinunits.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`qt/libbitcoinqt_a-moc_clientmodel.o: qt/moc_clientmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_clientmodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo -c -o qt/libbitcoinqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/libbitcoinqt_a-moc_clientmodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cppqt/libbitcoinqt_a-moc_clientmodel.obj: qt/moc_clientmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo -c -o qt/libbitcoinqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/libbitcoinqt_a-moc_clientmodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`qt/libbitcoinqt_a-moc_csvmodelwriter.o: qt/moc_csvmodelwriter.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o qt/libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/libbitcoinqt_a-moc_csvmodelwriter.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cppqt/libbitcoinqt_a-moc_csvmodelwriter.obj: qt/moc_csvmodelwriter.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o qt/libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/libbitcoinqt_a-moc_csvmodelwriter.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`qt/libbitcoinqt_a-moc_coincontroldialog.o: qt/moc_coincontroldialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o qt/libbitcoinqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/libbitcoinqt_a-moc_coincontroldialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cppqt/libbitcoinqt_a-moc_coincontroldialog.obj: qt/moc_coincontroldialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o qt/libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/libbitcoinqt_a-moc_coincontroldialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`qt/libbitcoinqt_a-moc_coincontroltreewidget.o: qt/moc_coincontroltreewidget.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o qt/libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/libbitcoinqt_a-moc_coincontroltreewidget.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cppqt/libbitcoinqt_a-moc_coincontroltreewidget.obj: qt/moc_coincontroltreewidget.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o qt/libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/libbitcoinqt_a-moc_coincontroltreewidget.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`qt/libbitcoinqt_a-moc_editaddressdialog.o: qt/moc_editaddressdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o qt/libbitcoinqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/libbitcoinqt_a-moc_editaddressdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cppqt/libbitcoinqt_a-moc_editaddressdialog.obj: qt/moc_editaddressdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o qt/libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/libbitcoinqt_a-moc_editaddressdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`qt/libbitcoinqt_a-moc_guiutil.o: qt/moc_guiutil.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_guiutil.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo -c -o qt/libbitcoinqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/libbitcoinqt_a-moc_guiutil.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cppqt/libbitcoinqt_a-moc_guiutil.obj: qt/moc_guiutil.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_guiutil.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo -c -o qt/libbitcoinqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/libbitcoinqt_a-moc_guiutil.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`qt/libbitcoinqt_a-moc_macdockiconhandler.o: qt/moc_macdockiconhandler.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o qt/libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/libbitcoinqt_a-moc_macdockiconhandler.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cppqt/libbitcoinqt_a-moc_macdockiconhandler.obj: qt/moc_macdockiconhandler.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o qt/libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/libbitcoinqt_a-moc_macdockiconhandler.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`qt/libbitcoinqt_a-moc_macnotificationhandler.o: qt/moc_macnotificationhandler.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o qt/libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/libbitcoinqt_a-moc_macnotificationhandler.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cppqt/libbitcoinqt_a-moc_macnotificationhandler.obj: qt/moc_macnotificationhandler.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o qt/libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/libbitcoinqt_a-moc_macnotificationhandler.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`qt/libbitcoinqt_a-moc_monitoreddatamapper.o: qt/moc_monitoreddatamapper.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_monitoreddatamapper.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo -c -o qt/libbitcoinqt_a-moc_monitoreddatamapper.o `test -f 'qt/moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/moc_monitoreddatamapper.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po#	$(AM_V_CXX)source='qt/moc_monitoreddatamapper.cpp' object='qt/libbitcoinqt_a-moc_monitoreddatamapper.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_monitoreddatamapper.o `test -f 'qt/moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/moc_monitoreddatamapper.cppqt/libbitcoinqt_a-moc_monitoreddatamapper.obj: qt/moc_monitoreddatamapper.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_monitoreddatamapper.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo -c -o qt/libbitcoinqt_a-moc_monitoreddatamapper.obj `if test -f 'qt/moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_monitoreddatamapper.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po#	$(AM_V_CXX)source='qt/moc_monitoreddatamapper.cpp' object='qt/libbitcoinqt_a-moc_monitoreddatamapper.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_monitoreddatamapper.obj `if test -f 'qt/moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_monitoreddatamapper.cpp'; fi`qt/libbitcoinqt_a-moc_messagepage.o: qt/moc_messagepage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_messagepage.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Tpo -c -o qt/libbitcoinqt_a-moc_messagepage.o `test -f 'qt/moc_messagepage.cpp' || echo '$(srcdir)/'`qt/moc_messagepage.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Po#	$(AM_V_CXX)source='qt/moc_messagepage.cpp' object='qt/libbitcoinqt_a-moc_messagepage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_messagepage.o `test -f 'qt/moc_messagepage.cpp' || echo '$(srcdir)/'`qt/moc_messagepage.cppqt/libbitcoinqt_a-moc_messagepage.obj: qt/moc_messagepage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_messagepage.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Tpo -c -o qt/libbitcoinqt_a-moc_messagepage.obj `if test -f 'qt/moc_messagepage.cpp'; then $(CYGPATH_W) 'qt/moc_messagepage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_messagepage.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Po#	$(AM_V_CXX)source='qt/moc_messagepage.cpp' object='qt/libbitcoinqt_a-moc_messagepage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_messagepage.obj `if test -f 'qt/moc_messagepage.cpp'; then $(CYGPATH_W) 'qt/moc_messagepage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_messagepage.cpp'; fi`qt/libbitcoinqt_a-moc_messagemodel.o: qt/moc_messagemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_messagemodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Tpo -c -o qt/libbitcoinqt_a-moc_messagemodel.o `test -f 'qt/moc_messagemodel.cpp' || echo '$(srcdir)/'`qt/moc_messagemodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Po#	$(AM_V_CXX)source='qt/moc_messagemodel.cpp' object='qt/libbitcoinqt_a-moc_messagemodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_messagemodel.o `test -f 'qt/moc_messagemodel.cpp' || echo '$(srcdir)/'`qt/moc_messagemodel.cppqt/libbitcoinqt_a-moc_messagemodel.obj: qt/moc_messagemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_messagemodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Tpo -c -o qt/libbitcoinqt_a-moc_messagemodel.obj `if test -f 'qt/moc_messagemodel.cpp'; then $(CYGPATH_W) 'qt/moc_messagemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_messagemodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Po#	$(AM_V_CXX)source='qt/moc_messagemodel.cpp' object='qt/libbitcoinqt_a-moc_messagemodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_messagemodel.obj `if test -f 'qt/moc_messagemodel.cpp'; then $(CYGPATH_W) 'qt/moc_messagemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_messagemodel.cpp'; fi`qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.o: qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.o -MD -MP -MF qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Tpo -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.o `test -f 'qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp' || echo '$(srcdir)/'`qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp#	$(AM_V_at)$(am__mv) qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Tpo qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Po#	$(AM_V_CXX)source='qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp' object='qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.o `test -f 'qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp' || echo '$(srcdir)/'`qt/plugins/mrichtexteditor/moc_mrichtextedit.cppqt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.obj: qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.obj -MD -MP -MF qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Tpo -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.obj `if test -f 'qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp'; then $(CYGPATH_W) 'qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Tpo qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Po#	$(AM_V_CXX)source='qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp' object='qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/plugins/mrichtexteditor/libbitcoinqt_a-moc_mrichtextedit.obj `if test -f 'qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp'; then $(CYGPATH_W) 'qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/plugins/mrichtexteditor/moc_mrichtextedit.cpp'; fi`qt/libbitcoinqt_a-moc_notificator.o: qt/moc_notificator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_notificator.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo -c -o qt/libbitcoinqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/libbitcoinqt_a-moc_notificator.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cppqt/libbitcoinqt_a-moc_notificator.obj: qt/moc_notificator.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_notificator.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo -c -o qt/libbitcoinqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/libbitcoinqt_a-moc_notificator.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`qt/libbitcoinqt_a-moc_optionsdialog.o: qt/moc_optionsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo -c -o qt/libbitcoinqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/libbitcoinqt_a-moc_optionsdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cppqt/libbitcoinqt_a-moc_optionsdialog.obj: qt/moc_optionsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo -c -o qt/libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/libbitcoinqt_a-moc_optionsdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`qt/libbitcoinqt_a-moc_optionsmodel.o: qt/moc_optionsmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo -c -o qt/libbitcoinqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/libbitcoinqt_a-moc_optionsmodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cppqt/libbitcoinqt_a-moc_optionsmodel.obj: qt/moc_optionsmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo -c -o qt/libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/libbitcoinqt_a-moc_optionsmodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`qt/libbitcoinqt_a-moc_overviewpage.o: qt/moc_overviewpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_overviewpage.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo -c -o qt/libbitcoinqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/libbitcoinqt_a-moc_overviewpage.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cppqt/libbitcoinqt_a-moc_overviewpage.obj: qt/moc_overviewpage.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo -c -o qt/libbitcoinqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/libbitcoinqt_a-moc_overviewpage.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`qt/libbitcoinqt_a-moc_qvalidatedlineedit.o: qt/moc_qvalidatedlineedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/libbitcoinqt_a-moc_qvalidatedlineedit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cppqt/libbitcoinqt_a-moc_qvalidatedlineedit.obj: qt/moc_qvalidatedlineedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/libbitcoinqt_a-moc_qvalidatedlineedit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`qt/libbitcoinqt_a-moc_qvalidatedtextedit.o: qt/moc_qvalidatedtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qvalidatedtextedit.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Tpo -c -o qt/libbitcoinqt_a-moc_qvalidatedtextedit.o `test -f 'qt/moc_qvalidatedtextedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedtextedit.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Po#	$(AM_V_CXX)source='qt/moc_qvalidatedtextedit.cpp' object='qt/libbitcoinqt_a-moc_qvalidatedtextedit.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qvalidatedtextedit.o `test -f 'qt/moc_qvalidatedtextedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedtextedit.cppqt/libbitcoinqt_a-moc_qvalidatedtextedit.obj: qt/moc_qvalidatedtextedit.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qvalidatedtextedit.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Tpo -c -o qt/libbitcoinqt_a-moc_qvalidatedtextedit.obj `if test -f 'qt/moc_qvalidatedtextedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedtextedit.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Po#	$(AM_V_CXX)source='qt/moc_qvalidatedtextedit.cpp' object='qt/libbitcoinqt_a-moc_qvalidatedtextedit.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qvalidatedtextedit.obj `if test -f 'qt/moc_qvalidatedtextedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedtextedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedtextedit.cpp'; fi`qt/libbitcoinqt_a-moc_qvaluecombobox.o: qt/moc_qvaluecombobox.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o qt/libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/libbitcoinqt_a-moc_qvaluecombobox.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cppqt/libbitcoinqt_a-moc_qvaluecombobox.obj: qt/moc_qvaluecombobox.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o qt/libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/libbitcoinqt_a-moc_qvaluecombobox.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`qt/libbitcoinqt_a-moc_qrcodedialog.o: qt/moc_qrcodedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qrcodedialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Tpo -c -o qt/libbitcoinqt_a-moc_qrcodedialog.o `test -f 'qt/moc_qrcodedialog.cpp' || echo '$(srcdir)/'`qt/moc_qrcodedialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Po#	$(AM_V_CXX)source='qt/moc_qrcodedialog.cpp' object='qt/libbitcoinqt_a-moc_qrcodedialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qrcodedialog.o `test -f 'qt/moc_qrcodedialog.cpp' || echo '$(srcdir)/'`qt/moc_qrcodedialog.cppqt/libbitcoinqt_a-moc_qrcodedialog.obj: qt/moc_qrcodedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_qrcodedialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Tpo -c -o qt/libbitcoinqt_a-moc_qrcodedialog.obj `if test -f 'qt/moc_qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/moc_qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrcodedialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Po#	$(AM_V_CXX)source='qt/moc_qrcodedialog.cpp' object='qt/libbitcoinqt_a-moc_qrcodedialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_qrcodedialog.obj `if test -f 'qt/moc_qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/moc_qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrcodedialog.cpp'; fi`qt/libbitcoinqt_a-moc_rpcconsole.o: qt/moc_rpcconsole.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo -c -o qt/libbitcoinqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/libbitcoinqt_a-moc_rpcconsole.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cppqt/libbitcoinqt_a-moc_rpcconsole.obj: qt/moc_rpcconsole.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo -c -o qt/libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/libbitcoinqt_a-moc_rpcconsole.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`qt/libbitcoinqt_a-moc_sendcoinsdialog.o: qt/moc_sendcoinsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o qt/libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/libbitcoinqt_a-moc_sendcoinsdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cppqt/libbitcoinqt_a-moc_sendcoinsdialog.obj: qt/moc_sendcoinsdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o qt/libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/libbitcoinqt_a-moc_sendcoinsdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`qt/libbitcoinqt_a-moc_sendcoinsentry.o: qt/moc_sendcoinsentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o qt/libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/libbitcoinqt_a-moc_sendcoinsentry.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cppqt/libbitcoinqt_a-moc_sendcoinsentry.obj: qt/moc_sendcoinsentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o qt/libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/libbitcoinqt_a-moc_sendcoinsentry.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`qt/libbitcoinqt_a-moc_signverifymessagedialog.o: qt/moc_signverifymessagedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o qt/libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/libbitcoinqt_a-moc_signverifymessagedialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cppqt/libbitcoinqt_a-moc_signverifymessagedialog.obj: qt/moc_signverifymessagedialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o qt/libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/libbitcoinqt_a-moc_signverifymessagedialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`qt/libbitcoinqt_a-moc_sendmessagesdialog.o: qt/moc_sendmessagesdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendmessagesdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Tpo -c -o qt/libbitcoinqt_a-moc_sendmessagesdialog.o `test -f 'qt/moc_sendmessagesdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendmessagesdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Po#	$(AM_V_CXX)source='qt/moc_sendmessagesdialog.cpp' object='qt/libbitcoinqt_a-moc_sendmessagesdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendmessagesdialog.o `test -f 'qt/moc_sendmessagesdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendmessagesdialog.cppqt/libbitcoinqt_a-moc_sendmessagesdialog.obj: qt/moc_sendmessagesdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendmessagesdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Tpo -c -o qt/libbitcoinqt_a-moc_sendmessagesdialog.obj `if test -f 'qt/moc_sendmessagesdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendmessagesdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendmessagesdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Po#	$(AM_V_CXX)source='qt/moc_sendmessagesdialog.cpp' object='qt/libbitcoinqt_a-moc_sendmessagesdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendmessagesdialog.obj `if test -f 'qt/moc_sendmessagesdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendmessagesdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendmessagesdialog.cpp'; fi`qt/libbitcoinqt_a-moc_sendmessagesentry.o: qt/moc_sendmessagesentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendmessagesentry.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Tpo -c -o qt/libbitcoinqt_a-moc_sendmessagesentry.o `test -f 'qt/moc_sendmessagesentry.cpp' || echo '$(srcdir)/'`qt/moc_sendmessagesentry.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Po#	$(AM_V_CXX)source='qt/moc_sendmessagesentry.cpp' object='qt/libbitcoinqt_a-moc_sendmessagesentry.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendmessagesentry.o `test -f 'qt/moc_sendmessagesentry.cpp' || echo '$(srcdir)/'`qt/moc_sendmessagesentry.cppqt/libbitcoinqt_a-moc_sendmessagesentry.obj: qt/moc_sendmessagesentry.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_sendmessagesentry.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Tpo -c -o qt/libbitcoinqt_a-moc_sendmessagesentry.obj `if test -f 'qt/moc_sendmessagesentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendmessagesentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendmessagesentry.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Po#	$(AM_V_CXX)source='qt/moc_sendmessagesentry.cpp' object='qt/libbitcoinqt_a-moc_sendmessagesentry.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_sendmessagesentry.obj `if test -f 'qt/moc_sendmessagesentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendmessagesentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendmessagesentry.cpp'; fi`qt/libbitcoinqt_a-moc_transactiondesc.o: qt/moc_transactiondesc.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo -c -o qt/libbitcoinqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/libbitcoinqt_a-moc_transactiondesc.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cppqt/libbitcoinqt_a-moc_transactiondesc.obj: qt/moc_transactiondesc.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo -c -o qt/libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/libbitcoinqt_a-moc_transactiondesc.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`qt/libbitcoinqt_a-moc_transactiondescdialog.o: qt/moc_transactiondescdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o qt/libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/libbitcoinqt_a-moc_transactiondescdialog.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cppqt/libbitcoinqt_a-moc_transactiondescdialog.obj: qt/moc_transactiondescdialog.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o qt/libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/libbitcoinqt_a-moc_transactiondescdialog.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`qt/libbitcoinqt_a-moc_transactionfilterproxy.o: qt/moc_transactionfilterproxy.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o qt/libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/libbitcoinqt_a-moc_transactionfilterproxy.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cppqt/libbitcoinqt_a-moc_transactionfilterproxy.obj: qt/moc_transactionfilterproxy.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o qt/libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/libbitcoinqt_a-moc_transactionfilterproxy.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`qt/libbitcoinqt_a-moc_transactiontablemodel.o: qt/moc_transactiontablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o qt/libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/libbitcoinqt_a-moc_transactiontablemodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cppqt/libbitcoinqt_a-moc_transactiontablemodel.obj: qt/moc_transactiontablemodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o qt/libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/libbitcoinqt_a-moc_transactiontablemodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`qt/libbitcoinqt_a-moc_transactionview.o: qt/moc_transactionview.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactionview.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo -c -o qt/libbitcoinqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/libbitcoinqt_a-moc_transactionview.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cppqt/libbitcoinqt_a-moc_transactionview.obj: qt/moc_transactionview.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_transactionview.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo -c -o qt/libbitcoinqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/libbitcoinqt_a-moc_transactionview.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`qt/libbitcoinqt_a-moc_walletmodel.o: qt/moc_walletmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_walletmodel.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo -c -o qt/libbitcoinqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/libbitcoinqt_a-moc_walletmodel.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cppqt/libbitcoinqt_a-moc_walletmodel.obj: qt/moc_walletmodel.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-moc_walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo -c -o qt/libbitcoinqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/libbitcoinqt_a-moc_walletmodel.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`qt/libbitcoinqt_a-qrc_bitcoin.o: qt/qrc_bitcoin.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qrc_bitcoin.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo -c -o qt/libbitcoinqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/libbitcoinqt_a-qrc_bitcoin.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cppqt/libbitcoinqt_a-qrc_bitcoin.obj: qt/qrc_bitcoin.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qrc_bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo -c -o qt/libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/libbitcoinqt_a-qrc_bitcoin.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`qt/libbitcoinqt_a-qrc_bitcoin_locale.o: qt/qrc_bitcoin_locale.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qrc_bitcoin_locale.o -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Tpo -c -o qt/libbitcoinqt_a-qrc_bitcoin_locale.o `test -f 'qt/qrc_bitcoin_locale.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin_locale.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Po#	$(AM_V_CXX)source='qt/qrc_bitcoin_locale.cpp' object='qt/libbitcoinqt_a-qrc_bitcoin_locale.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qrc_bitcoin_locale.o `test -f 'qt/qrc_bitcoin_locale.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin_locale.cppqt/libbitcoinqt_a-qrc_bitcoin_locale.obj: qt/qrc_bitcoin_locale.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/libbitcoinqt_a-qrc_bitcoin_locale.obj -MD -MP -MF qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Tpo -c -o qt/libbitcoinqt_a-qrc_bitcoin_locale.obj `if test -f 'qt/qrc_bitcoin_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin_locale.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Tpo qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Po#	$(AM_V_CXX)source='qt/qrc_bitcoin_locale.cpp' object='qt/libbitcoinqt_a-qrc_bitcoin_locale.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/libbitcoinqt_a-qrc_bitcoin_locale.obj `if test -f 'qt/qrc_bitcoin_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin_locale.cpp'; fi`Armrd-daemon.o: daemon.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Armrd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Armrd-daemon.o -MD -MP -MF $(DEPDIR)/Armrd-daemon.Tpo -c -o Armrd-daemon.o `test -f 'daemon.cpp' || echo '$(srcdir)/'`daemon.cpp#	$(AM_V_at)$(am__mv) $(DEPDIR)/Armrd-daemon.Tpo $(DEPDIR)/Armrd-daemon.Po#	$(AM_V_CXX)source='daemon.cpp' object='Armrd-daemon.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Armrd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Armrd-daemon.o `test -f 'daemon.cpp' || echo '$(srcdir)/'`daemon.cppArmrd-daemon.obj: daemon.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Armrd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Armrd-daemon.obj -MD -MP -MF $(DEPDIR)/Armrd-daemon.Tpo -c -o Armrd-daemon.obj `if test -f 'daemon.cpp'; then $(CYGPATH_W) 'daemon.cpp'; else $(CYGPATH_W) '$(srcdir)/daemon.cpp'; fi`#	$(AM_V_at)$(am__mv) $(DEPDIR)/Armrd-daemon.Tpo $(DEPDIR)/Armrd-daemon.Po#	$(AM_V_CXX)source='daemon.cpp' object='Armrd-daemon.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Armrd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Armrd-daemon.obj `if test -f 'daemon.cpp'; then $(CYGPATH_W) 'daemon.cpp'; else $(CYGPATH_W) '$(srcdir)/daemon.cpp'; fi`qt/ARMR_qt-bitcoin.o: qt/bitcoin.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/ARMR_qt-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/ARMR_qt-bitcoin.Tpo -c -o qt/ARMR_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/ARMR_qt-bitcoin.Tpo qt/$(DEPDIR)/ARMR_qt-bitcoin.Po#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/ARMR_qt-bitcoin.o' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/ARMR_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cppqt/ARMR_qt-bitcoin.obj: qt/bitcoin.cpp#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/ARMR_qt-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/ARMR_qt-bitcoin.Tpo -c -o qt/ARMR_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/ARMR_qt-bitcoin.Tpo qt/$(DEPDIR)/ARMR_qt-bitcoin.Po#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/ARMR_qt-bitcoin.obj' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/ARMR_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`.cpp.o:#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_CXX)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<.cpp.obj:#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_CXX)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`.mm.obj:#	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\#	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\#	$(am__mv) $$depbase.Tpo $$depbase.Po#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no #	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) 	$(AM_V_OBJCXX)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`qt/ARMR_qt-macdockiconhandler.o: qt/macdockiconhandler.mm#	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/ARMR_qt-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Tpo -c -o qt/ARMR_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Po#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/ARMR_qt-macdockiconhandler.o' libtool=no #	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) 	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/ARMR_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mmqt/ARMR_qt-macdockiconhandler.obj: qt/macdockiconhandler.mm#	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/ARMR_qt-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Tpo -c -o qt/ARMR_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Po#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/ARMR_qt-macdockiconhandler.obj' libtool=no #	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) 	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/ARMR_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`qt/ARMR_qt-macnotificationhandler.o: qt/macnotificationhandler.mm#	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/ARMR_qt-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Tpo -c -o qt/ARMR_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Po#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/ARMR_qt-macnotificationhandler.o' libtool=no #	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) 	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/ARMR_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mmqt/ARMR_qt-macnotificationhandler.obj: qt/macnotificationhandler.mm#	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/ARMR_qt-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Tpo -c -o qt/ARMR_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`#	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Po#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/ARMR_qt-macnotificationhandler.obj' libtool=no #	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) 	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_ARMR_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/ARMR_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`ID: $(am__tagged_files)	$(am__define_uniq_tagged_files); mkid -fID $$uniquetags: tags-amTAGS: tagstags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)	set x; \	here=`pwd`; \	$(am__define_uniq_tagged_files); \	shift; \	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \	  test -n "$$unique" || unique=$$empty_fix; \	  if test $$# -gt 0; then \	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \	      "$$@" $$unique; \	  else \	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \	      $$unique; \	  fi; \	fictags: ctags-amCTAGS: ctagsctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)	$(am__define_uniq_tagged_files); \	test -z "$(CTAGS_ARGS)$$unique" \	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \	     $$uniqueGTAGS:	here=`$(am__cd) $(top_builddir) && pwd` \	  && $(am__cd) $(top_srcdir) \	  && gtags -i $(GTAGS_ARGS) "$$here"cscopelist: cscopelist-amcscopelist-am: $(am__tagged_files)	list='$(am__tagged_files)'; \	case "$(srcdir)" in \	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \	  *) sdir=$(subdir)/$(srcdir) ;; \	esac; \	for i in $$list; do \	  if test -f "$$i"; then \	    echo "$(subdir)/$$i"; \	  else \	    echo "$$sdir/$$i"; \	  fi; \	done >> $(top_builddir)/cscope.filesdistclean-tags:	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags# Recover from deleted '.trs' file; this should ensure that# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells# to avoid problems with "make -n"..log.trs:	rm -f $< $@	$(MAKE) $(AM_MAKEFLAGS) $<# Leading 'am--fnord' is there to ensure the list of targets does not# expand to empty, as could happen e.g. with make check TESTS=''.am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)am--force-recheck:	@:$(TEST_SUITE_LOG): $(TEST_LOGS)	@$(am__set_TESTS_bases); \	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \	redo_bases=`for i in $$bases; do \	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \	            done`; \	if test -n "$$redo_bases"; then \	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \	  if $(am__make_dryrun); then :; else \	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \	  fi; \	fi; \	if test -n "$$am__remaking_logs"; then \	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \	       "recursion detected" >&2; \	elif test -n "$$redo_logs"; then \	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \	fi; \	if $(am__make_dryrun); then :; else \	  st=0;  \	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \	  for i in $$redo_bases; do \	    test -f $$i.trs && test -r $$i.trs \	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \	    test -f $$i.log && test -r $$i.log \	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \	  done; \	  test $$st -eq 0 || exit 1; \	fi	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \	ws='[ 	]'; \	results=`for b in $$bases; do echo $$b.trs; done`; \	test -n "$$results" || results=/dev/null; \	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \	if test `expr $$fail + $$xpass + $$error` -eq 0; then \	  success=true; \	else \	  success=false; \	fi; \	br='==================='; br=$$br$$br$$br$$br; \	result_count () \	{ \	    if test x"$$1" = x"--maybe-color"; then \	      maybe_colorize=yes; \	    elif test x"$$1" = x"--no-color"; then \	      maybe_colorize=no; \	    else \	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \	    fi; \	    shift; \	    desc=$$1 count=$$2; \	    if test $$maybe_colorize = yes && test $$count -gt 0; then \	      color_start=$$3 color_end=$$std; \	    else \	      color_start= color_end=; \	    fi; \	    echo "$${color_start}# $$desc $$count$${color_end}"; \	}; \	create_testsuite_report () \	{ \	  result_count $$1 "TOTAL:" $$all   "$$brg"; \	  result_count $$1 "PASS: " $$pass  "$$grn"; \	  result_count $$1 "SKIP: " $$skip  "$$blu"; \	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \	  result_count $$1 "FAIL: " $$fail  "$$red"; \	  result_count $$1 "XPASS:" $$xpass "$$red"; \	  result_count $$1 "ERROR:" $$error "$$mgn"; \	}; \	{								\	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\	    $(am__rst_title);						\	  create_testsuite_report --no-color;				\	  echo;								\	  echo ".. contents:: :depth: 2";				\	  echo;								\	  for b in $$bases; do echo $$b; done				\	    | $(am__create_global_log);					\	} >$(TEST_SUITE_LOG).tmp || exit 1;				\	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\	if $$success; then						\	  col="$$grn";							\	 else								\	  col="$$red";							\	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\	fi;								\	echo "$${col}$$br$${std}"; 					\	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\	echo "$${col}$$br$${std}"; 					\	create_testsuite_report --maybe-color;				\	echo "$$col$$br$$std";						\	if $$success; then :; else					\	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\	  if test -n "$(PACKAGE_BUGREPORT)"; then			\	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\	  fi;								\	  echo "$$col$$br$$std";					\	fi;								\	$$success || exit 1check-TESTS: 	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)	@set +e; $(am__set_TESTS_bases); \	log_list=`for i in $$bases; do echo $$i.log; done`; \	trs_list=`for i in $$bases; do echo $$i.trs; done`; \	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \	exit $$?;recheck: all 	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)	@set +e; $(am__set_TESTS_bases); \	bases=`for i in $$bases; do echo $$i; done \	         | $(am__list_recheck_tests)` || exit 1; \	log_list=`for i in $$bases; do echo $$i.log; done`; \	log_list=`echo $$log_list`; \	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \	        am__force_recheck=am--force-recheck \	        TEST_LOGS="$$log_list"; \	exit $$?.test.log:	@p='$<'; \	$(am__set_b); \	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \	--log-file $$b.log --trs-file $$b.trs \	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \	"$$tst" $(AM_TESTS_FD_REDIRECT)#.test$(EXEEXT).log:#	@p='$<'; \#	$(am__set_b); \#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \#	--log-file $$b.log --trs-file $$b.trs \#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \#	"$$tst" $(AM_TESTS_FD_REDIRECT)distdir: $(BUILT_SOURCES)	$(MAKE) $(AM_MAKEFLAGS) distdir-amdistdir-am: $(DISTFILES)	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \	list='$(DISTFILES)'; \	  dist_files=`for file in $$list; do echo $$file; done | \	  sed -e "s|^$$srcdirstrip/||;t" \	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \	case $$dist_files in \	  */*) $(MKDIR_P) `echo "$$dist_files" | \			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \			   sort -u` ;; \	esac; \	for file in $$dist_files; do \	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \	  if test -d $$d/$$file; then \	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \	    if test -d "$(distdir)/$$file"; then \	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \	    fi; \	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \	    fi; \	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \	  else \	    test -f "$(distdir)/$$file" \	    || cp -p $$d/$$file "$(distdir)/$$file" \	    || exit 1; \	  fi; \	donecheck-am: all-am	$(MAKE) $(AM_MAKEFLAGS) check-TESTScheck: check-amall-am: Makefile $(PROGRAMS) $(LIBRARIES)installdirs:	for dir in "$(DESTDIR)$(bindir)"; do \	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \	doneinstall: install-aminstall-exec: install-exec-aminstall-data: install-data-amuninstall: uninstall-aminstall-am: all-am	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-aminstallcheck: installcheck-aminstall-strip:	if test -z '$(STRIP)'; then \	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \	      install; \	else \	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \	fimostlyclean-generic:	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)clean-generic:	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)distclean-generic:	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)	-rm -f compat/$(DEPDIR)/$(am__dirstamp)	-rm -f compat/$(am__dirstamp)	-rm -f leveldb/$(am__dirstamp)	-rm -f leveldb/db/$(DEPDIR)/$(am__dirstamp)	-rm -f leveldb/db/$(am__dirstamp)	-rm -f leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)	-rm -f leveldb/helpers/memenv/$(am__dirstamp)	-rm -f leveldb/port/$(DEPDIR)/$(am__dirstamp)	-rm -f leveldb/port/$(am__dirstamp)	-rm -f leveldb/table/$(DEPDIR)/$(am__dirstamp)	-rm -f leveldb/table/$(am__dirstamp)	-rm -f leveldb/util/$(DEPDIR)/$(am__dirstamp)	-rm -f leveldb/util/$(am__dirstamp)	-rm -f lz4/$(DEPDIR)/$(am__dirstamp)	-rm -f lz4/$(am__dirstamp)	-rm -f qt/$(DEPDIR)/$(am__dirstamp)	-rm -f qt/$(am__dirstamp)	-rm -f qt/plugins/mrichtexteditor/$(DEPDIR)/$(am__dirstamp)	-rm -f qt/plugins/mrichtexteditor/$(am__dirstamp)	-rm -f qt/res/$(DEPDIR)/$(am__dirstamp)	-rm -f qt/res/$(am__dirstamp)	-rm -f xxhash/$(DEPDIR)/$(am__dirstamp)	-rm -f xxhash/$(am__dirstamp)	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)maintainer-clean-generic:	@echo "This command is intended for maintainers to use"	@echo "it deletes files that may require special tools to rebuild."clean: clean-amclean-am: clean-binPROGRAMS clean-generic clean-local \	clean-noinstLIBRARIES mostlyclean-amdistclean: distclean-am		-rm -f ./$(DEPDIR)/Armrd-daemon.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-aes_helper.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-anonymize.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-blake.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-bmw.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-cubehash.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-echo.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-fugue.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-groestl.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-hamsi.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-hamsi_helper.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-hash.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-jh.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-keccak.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-kernel.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-key.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-luffa.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-miner.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-netbase.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-protocol.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-script.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-shavite.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-simd.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-skein.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-smessage.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-stealth.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-sync.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-util.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-version.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-addrman.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-alert.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-bloom.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-db.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-init.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-keystore.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-main.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-net.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-noui.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcmining.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcnet.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcsmessage.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-script.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Po	-rm -f ./$(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Po	-rm -f ./$(DEPDIR)/libbitcoin_util_a-sync.Po	-rm -f ./$(DEPDIR)/libbitcoin_util_a-util.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-crypter.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-scrypt.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-stealth.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-wallet.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-c.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po	-rm -f leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po	-rm -f leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Po	-rm -f leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-format.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-options.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-status.Po	-rm -f lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Po	-rm -f qt/$(DEPDIR)/ARMR_qt-bitcoin.Po	-rm -f qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Po	-rm -f qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-notificator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Po	-rm -f qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Po	-rm -f qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Po	-rm -f xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Po	-rm -f Makefiledistclean-am: clean-am distclean-compile distclean-generic \	distclean-tagsdvi: dvi-amdvi-am:html: html-amhtml-am:info: info-aminfo-am:install-data-am:install-dvi: install-dvi-aminstall-dvi-am:install-exec-am: install-binPROGRAMSinstall-html: install-html-aminstall-html-am:install-info: install-info-aminstall-info-am:install-man:install-pdf: install-pdf-aminstall-pdf-am:install-ps: install-ps-aminstall-ps-am:installcheck-am:maintainer-clean: maintainer-clean-am		-rm -f ./$(DEPDIR)/Armrd-daemon.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-aes_helper.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-anonymize.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-blake.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-bmw.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-cubehash.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-echo.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-fugue.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-groestl.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-hamsi.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-hamsi_helper.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-hash.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-jh.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-keccak.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-kernel.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-key.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-luffa.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-miner.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-netbase.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-protocol.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-script.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-shavite.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-simd.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-skein.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-smessage.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-stealth.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-sync.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-util.Po	-rm -f ./$(DEPDIR)/libbitcoin_common_a-version.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-addrman.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-alert.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-bloom.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-db.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-init.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-keystore.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-main.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-net.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-noui.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcmining.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcnet.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rpcsmessage.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-script.Po	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txdb-leveldb.Po	-rm -f ./$(DEPDIR)/libbitcoin_sse2_a-scrypt-sse2.Po	-rm -f ./$(DEPDIR)/libbitcoin_util_a-sync.Po	-rm -f ./$(DEPDIR)/libbitcoin_util_a-util.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-crypter.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-rpcsmessage.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-scrypt-sse2.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-scrypt.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-stealth.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-wallet.Po	-rm -f ./$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_compat.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-c.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po	-rm -f leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po	-rm -f leveldb/port/$(DEPDIR)/libleveldb_a-port_posix.Po	-rm -f leveldb/port/$(DEPDIR)/libleveldb_a-port_win.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-format.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_win.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-options.Po	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-status.Po	-rm -f lz4/$(DEPDIR)/libbitcoin_common_a-lz4.Po	-rm -f qt/$(DEPDIR)/ARMR_qt-bitcoin.Po	-rm -f qt/$(DEPDIR)/ARMR_qt-macdockiconhandler.Po	-rm -f qt/$(DEPDIR)/ARMR_qt-macnotificationhandler.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoin.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-clientmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-guiutil.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-messagemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-messagepage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_messagemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_messagepage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qrcodedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedtextedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_sendmessagesentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-notificator.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-overviewpage.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin_locale.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qrcodedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qtipcserver.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qvalidatedtextedit.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-sendmessagesentry.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-transactionview.Po	-rm -f qt/$(DEPDIR)/libbitcoinqt_a-walletmodel.Po	-rm -f qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-moc_mrichtextedit.Po	-rm -f qt/plugins/mrichtexteditor/$(DEPDIR)/libbitcoinqt_a-mrichtextedit.Po	-rm -f xxhash/$(DEPDIR)/libbitcoin_common_a-xxhash.Po	-rm -f Makefilemaintainer-clean-am: distclean-am maintainer-clean-genericmostlyclean: mostlyclean-ammostlyclean-am: mostlyclean-compile mostlyclean-genericpdf: pdf-ampdf-am:ps: ps-amps-am:uninstall-am: uninstall-binPROGRAMS.MAKE: check-am install-am install-strip.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \	check-am clean clean-binPROGRAMS clean-generic clean-local \	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \	distclean-compile distclean-generic distclean-tags distdir dvi \	dvi-am html html-am info info-am install install-am \	install-binPROGRAMS install-data install-data-am install-dvi \	install-dvi-am install-exec install-exec-am install-html \	install-html-am install-info install-info-am install-man \	install-pdf install-pdf-am install-ps install-ps-am \	install-strip installcheck installcheck-am installdirs \	maintainer-clean maintainer-clean-generic mostlyclean \	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \	recheck tags tags-am uninstall uninstall-am \	uninstall-binPROGRAMS.PRECIOUS: Makefile.PHONY: FORCEobj/build.h: FORCE	@$(MKDIR_P) $(builddir)/obj	@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \	  $(abs_top_srcdir)libbitcoin_util_a-version.$(OBJEXT): obj/build.hclean-local:	-$(MAKE) -C leveldb clean	r-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno	-rm -f config.h.rc.o:	@test -f $(WINDRES)	$(AM_V_GEN) $(WINDRES) -i $< -o $@.mm.o:	$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<%.pb.cc %.pb.h: %.proto	@test -f $(PROTOC)	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)# Most files will depend on the forms and moc files as includes. Generate them# before anything else.$(QT_MOC): $(QT_FORMS_H)$(qt_libbitcoinqt_a_OBJECTS) $(qt_ARMR_qt_OBJECTS) : | $(QT_MOC)#Generating these with a half-written protobuf header leads to wacky results.#This makes sure it's done.$(QT_MOC): $(PROTOBUF_H)$(QT_MOC_CPP): $(PROTOBUF_H).SECONDARY: $(QT_QM)qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_cli_a_SOURCES) $(libbitcoin_util_a_SOURCES)	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"	$(AM_V_GEN) cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.pytranslate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)	@test -f $(RCC)	@cp -f $< $(@D)/temp_$(<F)	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/temp_$(<F) | \	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@	@rm $(@D)/temp_$(<F)$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)	@test -f $(RCC)	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@bitcoin_qt_clean: FORCE   rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_ARMR_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)bitcoin_qt: qt/ARMR-qt$(EXEEXT)ui_%.h: %.ui	@test -f $(UIC)	@$(MKDIR_P) $(@D)	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)%.moc: %.cpp	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@moc_%.cpp: %.h	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@%.qm: %.ts	@test -f $(LRELEASE)	@$(MKDIR_P) $(@D)	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@# Tell versions [3.59,3.63) of GNU make to not export all variables.# Otherwise a system limit (for SysV at least) may be exceeded..NOEXPORT: